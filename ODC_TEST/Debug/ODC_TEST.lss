
ODC_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000294e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000011c  00800060  0000294e  000029e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  0080017c  0080017c  00002afe  2**0
                  ALLOC
  3 .stab         00002400  00000000  00000000  00002b00  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000016e7  00000000  00000000  00004f00  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  000065e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f2  00000000  00000000  00006787  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000240b  00000000  00000000  00006979  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001386  00000000  00000000  00008d84  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011d6  00000000  00000000  0000a10a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  0000b2e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002f6  00000000  00000000  0000b4a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000096e  00000000  00000000  0000b796  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000c104  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e4       	ldi	r30, 0x4E	; 78
      68:	f9 e2       	ldi	r31, 0x29	; 41
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ac 37       	cpi	r26, 0x7C	; 124
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ac e7       	ldi	r26, 0x7C	; 124
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ae 37       	cpi	r26, 0x7E	; 126
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 da 12 	call	0x25b4	; 0x25b4 <main>
      8a:	0c 94 a5 14 	jmp	0x294a	; 0x294a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 6e 14 	jmp	0x28dc	; 0x28dc <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 8a 14 	jmp	0x2914	; 0x2914 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 7a 14 	jmp	0x28f4	; 0x28f4 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 96 14 	jmp	0x292c	; 0x292c <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 7a 14 	jmp	0x28f4	; 0x28f4 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 96 14 	jmp	0x292c	; 0x292c <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 6e 14 	jmp	0x28dc	; 0x28dc <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 8a 14 	jmp	0x2914	; 0x2914 <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 76 14 	jmp	0x28ec	; 0x28ec <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e6       	ldi	r22, 0x60	; 96
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 92 14 	jmp	0x2924	; 0x2924 <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 7a 14 	jmp	0x28f4	; 0x28f4 <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 96 14 	jmp	0x292c	; 0x292c <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 7a 14 	jmp	0x28f4	; 0x28f4 <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 96 14 	jmp	0x292c	; 0x292c <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 7a 14 	jmp	0x28f4	; 0x28f4 <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 96 14 	jmp	0x292c	; 0x292c <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 7e 14 	jmp	0x28fc	; 0x28fc <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 46 06 	call	0xc8c	; 0xc8c <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 9a 14 	jmp	0x2934	; 0x2934 <__epilogue_restores__+0x20>

00000952 <__floatunsisf>:
     952:	a8 e0       	ldi	r26, 0x08	; 8
     954:	b0 e0       	ldi	r27, 0x00	; 0
     956:	ef ea       	ldi	r30, 0xAF	; 175
     958:	f4 e0       	ldi	r31, 0x04	; 4
     95a:	0c 94 76 14 	jmp	0x28ec	; 0x28ec <__prologue_saves__+0x10>
     95e:	7b 01       	movw	r14, r22
     960:	8c 01       	movw	r16, r24
     962:	61 15       	cp	r22, r1
     964:	71 05       	cpc	r23, r1
     966:	81 05       	cpc	r24, r1
     968:	91 05       	cpc	r25, r1
     96a:	19 f4       	brne	.+6      	; 0x972 <__floatunsisf+0x20>
     96c:	82 e0       	ldi	r24, 0x02	; 2
     96e:	89 83       	std	Y+1, r24	; 0x01
     970:	60 c0       	rjmp	.+192    	; 0xa32 <__floatunsisf+0xe0>
     972:	83 e0       	ldi	r24, 0x03	; 3
     974:	89 83       	std	Y+1, r24	; 0x01
     976:	8e e1       	ldi	r24, 0x1E	; 30
     978:	c8 2e       	mov	r12, r24
     97a:	d1 2c       	mov	r13, r1
     97c:	dc 82       	std	Y+4, r13	; 0x04
     97e:	cb 82       	std	Y+3, r12	; 0x03
     980:	ed 82       	std	Y+5, r14	; 0x05
     982:	fe 82       	std	Y+6, r15	; 0x06
     984:	0f 83       	std	Y+7, r16	; 0x07
     986:	18 87       	std	Y+8, r17	; 0x08
     988:	c8 01       	movw	r24, r16
     98a:	b7 01       	movw	r22, r14
     98c:	0e 94 22 05 	call	0xa44	; 0xa44 <__clzsi2>
     990:	fc 01       	movw	r30, r24
     992:	31 97       	sbiw	r30, 0x01	; 1
     994:	f7 ff       	sbrs	r31, 7
     996:	3b c0       	rjmp	.+118    	; 0xa0e <__floatunsisf+0xbc>
     998:	22 27       	eor	r18, r18
     99a:	33 27       	eor	r19, r19
     99c:	2e 1b       	sub	r18, r30
     99e:	3f 0b       	sbc	r19, r31
     9a0:	57 01       	movw	r10, r14
     9a2:	68 01       	movw	r12, r16
     9a4:	02 2e       	mov	r0, r18
     9a6:	04 c0       	rjmp	.+8      	; 0x9b0 <__floatunsisf+0x5e>
     9a8:	d6 94       	lsr	r13
     9aa:	c7 94       	ror	r12
     9ac:	b7 94       	ror	r11
     9ae:	a7 94       	ror	r10
     9b0:	0a 94       	dec	r0
     9b2:	d2 f7       	brpl	.-12     	; 0x9a8 <__floatunsisf+0x56>
     9b4:	40 e0       	ldi	r20, 0x00	; 0
     9b6:	50 e0       	ldi	r21, 0x00	; 0
     9b8:	60 e0       	ldi	r22, 0x00	; 0
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	81 e0       	ldi	r24, 0x01	; 1
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	a0 e0       	ldi	r26, 0x00	; 0
     9c2:	b0 e0       	ldi	r27, 0x00	; 0
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <__floatunsisf+0x7c>
     9c6:	88 0f       	add	r24, r24
     9c8:	99 1f       	adc	r25, r25
     9ca:	aa 1f       	adc	r26, r26
     9cc:	bb 1f       	adc	r27, r27
     9ce:	2a 95       	dec	r18
     9d0:	d2 f7       	brpl	.-12     	; 0x9c6 <__floatunsisf+0x74>
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	a1 09       	sbc	r26, r1
     9d6:	b1 09       	sbc	r27, r1
     9d8:	8e 21       	and	r24, r14
     9da:	9f 21       	and	r25, r15
     9dc:	a0 23       	and	r26, r16
     9de:	b1 23       	and	r27, r17
     9e0:	00 97       	sbiw	r24, 0x00	; 0
     9e2:	a1 05       	cpc	r26, r1
     9e4:	b1 05       	cpc	r27, r1
     9e6:	21 f0       	breq	.+8      	; 0x9f0 <__floatunsisf+0x9e>
     9e8:	41 e0       	ldi	r20, 0x01	; 1
     9ea:	50 e0       	ldi	r21, 0x00	; 0
     9ec:	60 e0       	ldi	r22, 0x00	; 0
     9ee:	70 e0       	ldi	r23, 0x00	; 0
     9f0:	4a 29       	or	r20, r10
     9f2:	5b 29       	or	r21, r11
     9f4:	6c 29       	or	r22, r12
     9f6:	7d 29       	or	r23, r13
     9f8:	4d 83       	std	Y+5, r20	; 0x05
     9fa:	5e 83       	std	Y+6, r21	; 0x06
     9fc:	6f 83       	std	Y+7, r22	; 0x07
     9fe:	78 87       	std	Y+8, r23	; 0x08
     a00:	8e e1       	ldi	r24, 0x1E	; 30
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	8e 1b       	sub	r24, r30
     a06:	9f 0b       	sbc	r25, r31
     a08:	9c 83       	std	Y+4, r25	; 0x04
     a0a:	8b 83       	std	Y+3, r24	; 0x03
     a0c:	12 c0       	rjmp	.+36     	; 0xa32 <__floatunsisf+0xe0>
     a0e:	30 97       	sbiw	r30, 0x00	; 0
     a10:	81 f0       	breq	.+32     	; 0xa32 <__floatunsisf+0xe0>
     a12:	0e 2e       	mov	r0, r30
     a14:	04 c0       	rjmp	.+8      	; 0xa1e <__floatunsisf+0xcc>
     a16:	ee 0c       	add	r14, r14
     a18:	ff 1c       	adc	r15, r15
     a1a:	00 1f       	adc	r16, r16
     a1c:	11 1f       	adc	r17, r17
     a1e:	0a 94       	dec	r0
     a20:	d2 f7       	brpl	.-12     	; 0xa16 <__floatunsisf+0xc4>
     a22:	ed 82       	std	Y+5, r14	; 0x05
     a24:	fe 82       	std	Y+6, r15	; 0x06
     a26:	0f 83       	std	Y+7, r16	; 0x07
     a28:	18 87       	std	Y+8, r17	; 0x08
     a2a:	ce 1a       	sub	r12, r30
     a2c:	df 0a       	sbc	r13, r31
     a2e:	dc 82       	std	Y+4, r13	; 0x04
     a30:	cb 82       	std	Y+3, r12	; 0x03
     a32:	1a 82       	std	Y+2, r1	; 0x02
     a34:	ce 01       	movw	r24, r28
     a36:	01 96       	adiw	r24, 0x01	; 1
     a38:	0e 94 71 05 	call	0xae2	; 0xae2 <__pack_f>
     a3c:	28 96       	adiw	r28, 0x08	; 8
     a3e:	ea e0       	ldi	r30, 0x0A	; 10
     a40:	0c 94 92 14 	jmp	0x2924	; 0x2924 <__epilogue_restores__+0x10>

00000a44 <__clzsi2>:
     a44:	ef 92       	push	r14
     a46:	ff 92       	push	r15
     a48:	0f 93       	push	r16
     a4a:	1f 93       	push	r17
     a4c:	7b 01       	movw	r14, r22
     a4e:	8c 01       	movw	r16, r24
     a50:	80 e0       	ldi	r24, 0x00	; 0
     a52:	e8 16       	cp	r14, r24
     a54:	80 e0       	ldi	r24, 0x00	; 0
     a56:	f8 06       	cpc	r15, r24
     a58:	81 e0       	ldi	r24, 0x01	; 1
     a5a:	08 07       	cpc	r16, r24
     a5c:	80 e0       	ldi	r24, 0x00	; 0
     a5e:	18 07       	cpc	r17, r24
     a60:	88 f4       	brcc	.+34     	; 0xa84 <__clzsi2+0x40>
     a62:	8f ef       	ldi	r24, 0xFF	; 255
     a64:	e8 16       	cp	r14, r24
     a66:	f1 04       	cpc	r15, r1
     a68:	01 05       	cpc	r16, r1
     a6a:	11 05       	cpc	r17, r1
     a6c:	31 f0       	breq	.+12     	; 0xa7a <__clzsi2+0x36>
     a6e:	28 f0       	brcs	.+10     	; 0xa7a <__clzsi2+0x36>
     a70:	88 e0       	ldi	r24, 0x08	; 8
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	a0 e0       	ldi	r26, 0x00	; 0
     a76:	b0 e0       	ldi	r27, 0x00	; 0
     a78:	17 c0       	rjmp	.+46     	; 0xaa8 <__clzsi2+0x64>
     a7a:	80 e0       	ldi	r24, 0x00	; 0
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	a0 e0       	ldi	r26, 0x00	; 0
     a80:	b0 e0       	ldi	r27, 0x00	; 0
     a82:	12 c0       	rjmp	.+36     	; 0xaa8 <__clzsi2+0x64>
     a84:	80 e0       	ldi	r24, 0x00	; 0
     a86:	e8 16       	cp	r14, r24
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	f8 06       	cpc	r15, r24
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	08 07       	cpc	r16, r24
     a90:	81 e0       	ldi	r24, 0x01	; 1
     a92:	18 07       	cpc	r17, r24
     a94:	28 f0       	brcs	.+10     	; 0xaa0 <__clzsi2+0x5c>
     a96:	88 e1       	ldi	r24, 0x18	; 24
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__clzsi2+0x64>
     aa0:	80 e1       	ldi	r24, 0x10	; 16
     aa2:	90 e0       	ldi	r25, 0x00	; 0
     aa4:	a0 e0       	ldi	r26, 0x00	; 0
     aa6:	b0 e0       	ldi	r27, 0x00	; 0
     aa8:	20 e2       	ldi	r18, 0x20	; 32
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	40 e0       	ldi	r20, 0x00	; 0
     aae:	50 e0       	ldi	r21, 0x00	; 0
     ab0:	28 1b       	sub	r18, r24
     ab2:	39 0b       	sbc	r19, r25
     ab4:	4a 0b       	sbc	r20, r26
     ab6:	5b 0b       	sbc	r21, r27
     ab8:	04 c0       	rjmp	.+8      	; 0xac2 <__clzsi2+0x7e>
     aba:	16 95       	lsr	r17
     abc:	07 95       	ror	r16
     abe:	f7 94       	ror	r15
     ac0:	e7 94       	ror	r14
     ac2:	8a 95       	dec	r24
     ac4:	d2 f7       	brpl	.-12     	; 0xaba <__clzsi2+0x76>
     ac6:	f7 01       	movw	r30, r14
     ac8:	e8 59       	subi	r30, 0x98	; 152
     aca:	ff 4f       	sbci	r31, 0xFF	; 255
     acc:	80 81       	ld	r24, Z
     ace:	28 1b       	sub	r18, r24
     ad0:	31 09       	sbc	r19, r1
     ad2:	41 09       	sbc	r20, r1
     ad4:	51 09       	sbc	r21, r1
     ad6:	c9 01       	movw	r24, r18
     ad8:	1f 91       	pop	r17
     ada:	0f 91       	pop	r16
     adc:	ff 90       	pop	r15
     ade:	ef 90       	pop	r14
     ae0:	08 95       	ret

00000ae2 <__pack_f>:
     ae2:	df 92       	push	r13
     ae4:	ef 92       	push	r14
     ae6:	ff 92       	push	r15
     ae8:	0f 93       	push	r16
     aea:	1f 93       	push	r17
     aec:	fc 01       	movw	r30, r24
     aee:	e4 80       	ldd	r14, Z+4	; 0x04
     af0:	f5 80       	ldd	r15, Z+5	; 0x05
     af2:	06 81       	ldd	r16, Z+6	; 0x06
     af4:	17 81       	ldd	r17, Z+7	; 0x07
     af6:	d1 80       	ldd	r13, Z+1	; 0x01
     af8:	80 81       	ld	r24, Z
     afa:	82 30       	cpi	r24, 0x02	; 2
     afc:	48 f4       	brcc	.+18     	; 0xb10 <__pack_f+0x2e>
     afe:	80 e0       	ldi	r24, 0x00	; 0
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	a0 e1       	ldi	r26, 0x10	; 16
     b04:	b0 e0       	ldi	r27, 0x00	; 0
     b06:	e8 2a       	or	r14, r24
     b08:	f9 2a       	or	r15, r25
     b0a:	0a 2b       	or	r16, r26
     b0c:	1b 2b       	or	r17, r27
     b0e:	a5 c0       	rjmp	.+330    	; 0xc5a <__pack_f+0x178>
     b10:	84 30       	cpi	r24, 0x04	; 4
     b12:	09 f4       	brne	.+2      	; 0xb16 <__pack_f+0x34>
     b14:	9f c0       	rjmp	.+318    	; 0xc54 <__pack_f+0x172>
     b16:	82 30       	cpi	r24, 0x02	; 2
     b18:	21 f4       	brne	.+8      	; 0xb22 <__pack_f+0x40>
     b1a:	ee 24       	eor	r14, r14
     b1c:	ff 24       	eor	r15, r15
     b1e:	87 01       	movw	r16, r14
     b20:	05 c0       	rjmp	.+10     	; 0xb2c <__pack_f+0x4a>
     b22:	e1 14       	cp	r14, r1
     b24:	f1 04       	cpc	r15, r1
     b26:	01 05       	cpc	r16, r1
     b28:	11 05       	cpc	r17, r1
     b2a:	19 f4       	brne	.+6      	; 0xb32 <__pack_f+0x50>
     b2c:	e0 e0       	ldi	r30, 0x00	; 0
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	96 c0       	rjmp	.+300    	; 0xc5e <__pack_f+0x17c>
     b32:	62 81       	ldd	r22, Z+2	; 0x02
     b34:	73 81       	ldd	r23, Z+3	; 0x03
     b36:	9f ef       	ldi	r25, 0xFF	; 255
     b38:	62 38       	cpi	r22, 0x82	; 130
     b3a:	79 07       	cpc	r23, r25
     b3c:	0c f0       	brlt	.+2      	; 0xb40 <__pack_f+0x5e>
     b3e:	5b c0       	rjmp	.+182    	; 0xbf6 <__pack_f+0x114>
     b40:	22 e8       	ldi	r18, 0x82	; 130
     b42:	3f ef       	ldi	r19, 0xFF	; 255
     b44:	26 1b       	sub	r18, r22
     b46:	37 0b       	sbc	r19, r23
     b48:	2a 31       	cpi	r18, 0x1A	; 26
     b4a:	31 05       	cpc	r19, r1
     b4c:	2c f0       	brlt	.+10     	; 0xb58 <__pack_f+0x76>
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	40 e0       	ldi	r20, 0x00	; 0
     b54:	50 e0       	ldi	r21, 0x00	; 0
     b56:	2a c0       	rjmp	.+84     	; 0xbac <__pack_f+0xca>
     b58:	b8 01       	movw	r22, r16
     b5a:	a7 01       	movw	r20, r14
     b5c:	02 2e       	mov	r0, r18
     b5e:	04 c0       	rjmp	.+8      	; 0xb68 <__pack_f+0x86>
     b60:	76 95       	lsr	r23
     b62:	67 95       	ror	r22
     b64:	57 95       	ror	r21
     b66:	47 95       	ror	r20
     b68:	0a 94       	dec	r0
     b6a:	d2 f7       	brpl	.-12     	; 0xb60 <__pack_f+0x7e>
     b6c:	81 e0       	ldi	r24, 0x01	; 1
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	a0 e0       	ldi	r26, 0x00	; 0
     b72:	b0 e0       	ldi	r27, 0x00	; 0
     b74:	04 c0       	rjmp	.+8      	; 0xb7e <__pack_f+0x9c>
     b76:	88 0f       	add	r24, r24
     b78:	99 1f       	adc	r25, r25
     b7a:	aa 1f       	adc	r26, r26
     b7c:	bb 1f       	adc	r27, r27
     b7e:	2a 95       	dec	r18
     b80:	d2 f7       	brpl	.-12     	; 0xb76 <__pack_f+0x94>
     b82:	01 97       	sbiw	r24, 0x01	; 1
     b84:	a1 09       	sbc	r26, r1
     b86:	b1 09       	sbc	r27, r1
     b88:	8e 21       	and	r24, r14
     b8a:	9f 21       	and	r25, r15
     b8c:	a0 23       	and	r26, r16
     b8e:	b1 23       	and	r27, r17
     b90:	00 97       	sbiw	r24, 0x00	; 0
     b92:	a1 05       	cpc	r26, r1
     b94:	b1 05       	cpc	r27, r1
     b96:	21 f0       	breq	.+8      	; 0xba0 <__pack_f+0xbe>
     b98:	81 e0       	ldi	r24, 0x01	; 1
     b9a:	90 e0       	ldi	r25, 0x00	; 0
     b9c:	a0 e0       	ldi	r26, 0x00	; 0
     b9e:	b0 e0       	ldi	r27, 0x00	; 0
     ba0:	9a 01       	movw	r18, r20
     ba2:	ab 01       	movw	r20, r22
     ba4:	28 2b       	or	r18, r24
     ba6:	39 2b       	or	r19, r25
     ba8:	4a 2b       	or	r20, r26
     baa:	5b 2b       	or	r21, r27
     bac:	da 01       	movw	r26, r20
     bae:	c9 01       	movw	r24, r18
     bb0:	8f 77       	andi	r24, 0x7F	; 127
     bb2:	90 70       	andi	r25, 0x00	; 0
     bb4:	a0 70       	andi	r26, 0x00	; 0
     bb6:	b0 70       	andi	r27, 0x00	; 0
     bb8:	80 34       	cpi	r24, 0x40	; 64
     bba:	91 05       	cpc	r25, r1
     bbc:	a1 05       	cpc	r26, r1
     bbe:	b1 05       	cpc	r27, r1
     bc0:	39 f4       	brne	.+14     	; 0xbd0 <__pack_f+0xee>
     bc2:	27 ff       	sbrs	r18, 7
     bc4:	09 c0       	rjmp	.+18     	; 0xbd8 <__pack_f+0xf6>
     bc6:	20 5c       	subi	r18, 0xC0	; 192
     bc8:	3f 4f       	sbci	r19, 0xFF	; 255
     bca:	4f 4f       	sbci	r20, 0xFF	; 255
     bcc:	5f 4f       	sbci	r21, 0xFF	; 255
     bce:	04 c0       	rjmp	.+8      	; 0xbd8 <__pack_f+0xf6>
     bd0:	21 5c       	subi	r18, 0xC1	; 193
     bd2:	3f 4f       	sbci	r19, 0xFF	; 255
     bd4:	4f 4f       	sbci	r20, 0xFF	; 255
     bd6:	5f 4f       	sbci	r21, 0xFF	; 255
     bd8:	e0 e0       	ldi	r30, 0x00	; 0
     bda:	f0 e0       	ldi	r31, 0x00	; 0
     bdc:	20 30       	cpi	r18, 0x00	; 0
     bde:	a0 e0       	ldi	r26, 0x00	; 0
     be0:	3a 07       	cpc	r19, r26
     be2:	a0 e0       	ldi	r26, 0x00	; 0
     be4:	4a 07       	cpc	r20, r26
     be6:	a0 e4       	ldi	r26, 0x40	; 64
     be8:	5a 07       	cpc	r21, r26
     bea:	10 f0       	brcs	.+4      	; 0xbf0 <__pack_f+0x10e>
     bec:	e1 e0       	ldi	r30, 0x01	; 1
     bee:	f0 e0       	ldi	r31, 0x00	; 0
     bf0:	79 01       	movw	r14, r18
     bf2:	8a 01       	movw	r16, r20
     bf4:	27 c0       	rjmp	.+78     	; 0xc44 <__pack_f+0x162>
     bf6:	60 38       	cpi	r22, 0x80	; 128
     bf8:	71 05       	cpc	r23, r1
     bfa:	64 f5       	brge	.+88     	; 0xc54 <__pack_f+0x172>
     bfc:	fb 01       	movw	r30, r22
     bfe:	e1 58       	subi	r30, 0x81	; 129
     c00:	ff 4f       	sbci	r31, 0xFF	; 255
     c02:	d8 01       	movw	r26, r16
     c04:	c7 01       	movw	r24, r14
     c06:	8f 77       	andi	r24, 0x7F	; 127
     c08:	90 70       	andi	r25, 0x00	; 0
     c0a:	a0 70       	andi	r26, 0x00	; 0
     c0c:	b0 70       	andi	r27, 0x00	; 0
     c0e:	80 34       	cpi	r24, 0x40	; 64
     c10:	91 05       	cpc	r25, r1
     c12:	a1 05       	cpc	r26, r1
     c14:	b1 05       	cpc	r27, r1
     c16:	39 f4       	brne	.+14     	; 0xc26 <__pack_f+0x144>
     c18:	e7 fe       	sbrs	r14, 7
     c1a:	0d c0       	rjmp	.+26     	; 0xc36 <__pack_f+0x154>
     c1c:	80 e4       	ldi	r24, 0x40	; 64
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	a0 e0       	ldi	r26, 0x00	; 0
     c22:	b0 e0       	ldi	r27, 0x00	; 0
     c24:	04 c0       	rjmp	.+8      	; 0xc2e <__pack_f+0x14c>
     c26:	8f e3       	ldi	r24, 0x3F	; 63
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	a0 e0       	ldi	r26, 0x00	; 0
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	e8 0e       	add	r14, r24
     c30:	f9 1e       	adc	r15, r25
     c32:	0a 1f       	adc	r16, r26
     c34:	1b 1f       	adc	r17, r27
     c36:	17 ff       	sbrs	r17, 7
     c38:	05 c0       	rjmp	.+10     	; 0xc44 <__pack_f+0x162>
     c3a:	16 95       	lsr	r17
     c3c:	07 95       	ror	r16
     c3e:	f7 94       	ror	r15
     c40:	e7 94       	ror	r14
     c42:	31 96       	adiw	r30, 0x01	; 1
     c44:	87 e0       	ldi	r24, 0x07	; 7
     c46:	16 95       	lsr	r17
     c48:	07 95       	ror	r16
     c4a:	f7 94       	ror	r15
     c4c:	e7 94       	ror	r14
     c4e:	8a 95       	dec	r24
     c50:	d1 f7       	brne	.-12     	; 0xc46 <__pack_f+0x164>
     c52:	05 c0       	rjmp	.+10     	; 0xc5e <__pack_f+0x17c>
     c54:	ee 24       	eor	r14, r14
     c56:	ff 24       	eor	r15, r15
     c58:	87 01       	movw	r16, r14
     c5a:	ef ef       	ldi	r30, 0xFF	; 255
     c5c:	f0 e0       	ldi	r31, 0x00	; 0
     c5e:	6e 2f       	mov	r22, r30
     c60:	67 95       	ror	r22
     c62:	66 27       	eor	r22, r22
     c64:	67 95       	ror	r22
     c66:	90 2f       	mov	r25, r16
     c68:	9f 77       	andi	r25, 0x7F	; 127
     c6a:	d7 94       	ror	r13
     c6c:	dd 24       	eor	r13, r13
     c6e:	d7 94       	ror	r13
     c70:	8e 2f       	mov	r24, r30
     c72:	86 95       	lsr	r24
     c74:	49 2f       	mov	r20, r25
     c76:	46 2b       	or	r20, r22
     c78:	58 2f       	mov	r21, r24
     c7a:	5d 29       	or	r21, r13
     c7c:	b7 01       	movw	r22, r14
     c7e:	ca 01       	movw	r24, r20
     c80:	1f 91       	pop	r17
     c82:	0f 91       	pop	r16
     c84:	ff 90       	pop	r15
     c86:	ef 90       	pop	r14
     c88:	df 90       	pop	r13
     c8a:	08 95       	ret

00000c8c <__unpack_f>:
     c8c:	fc 01       	movw	r30, r24
     c8e:	db 01       	movw	r26, r22
     c90:	40 81       	ld	r20, Z
     c92:	51 81       	ldd	r21, Z+1	; 0x01
     c94:	22 81       	ldd	r18, Z+2	; 0x02
     c96:	62 2f       	mov	r22, r18
     c98:	6f 77       	andi	r22, 0x7F	; 127
     c9a:	70 e0       	ldi	r23, 0x00	; 0
     c9c:	22 1f       	adc	r18, r18
     c9e:	22 27       	eor	r18, r18
     ca0:	22 1f       	adc	r18, r18
     ca2:	93 81       	ldd	r25, Z+3	; 0x03
     ca4:	89 2f       	mov	r24, r25
     ca6:	88 0f       	add	r24, r24
     ca8:	82 2b       	or	r24, r18
     caa:	28 2f       	mov	r18, r24
     cac:	30 e0       	ldi	r19, 0x00	; 0
     cae:	99 1f       	adc	r25, r25
     cb0:	99 27       	eor	r25, r25
     cb2:	99 1f       	adc	r25, r25
     cb4:	11 96       	adiw	r26, 0x01	; 1
     cb6:	9c 93       	st	X, r25
     cb8:	11 97       	sbiw	r26, 0x01	; 1
     cba:	21 15       	cp	r18, r1
     cbc:	31 05       	cpc	r19, r1
     cbe:	a9 f5       	brne	.+106    	; 0xd2a <__unpack_f+0x9e>
     cc0:	41 15       	cp	r20, r1
     cc2:	51 05       	cpc	r21, r1
     cc4:	61 05       	cpc	r22, r1
     cc6:	71 05       	cpc	r23, r1
     cc8:	11 f4       	brne	.+4      	; 0xcce <__unpack_f+0x42>
     cca:	82 e0       	ldi	r24, 0x02	; 2
     ccc:	37 c0       	rjmp	.+110    	; 0xd3c <__unpack_f+0xb0>
     cce:	82 e8       	ldi	r24, 0x82	; 130
     cd0:	9f ef       	ldi	r25, 0xFF	; 255
     cd2:	13 96       	adiw	r26, 0x03	; 3
     cd4:	9c 93       	st	X, r25
     cd6:	8e 93       	st	-X, r24
     cd8:	12 97       	sbiw	r26, 0x02	; 2
     cda:	9a 01       	movw	r18, r20
     cdc:	ab 01       	movw	r20, r22
     cde:	67 e0       	ldi	r22, 0x07	; 7
     ce0:	22 0f       	add	r18, r18
     ce2:	33 1f       	adc	r19, r19
     ce4:	44 1f       	adc	r20, r20
     ce6:	55 1f       	adc	r21, r21
     ce8:	6a 95       	dec	r22
     cea:	d1 f7       	brne	.-12     	; 0xce0 <__unpack_f+0x54>
     cec:	83 e0       	ldi	r24, 0x03	; 3
     cee:	8c 93       	st	X, r24
     cf0:	0d c0       	rjmp	.+26     	; 0xd0c <__unpack_f+0x80>
     cf2:	22 0f       	add	r18, r18
     cf4:	33 1f       	adc	r19, r19
     cf6:	44 1f       	adc	r20, r20
     cf8:	55 1f       	adc	r21, r21
     cfa:	12 96       	adiw	r26, 0x02	; 2
     cfc:	8d 91       	ld	r24, X+
     cfe:	9c 91       	ld	r25, X
     d00:	13 97       	sbiw	r26, 0x03	; 3
     d02:	01 97       	sbiw	r24, 0x01	; 1
     d04:	13 96       	adiw	r26, 0x03	; 3
     d06:	9c 93       	st	X, r25
     d08:	8e 93       	st	-X, r24
     d0a:	12 97       	sbiw	r26, 0x02	; 2
     d0c:	20 30       	cpi	r18, 0x00	; 0
     d0e:	80 e0       	ldi	r24, 0x00	; 0
     d10:	38 07       	cpc	r19, r24
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	48 07       	cpc	r20, r24
     d16:	80 e4       	ldi	r24, 0x40	; 64
     d18:	58 07       	cpc	r21, r24
     d1a:	58 f3       	brcs	.-42     	; 0xcf2 <__unpack_f+0x66>
     d1c:	14 96       	adiw	r26, 0x04	; 4
     d1e:	2d 93       	st	X+, r18
     d20:	3d 93       	st	X+, r19
     d22:	4d 93       	st	X+, r20
     d24:	5c 93       	st	X, r21
     d26:	17 97       	sbiw	r26, 0x07	; 7
     d28:	08 95       	ret
     d2a:	2f 3f       	cpi	r18, 0xFF	; 255
     d2c:	31 05       	cpc	r19, r1
     d2e:	79 f4       	brne	.+30     	; 0xd4e <__unpack_f+0xc2>
     d30:	41 15       	cp	r20, r1
     d32:	51 05       	cpc	r21, r1
     d34:	61 05       	cpc	r22, r1
     d36:	71 05       	cpc	r23, r1
     d38:	19 f4       	brne	.+6      	; 0xd40 <__unpack_f+0xb4>
     d3a:	84 e0       	ldi	r24, 0x04	; 4
     d3c:	8c 93       	st	X, r24
     d3e:	08 95       	ret
     d40:	64 ff       	sbrs	r22, 4
     d42:	03 c0       	rjmp	.+6      	; 0xd4a <__unpack_f+0xbe>
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	8c 93       	st	X, r24
     d48:	12 c0       	rjmp	.+36     	; 0xd6e <__unpack_f+0xe2>
     d4a:	1c 92       	st	X, r1
     d4c:	10 c0       	rjmp	.+32     	; 0xd6e <__unpack_f+0xe2>
     d4e:	2f 57       	subi	r18, 0x7F	; 127
     d50:	30 40       	sbci	r19, 0x00	; 0
     d52:	13 96       	adiw	r26, 0x03	; 3
     d54:	3c 93       	st	X, r19
     d56:	2e 93       	st	-X, r18
     d58:	12 97       	sbiw	r26, 0x02	; 2
     d5a:	83 e0       	ldi	r24, 0x03	; 3
     d5c:	8c 93       	st	X, r24
     d5e:	87 e0       	ldi	r24, 0x07	; 7
     d60:	44 0f       	add	r20, r20
     d62:	55 1f       	adc	r21, r21
     d64:	66 1f       	adc	r22, r22
     d66:	77 1f       	adc	r23, r23
     d68:	8a 95       	dec	r24
     d6a:	d1 f7       	brne	.-12     	; 0xd60 <__unpack_f+0xd4>
     d6c:	70 64       	ori	r23, 0x40	; 64
     d6e:	14 96       	adiw	r26, 0x04	; 4
     d70:	4d 93       	st	X+, r20
     d72:	5d 93       	st	X+, r21
     d74:	6d 93       	st	X+, r22
     d76:	7c 93       	st	X, r23
     d78:	17 97       	sbiw	r26, 0x07	; 7
     d7a:	08 95       	ret

00000d7c <__fpcmp_parts_f>:
     d7c:	1f 93       	push	r17
     d7e:	dc 01       	movw	r26, r24
     d80:	fb 01       	movw	r30, r22
     d82:	9c 91       	ld	r25, X
     d84:	92 30       	cpi	r25, 0x02	; 2
     d86:	08 f4       	brcc	.+2      	; 0xd8a <__fpcmp_parts_f+0xe>
     d88:	47 c0       	rjmp	.+142    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d8a:	80 81       	ld	r24, Z
     d8c:	82 30       	cpi	r24, 0x02	; 2
     d8e:	08 f4       	brcc	.+2      	; 0xd92 <__fpcmp_parts_f+0x16>
     d90:	43 c0       	rjmp	.+134    	; 0xe18 <__fpcmp_parts_f+0x9c>
     d92:	94 30       	cpi	r25, 0x04	; 4
     d94:	51 f4       	brne	.+20     	; 0xdaa <__fpcmp_parts_f+0x2e>
     d96:	11 96       	adiw	r26, 0x01	; 1
     d98:	1c 91       	ld	r17, X
     d9a:	84 30       	cpi	r24, 0x04	; 4
     d9c:	99 f5       	brne	.+102    	; 0xe04 <__fpcmp_parts_f+0x88>
     d9e:	81 81       	ldd	r24, Z+1	; 0x01
     da0:	68 2f       	mov	r22, r24
     da2:	70 e0       	ldi	r23, 0x00	; 0
     da4:	61 1b       	sub	r22, r17
     da6:	71 09       	sbc	r23, r1
     da8:	3f c0       	rjmp	.+126    	; 0xe28 <__fpcmp_parts_f+0xac>
     daa:	84 30       	cpi	r24, 0x04	; 4
     dac:	21 f0       	breq	.+8      	; 0xdb6 <__fpcmp_parts_f+0x3a>
     dae:	92 30       	cpi	r25, 0x02	; 2
     db0:	31 f4       	brne	.+12     	; 0xdbe <__fpcmp_parts_f+0x42>
     db2:	82 30       	cpi	r24, 0x02	; 2
     db4:	b9 f1       	breq	.+110    	; 0xe24 <__fpcmp_parts_f+0xa8>
     db6:	81 81       	ldd	r24, Z+1	; 0x01
     db8:	88 23       	and	r24, r24
     dba:	89 f1       	breq	.+98     	; 0xe1e <__fpcmp_parts_f+0xa2>
     dbc:	2d c0       	rjmp	.+90     	; 0xe18 <__fpcmp_parts_f+0x9c>
     dbe:	11 96       	adiw	r26, 0x01	; 1
     dc0:	1c 91       	ld	r17, X
     dc2:	11 97       	sbiw	r26, 0x01	; 1
     dc4:	82 30       	cpi	r24, 0x02	; 2
     dc6:	f1 f0       	breq	.+60     	; 0xe04 <__fpcmp_parts_f+0x88>
     dc8:	81 81       	ldd	r24, Z+1	; 0x01
     dca:	18 17       	cp	r17, r24
     dcc:	d9 f4       	brne	.+54     	; 0xe04 <__fpcmp_parts_f+0x88>
     dce:	12 96       	adiw	r26, 0x02	; 2
     dd0:	2d 91       	ld	r18, X+
     dd2:	3c 91       	ld	r19, X
     dd4:	13 97       	sbiw	r26, 0x03	; 3
     dd6:	82 81       	ldd	r24, Z+2	; 0x02
     dd8:	93 81       	ldd	r25, Z+3	; 0x03
     dda:	82 17       	cp	r24, r18
     ddc:	93 07       	cpc	r25, r19
     dde:	94 f0       	brlt	.+36     	; 0xe04 <__fpcmp_parts_f+0x88>
     de0:	28 17       	cp	r18, r24
     de2:	39 07       	cpc	r19, r25
     de4:	bc f0       	brlt	.+46     	; 0xe14 <__fpcmp_parts_f+0x98>
     de6:	14 96       	adiw	r26, 0x04	; 4
     de8:	8d 91       	ld	r24, X+
     dea:	9d 91       	ld	r25, X+
     dec:	0d 90       	ld	r0, X+
     dee:	bc 91       	ld	r27, X
     df0:	a0 2d       	mov	r26, r0
     df2:	24 81       	ldd	r18, Z+4	; 0x04
     df4:	35 81       	ldd	r19, Z+5	; 0x05
     df6:	46 81       	ldd	r20, Z+6	; 0x06
     df8:	57 81       	ldd	r21, Z+7	; 0x07
     dfa:	28 17       	cp	r18, r24
     dfc:	39 07       	cpc	r19, r25
     dfe:	4a 07       	cpc	r20, r26
     e00:	5b 07       	cpc	r21, r27
     e02:	18 f4       	brcc	.+6      	; 0xe0a <__fpcmp_parts_f+0x8e>
     e04:	11 23       	and	r17, r17
     e06:	41 f0       	breq	.+16     	; 0xe18 <__fpcmp_parts_f+0x9c>
     e08:	0a c0       	rjmp	.+20     	; 0xe1e <__fpcmp_parts_f+0xa2>
     e0a:	82 17       	cp	r24, r18
     e0c:	93 07       	cpc	r25, r19
     e0e:	a4 07       	cpc	r26, r20
     e10:	b5 07       	cpc	r27, r21
     e12:	40 f4       	brcc	.+16     	; 0xe24 <__fpcmp_parts_f+0xa8>
     e14:	11 23       	and	r17, r17
     e16:	19 f0       	breq	.+6      	; 0xe1e <__fpcmp_parts_f+0xa2>
     e18:	61 e0       	ldi	r22, 0x01	; 1
     e1a:	70 e0       	ldi	r23, 0x00	; 0
     e1c:	05 c0       	rjmp	.+10     	; 0xe28 <__fpcmp_parts_f+0xac>
     e1e:	6f ef       	ldi	r22, 0xFF	; 255
     e20:	7f ef       	ldi	r23, 0xFF	; 255
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <__fpcmp_parts_f+0xac>
     e24:	60 e0       	ldi	r22, 0x00	; 0
     e26:	70 e0       	ldi	r23, 0x00	; 0
     e28:	cb 01       	movw	r24, r22
     e2a:	1f 91       	pop	r17
     e2c:	08 95       	ret

00000e2e <M_Timer_Init_Interrupt_Normal>:


#include "M_Timer_Driver.h"
#include <avr/interrupt.h>
#define F_CPU 1000000UL
void M_Timer_Init_Interrupt_Normal(u32 delay_ms,u32 prescaler){
     e2e:	ef 92       	push	r14
     e30:	ff 92       	push	r15
     e32:	0f 93       	push	r16
     e34:	1f 93       	push	r17
     e36:	df 93       	push	r29
     e38:	cf 93       	push	r28
     e3a:	cd b7       	in	r28, 0x3d	; 61
     e3c:	de b7       	in	r29, 0x3e	; 62
     e3e:	61 97       	sbiw	r28, 0x11	; 17
     e40:	0f b6       	in	r0, 0x3f	; 63
     e42:	f8 94       	cli
     e44:	de bf       	out	0x3e, r29	; 62
     e46:	0f be       	out	0x3f, r0	; 63
     e48:	cd bf       	out	0x3d, r28	; 61
     e4a:	9f 87       	std	Y+15, r25	; 0x0f
     e4c:	8e 87       	std	Y+14, r24	; 0x0e
     e4e:	79 8b       	std	Y+17, r23	; 0x11
     e50:	68 8b       	std	Y+16, r22	; 0x10
	u32 overFlowCounter=0,numOfOverFlow=0;
     e52:	1d 86       	std	Y+13, r1	; 0x0d
     e54:	1c 86       	std	Y+12, r1	; 0x0c
     e56:	1b 86       	std	Y+11, r1	; 0x0b
     e58:	1a 86       	std	Y+10, r1	; 0x0a
	u8 initial_value=0;
     e5a:	19 86       	std	Y+9, r1	; 0x09
	float T_tick=1/(F_CPU/prescaler);// 256Msec
     e5c:	88 89       	ldd	r24, Y+16	; 0x10
     e5e:	99 89       	ldd	r25, Y+17	; 0x11
     e60:	9c 01       	movw	r18, r24
     e62:	40 e0       	ldi	r20, 0x00	; 0
     e64:	50 e0       	ldi	r21, 0x00	; 0
     e66:	80 e4       	ldi	r24, 0x40	; 64
     e68:	92 e4       	ldi	r25, 0x42	; 66
     e6a:	af e0       	ldi	r26, 0x0F	; 15
     e6c:	b0 e0       	ldi	r27, 0x00	; 0
     e6e:	bc 01       	movw	r22, r24
     e70:	cd 01       	movw	r24, r26
     e72:	0e 94 38 14 	call	0x2870	; 0x2870 <__udivmodsi4>
     e76:	da 01       	movw	r26, r20
     e78:	c9 01       	movw	r24, r18
     e7a:	9c 01       	movw	r18, r24
     e7c:	ad 01       	movw	r20, r26
     e7e:	81 e0       	ldi	r24, 0x01	; 1
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	a0 e0       	ldi	r26, 0x00	; 0
     e84:	b0 e0       	ldi	r27, 0x00	; 0
     e86:	bc 01       	movw	r22, r24
     e88:	cd 01       	movw	r24, r26
     e8a:	0e 94 38 14 	call	0x2870	; 0x2870 <__udivmodsi4>
     e8e:	da 01       	movw	r26, r20
     e90:	c9 01       	movw	r24, r18
     e92:	bc 01       	movw	r22, r24
     e94:	cd 01       	movw	r24, r26
     e96:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
     e9a:	dc 01       	movw	r26, r24
     e9c:	cb 01       	movw	r24, r22
     e9e:	8d 83       	std	Y+5, r24	; 0x05
     ea0:	9e 83       	std	Y+6, r25	; 0x06
     ea2:	af 83       	std	Y+7, r26	; 0x07
     ea4:	b8 87       	std	Y+8, r27	; 0x08
	float maxDelay=T_tick*REGISTER_8BIT_VALUE;
     ea6:	6d 81       	ldd	r22, Y+5	; 0x05
     ea8:	7e 81       	ldd	r23, Y+6	; 0x06
     eaa:	8f 81       	ldd	r24, Y+7	; 0x07
     eac:	98 85       	ldd	r25, Y+8	; 0x08
     eae:	20 e0       	ldi	r18, 0x00	; 0
     eb0:	30 e0       	ldi	r19, 0x00	; 0
     eb2:	40 e8       	ldi	r20, 0x80	; 128
     eb4:	53 e4       	ldi	r21, 0x43	; 67
     eb6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     eba:	dc 01       	movw	r26, r24
     ebc:	cb 01       	movw	r24, r22
     ebe:	89 83       	std	Y+1, r24	; 0x01
     ec0:	9a 83       	std	Y+2, r25	; 0x02
     ec2:	ab 83       	std	Y+3, r26	; 0x03
     ec4:	bc 83       	std	Y+4, r27	; 0x04
	sei(); //1.Enable Interrupt
     ec6:	78 94       	sei
	SET_BIT(M_TIMER_TIMSK,0);
     ec8:	ac e5       	ldi	r26, 0x5C	; 92
     eca:	b0 e0       	ldi	r27, 0x00	; 0
     ecc:	ec e5       	ldi	r30, 0x5C	; 92
     ece:	f0 e0       	ldi	r31, 0x00	; 0
     ed0:	80 81       	ld	r24, Z
     ed2:	81 60       	ori	r24, 0x01	; 1
     ed4:	8c 93       	st	X, r24
	if (delay_ms>(maxDelay*1000)){
     ed6:	8e 85       	ldd	r24, Y+14	; 0x0e
     ed8:	9f 85       	ldd	r25, Y+15	; 0x0f
     eda:	cc 01       	movw	r24, r24
     edc:	a0 e0       	ldi	r26, 0x00	; 0
     ede:	b0 e0       	ldi	r27, 0x00	; 0
     ee0:	bc 01       	movw	r22, r24
     ee2:	cd 01       	movw	r24, r26
     ee4:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
     ee8:	7b 01       	movw	r14, r22
     eea:	8c 01       	movw	r16, r24
     eec:	69 81       	ldd	r22, Y+1	; 0x01
     eee:	7a 81       	ldd	r23, Y+2	; 0x02
     ef0:	8b 81       	ldd	r24, Y+3	; 0x03
     ef2:	9c 81       	ldd	r25, Y+4	; 0x04
     ef4:	20 e0       	ldi	r18, 0x00	; 0
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	4a e7       	ldi	r20, 0x7A	; 122
     efa:	54 e4       	ldi	r21, 0x44	; 68
     efc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     f00:	dc 01       	movw	r26, r24
     f02:	cb 01       	movw	r24, r22
     f04:	9c 01       	movw	r18, r24
     f06:	ad 01       	movw	r20, r26
     f08:	c8 01       	movw	r24, r16
     f0a:	b7 01       	movw	r22, r14
     f0c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
     f10:	18 16       	cp	r1, r24
     f12:	0c f0       	brlt	.+2      	; 0xf16 <M_Timer_Init_Interrupt_Normal+0xe8>
     f14:	4a c0       	rjmp	.+148    	; 0xfaa <M_Timer_Init_Interrupt_Normal+0x17c>

		numOfOverFlow=(delay_ms/maxDelay);
     f16:	8e 85       	ldd	r24, Y+14	; 0x0e
     f18:	9f 85       	ldd	r25, Y+15	; 0x0f
     f1a:	cc 01       	movw	r24, r24
     f1c:	a0 e0       	ldi	r26, 0x00	; 0
     f1e:	b0 e0       	ldi	r27, 0x00	; 0
     f20:	bc 01       	movw	r22, r24
     f22:	cd 01       	movw	r24, r26
     f24:	0e 94 a9 04 	call	0x952	; 0x952 <__floatunsisf>
     f28:	dc 01       	movw	r26, r24
     f2a:	cb 01       	movw	r24, r22
     f2c:	bc 01       	movw	r22, r24
     f2e:	cd 01       	movw	r24, r26
     f30:	29 81       	ldd	r18, Y+1	; 0x01
     f32:	3a 81       	ldd	r19, Y+2	; 0x02
     f34:	4b 81       	ldd	r20, Y+3	; 0x03
     f36:	5c 81       	ldd	r21, Y+4	; 0x04
     f38:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
     f3c:	dc 01       	movw	r26, r24
     f3e:	cb 01       	movw	r24, r22
     f40:	bc 01       	movw	r22, r24
     f42:	cd 01       	movw	r24, r26
     f44:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     f48:	dc 01       	movw	r26, r24
     f4a:	cb 01       	movw	r24, r22
     f4c:	9b 87       	std	Y+11, r25	; 0x0b
     f4e:	8a 87       	std	Y+10, r24	; 0x0a
		M_TIMER_TCNT0=initial_value;      //2.set initial value for timer
     f50:	e2 e5       	ldi	r30, 0x52	; 82
     f52:	f0 e0       	ldi	r31, 0x00	; 0
     f54:	89 85       	ldd	r24, Y+9	; 0x09
     f56:	80 83       	st	Z, r24
		//3.start timing by select prescaling from TCCR0 reg
				SET_BIT(M_TIMER_TCCR0,CS02);
     f58:	a3 e5       	ldi	r26, 0x53	; 83
     f5a:	b0 e0       	ldi	r27, 0x00	; 0
     f5c:	e3 e5       	ldi	r30, 0x53	; 83
     f5e:	f0 e0       	ldi	r31, 0x00	; 0
     f60:	80 81       	ld	r24, Z
     f62:	84 60       	ori	r24, 0x04	; 4
     f64:	8c 93       	st	X, r24
     f66:	15 c0       	rjmp	.+42     	; 0xf92 <M_Timer_Init_Interrupt_Normal+0x164>
			while(overFlowCounter<=numOfOverFlow)
					{
						while(READ_BIT(M_TIMER_TIFR,0)==0);
     f68:	e8 e5       	ldi	r30, 0x58	; 88
     f6a:	f0 e0       	ldi	r31, 0x00	; 0
     f6c:	80 81       	ld	r24, Z
     f6e:	88 2f       	mov	r24, r24
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	81 70       	andi	r24, 0x01	; 1
     f74:	90 70       	andi	r25, 0x00	; 0
     f76:	00 97       	sbiw	r24, 0x00	; 0
     f78:	b9 f3       	breq	.-18     	; 0xf68 <M_Timer_Init_Interrupt_Normal+0x13a>
						//clear overflow flag
						M_TIMER_TIFR|=(1<<0);
     f7a:	a8 e5       	ldi	r26, 0x58	; 88
     f7c:	b0 e0       	ldi	r27, 0x00	; 0
     f7e:	e8 e5       	ldi	r30, 0x58	; 88
     f80:	f0 e0       	ldi	r31, 0x00	; 0
     f82:	80 81       	ld	r24, Z
     f84:	81 60       	ori	r24, 0x01	; 1
     f86:	8c 93       	st	X, r24
						overFlowCounter++;
     f88:	8c 85       	ldd	r24, Y+12	; 0x0c
     f8a:	9d 85       	ldd	r25, Y+13	; 0x0d
     f8c:	01 96       	adiw	r24, 0x01	; 1
     f8e:	9d 87       	std	Y+13, r25	; 0x0d
     f90:	8c 87       	std	Y+12, r24	; 0x0c

		numOfOverFlow=(delay_ms/maxDelay);
		M_TIMER_TCNT0=initial_value;      //2.set initial value for timer
		//3.start timing by select prescaling from TCCR0 reg
				SET_BIT(M_TIMER_TCCR0,CS02);
			while(overFlowCounter<=numOfOverFlow)
     f92:	2c 85       	ldd	r18, Y+12	; 0x0c
     f94:	3d 85       	ldd	r19, Y+13	; 0x0d
     f96:	8a 85       	ldd	r24, Y+10	; 0x0a
     f98:	9b 85       	ldd	r25, Y+11	; 0x0b
     f9a:	82 17       	cp	r24, r18
     f9c:	93 07       	cpc	r25, r19
     f9e:	20 f7       	brcc	.-56     	; 0xf68 <M_Timer_Init_Interrupt_Normal+0x13a>
						while(READ_BIT(M_TIMER_TIFR,0)==0);
						//clear overflow flag
						M_TIMER_TIFR|=(1<<0);
						overFlowCounter++;
					}
			overFlowCounter=0;
     fa0:	1d 86       	std	Y+13, r1	; 0x0d
     fa2:	1c 86       	std	Y+12, r1	; 0x0c
					//stop timer
			M_TIMER_TCCR0=0x00;
     fa4:	e3 e5       	ldi	r30, 0x53	; 83
     fa6:	f0 e0       	ldi	r31, 0x00	; 0
     fa8:	10 82       	st	Z, r1


	}


}
     faa:	61 96       	adiw	r28, 0x11	; 17
     fac:	0f b6       	in	r0, 0x3f	; 63
     fae:	f8 94       	cli
     fb0:	de bf       	out	0x3e, r29	; 62
     fb2:	0f be       	out	0x3f, r0	; 63
     fb4:	cd bf       	out	0x3d, r28	; 61
     fb6:	cf 91       	pop	r28
     fb8:	df 91       	pop	r29
     fba:	1f 91       	pop	r17
     fbc:	0f 91       	pop	r16
     fbe:	ff 90       	pop	r15
     fc0:	ef 90       	pop	r14
     fc2:	08 95       	ret

00000fc4 <M_DIO_SetPinDirection>:
 *  Created on: Sep 5, 2024
 *      Author: Afrotto
 */
#include "M_DIO_Init.h"

ERROR_STATE_T M_DIO_SetPinDirection(u8 portName,u8 pinNumber,u8 dir){
     fc4:	df 93       	push	r29
     fc6:	cf 93       	push	r28
     fc8:	cd b7       	in	r28, 0x3d	; 61
     fca:	de b7       	in	r29, 0x3e	; 62
     fcc:	28 97       	sbiw	r28, 0x08	; 8
     fce:	0f b6       	in	r0, 0x3f	; 63
     fd0:	f8 94       	cli
     fd2:	de bf       	out	0x3e, r29	; 62
     fd4:	0f be       	out	0x3f, r0	; 63
     fd6:	cd bf       	out	0x3d, r28	; 61
     fd8:	8a 83       	std	Y+2, r24	; 0x02
     fda:	6b 83       	std	Y+3, r22	; 0x03
     fdc:	4c 83       	std	Y+4, r20	; 0x04
	ERROR_STATE_T retVal=NOK;
     fde:	19 82       	std	Y+1, r1	; 0x01
	if ((pinNumber>=PIN0) && (pinNumber<=PIN7))
     fe0:	8b 81       	ldd	r24, Y+3	; 0x03
     fe2:	88 30       	cpi	r24, 0x08	; 8
     fe4:	08 f0       	brcs	.+2      	; 0xfe8 <M_DIO_SetPinDirection+0x24>
     fe6:	ea c0       	rjmp	.+468    	; 0x11bc <M_DIO_SetPinDirection+0x1f8>
	{
		if (dir==OUTPUT)
     fe8:	8c 81       	ldd	r24, Y+4	; 0x04
     fea:	81 30       	cpi	r24, 0x01	; 1
     fec:	09 f0       	breq	.+2      	; 0xff0 <M_DIO_SetPinDirection+0x2c>
     fee:	6f c0       	rjmp	.+222    	; 0x10ce <M_DIO_SetPinDirection+0x10a>
		{
			switch(portName){
     ff0:	8a 81       	ldd	r24, Y+2	; 0x02
     ff2:	28 2f       	mov	r18, r24
     ff4:	30 e0       	ldi	r19, 0x00	; 0
     ff6:	38 87       	std	Y+8, r19	; 0x08
     ff8:	2f 83       	std	Y+7, r18	; 0x07
     ffa:	8f 81       	ldd	r24, Y+7	; 0x07
     ffc:	98 85       	ldd	r25, Y+8	; 0x08
     ffe:	81 30       	cpi	r24, 0x01	; 1
    1000:	91 05       	cpc	r25, r1
    1002:	49 f1       	breq	.+82     	; 0x1056 <M_DIO_SetPinDirection+0x92>
    1004:	2f 81       	ldd	r18, Y+7	; 0x07
    1006:	38 85       	ldd	r19, Y+8	; 0x08
    1008:	22 30       	cpi	r18, 0x02	; 2
    100a:	31 05       	cpc	r19, r1
    100c:	2c f4       	brge	.+10     	; 0x1018 <M_DIO_SetPinDirection+0x54>
    100e:	8f 81       	ldd	r24, Y+7	; 0x07
    1010:	98 85       	ldd	r25, Y+8	; 0x08
    1012:	00 97       	sbiw	r24, 0x00	; 0
    1014:	61 f0       	breq	.+24     	; 0x102e <M_DIO_SetPinDirection+0x6a>
    1016:	d2 c0       	rjmp	.+420    	; 0x11bc <M_DIO_SetPinDirection+0x1f8>
    1018:	2f 81       	ldd	r18, Y+7	; 0x07
    101a:	38 85       	ldd	r19, Y+8	; 0x08
    101c:	22 30       	cpi	r18, 0x02	; 2
    101e:	31 05       	cpc	r19, r1
    1020:	71 f1       	breq	.+92     	; 0x107e <M_DIO_SetPinDirection+0xba>
    1022:	8f 81       	ldd	r24, Y+7	; 0x07
    1024:	98 85       	ldd	r25, Y+8	; 0x08
    1026:	83 30       	cpi	r24, 0x03	; 3
    1028:	91 05       	cpc	r25, r1
    102a:	e9 f1       	breq	.+122    	; 0x10a6 <M_DIO_SetPinDirection+0xe2>
    102c:	c7 c0       	rjmp	.+398    	; 0x11bc <M_DIO_SetPinDirection+0x1f8>
			case PORT_A:SET_BIT(MDIO_DDRA,pinNumber);break;
    102e:	aa e3       	ldi	r26, 0x3A	; 58
    1030:	b0 e0       	ldi	r27, 0x00	; 0
    1032:	ea e3       	ldi	r30, 0x3A	; 58
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	80 81       	ld	r24, Z
    1038:	48 2f       	mov	r20, r24
    103a:	8b 81       	ldd	r24, Y+3	; 0x03
    103c:	28 2f       	mov	r18, r24
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	81 e0       	ldi	r24, 0x01	; 1
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	02 2e       	mov	r0, r18
    1046:	02 c0       	rjmp	.+4      	; 0x104c <M_DIO_SetPinDirection+0x88>
    1048:	88 0f       	add	r24, r24
    104a:	99 1f       	adc	r25, r25
    104c:	0a 94       	dec	r0
    104e:	e2 f7       	brpl	.-8      	; 0x1048 <M_DIO_SetPinDirection+0x84>
    1050:	84 2b       	or	r24, r20
    1052:	8c 93       	st	X, r24
    1054:	b3 c0       	rjmp	.+358    	; 0x11bc <M_DIO_SetPinDirection+0x1f8>
			case PORT_B:SET_BIT(MDIO_DDRB,pinNumber);break;
    1056:	a7 e3       	ldi	r26, 0x37	; 55
    1058:	b0 e0       	ldi	r27, 0x00	; 0
    105a:	e7 e3       	ldi	r30, 0x37	; 55
    105c:	f0 e0       	ldi	r31, 0x00	; 0
    105e:	80 81       	ld	r24, Z
    1060:	48 2f       	mov	r20, r24
    1062:	8b 81       	ldd	r24, Y+3	; 0x03
    1064:	28 2f       	mov	r18, r24
    1066:	30 e0       	ldi	r19, 0x00	; 0
    1068:	81 e0       	ldi	r24, 0x01	; 1
    106a:	90 e0       	ldi	r25, 0x00	; 0
    106c:	02 2e       	mov	r0, r18
    106e:	02 c0       	rjmp	.+4      	; 0x1074 <M_DIO_SetPinDirection+0xb0>
    1070:	88 0f       	add	r24, r24
    1072:	99 1f       	adc	r25, r25
    1074:	0a 94       	dec	r0
    1076:	e2 f7       	brpl	.-8      	; 0x1070 <M_DIO_SetPinDirection+0xac>
    1078:	84 2b       	or	r24, r20
    107a:	8c 93       	st	X, r24
    107c:	9f c0       	rjmp	.+318    	; 0x11bc <M_DIO_SetPinDirection+0x1f8>
			case PORT_C:SET_BIT(MDIO_DDRC,pinNumber);break;
    107e:	a4 e3       	ldi	r26, 0x34	; 52
    1080:	b0 e0       	ldi	r27, 0x00	; 0
    1082:	e4 e3       	ldi	r30, 0x34	; 52
    1084:	f0 e0       	ldi	r31, 0x00	; 0
    1086:	80 81       	ld	r24, Z
    1088:	48 2f       	mov	r20, r24
    108a:	8b 81       	ldd	r24, Y+3	; 0x03
    108c:	28 2f       	mov	r18, r24
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	81 e0       	ldi	r24, 0x01	; 1
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	02 2e       	mov	r0, r18
    1096:	02 c0       	rjmp	.+4      	; 0x109c <M_DIO_SetPinDirection+0xd8>
    1098:	88 0f       	add	r24, r24
    109a:	99 1f       	adc	r25, r25
    109c:	0a 94       	dec	r0
    109e:	e2 f7       	brpl	.-8      	; 0x1098 <M_DIO_SetPinDirection+0xd4>
    10a0:	84 2b       	or	r24, r20
    10a2:	8c 93       	st	X, r24
    10a4:	8b c0       	rjmp	.+278    	; 0x11bc <M_DIO_SetPinDirection+0x1f8>
			case PORT_D:SET_BIT(MDIO_DDRD,pinNumber);break;
    10a6:	a1 e3       	ldi	r26, 0x31	; 49
    10a8:	b0 e0       	ldi	r27, 0x00	; 0
    10aa:	e1 e3       	ldi	r30, 0x31	; 49
    10ac:	f0 e0       	ldi	r31, 0x00	; 0
    10ae:	80 81       	ld	r24, Z
    10b0:	48 2f       	mov	r20, r24
    10b2:	8b 81       	ldd	r24, Y+3	; 0x03
    10b4:	28 2f       	mov	r18, r24
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	81 e0       	ldi	r24, 0x01	; 1
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	02 2e       	mov	r0, r18
    10be:	02 c0       	rjmp	.+4      	; 0x10c4 <M_DIO_SetPinDirection+0x100>
    10c0:	88 0f       	add	r24, r24
    10c2:	99 1f       	adc	r25, r25
    10c4:	0a 94       	dec	r0
    10c6:	e2 f7       	brpl	.-8      	; 0x10c0 <M_DIO_SetPinDirection+0xfc>
    10c8:	84 2b       	or	r24, r20
    10ca:	8c 93       	st	X, r24
    10cc:	77 c0       	rjmp	.+238    	; 0x11bc <M_DIO_SetPinDirection+0x1f8>
			retVal=OK;
			}
		}
		else if(dir==INPUT) {
    10ce:	8c 81       	ldd	r24, Y+4	; 0x04
    10d0:	88 23       	and	r24, r24
    10d2:	09 f0       	breq	.+2      	; 0x10d6 <M_DIO_SetPinDirection+0x112>
    10d4:	73 c0       	rjmp	.+230    	; 0x11bc <M_DIO_SetPinDirection+0x1f8>
			switch(portName){
    10d6:	8a 81       	ldd	r24, Y+2	; 0x02
    10d8:	28 2f       	mov	r18, r24
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	3e 83       	std	Y+6, r19	; 0x06
    10de:	2d 83       	std	Y+5, r18	; 0x05
    10e0:	8d 81       	ldd	r24, Y+5	; 0x05
    10e2:	9e 81       	ldd	r25, Y+6	; 0x06
    10e4:	81 30       	cpi	r24, 0x01	; 1
    10e6:	91 05       	cpc	r25, r1
    10e8:	59 f1       	breq	.+86     	; 0x1140 <M_DIO_SetPinDirection+0x17c>
    10ea:	2d 81       	ldd	r18, Y+5	; 0x05
    10ec:	3e 81       	ldd	r19, Y+6	; 0x06
    10ee:	22 30       	cpi	r18, 0x02	; 2
    10f0:	31 05       	cpc	r19, r1
    10f2:	2c f4       	brge	.+10     	; 0x10fe <M_DIO_SetPinDirection+0x13a>
    10f4:	8d 81       	ldd	r24, Y+5	; 0x05
    10f6:	9e 81       	ldd	r25, Y+6	; 0x06
    10f8:	00 97       	sbiw	r24, 0x00	; 0
    10fa:	69 f0       	breq	.+26     	; 0x1116 <M_DIO_SetPinDirection+0x152>
    10fc:	5f c0       	rjmp	.+190    	; 0x11bc <M_DIO_SetPinDirection+0x1f8>
    10fe:	2d 81       	ldd	r18, Y+5	; 0x05
    1100:	3e 81       	ldd	r19, Y+6	; 0x06
    1102:	22 30       	cpi	r18, 0x02	; 2
    1104:	31 05       	cpc	r19, r1
    1106:	89 f1       	breq	.+98     	; 0x116a <M_DIO_SetPinDirection+0x1a6>
    1108:	8d 81       	ldd	r24, Y+5	; 0x05
    110a:	9e 81       	ldd	r25, Y+6	; 0x06
    110c:	83 30       	cpi	r24, 0x03	; 3
    110e:	91 05       	cpc	r25, r1
    1110:	09 f4       	brne	.+2      	; 0x1114 <M_DIO_SetPinDirection+0x150>
    1112:	40 c0       	rjmp	.+128    	; 0x1194 <M_DIO_SetPinDirection+0x1d0>
    1114:	53 c0       	rjmp	.+166    	; 0x11bc <M_DIO_SetPinDirection+0x1f8>
			case PORT_A:CLR_BIT(MDIO_DDRA,pinNumber);break;
    1116:	aa e3       	ldi	r26, 0x3A	; 58
    1118:	b0 e0       	ldi	r27, 0x00	; 0
    111a:	ea e3       	ldi	r30, 0x3A	; 58
    111c:	f0 e0       	ldi	r31, 0x00	; 0
    111e:	80 81       	ld	r24, Z
    1120:	48 2f       	mov	r20, r24
    1122:	8b 81       	ldd	r24, Y+3	; 0x03
    1124:	28 2f       	mov	r18, r24
    1126:	30 e0       	ldi	r19, 0x00	; 0
    1128:	81 e0       	ldi	r24, 0x01	; 1
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	02 2e       	mov	r0, r18
    112e:	02 c0       	rjmp	.+4      	; 0x1134 <M_DIO_SetPinDirection+0x170>
    1130:	88 0f       	add	r24, r24
    1132:	99 1f       	adc	r25, r25
    1134:	0a 94       	dec	r0
    1136:	e2 f7       	brpl	.-8      	; 0x1130 <M_DIO_SetPinDirection+0x16c>
    1138:	80 95       	com	r24
    113a:	84 23       	and	r24, r20
    113c:	8c 93       	st	X, r24
    113e:	3e c0       	rjmp	.+124    	; 0x11bc <M_DIO_SetPinDirection+0x1f8>
			case PORT_B:CLR_BIT(MDIO_DDRB,pinNumber);break;
    1140:	a7 e3       	ldi	r26, 0x37	; 55
    1142:	b0 e0       	ldi	r27, 0x00	; 0
    1144:	e7 e3       	ldi	r30, 0x37	; 55
    1146:	f0 e0       	ldi	r31, 0x00	; 0
    1148:	80 81       	ld	r24, Z
    114a:	48 2f       	mov	r20, r24
    114c:	8b 81       	ldd	r24, Y+3	; 0x03
    114e:	28 2f       	mov	r18, r24
    1150:	30 e0       	ldi	r19, 0x00	; 0
    1152:	81 e0       	ldi	r24, 0x01	; 1
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	02 2e       	mov	r0, r18
    1158:	02 c0       	rjmp	.+4      	; 0x115e <M_DIO_SetPinDirection+0x19a>
    115a:	88 0f       	add	r24, r24
    115c:	99 1f       	adc	r25, r25
    115e:	0a 94       	dec	r0
    1160:	e2 f7       	brpl	.-8      	; 0x115a <M_DIO_SetPinDirection+0x196>
    1162:	80 95       	com	r24
    1164:	84 23       	and	r24, r20
    1166:	8c 93       	st	X, r24
    1168:	29 c0       	rjmp	.+82     	; 0x11bc <M_DIO_SetPinDirection+0x1f8>
			case PORT_C:CLR_BIT(MDIO_DDRC,pinNumber);break;
    116a:	a4 e3       	ldi	r26, 0x34	; 52
    116c:	b0 e0       	ldi	r27, 0x00	; 0
    116e:	e4 e3       	ldi	r30, 0x34	; 52
    1170:	f0 e0       	ldi	r31, 0x00	; 0
    1172:	80 81       	ld	r24, Z
    1174:	48 2f       	mov	r20, r24
    1176:	8b 81       	ldd	r24, Y+3	; 0x03
    1178:	28 2f       	mov	r18, r24
    117a:	30 e0       	ldi	r19, 0x00	; 0
    117c:	81 e0       	ldi	r24, 0x01	; 1
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	02 2e       	mov	r0, r18
    1182:	02 c0       	rjmp	.+4      	; 0x1188 <M_DIO_SetPinDirection+0x1c4>
    1184:	88 0f       	add	r24, r24
    1186:	99 1f       	adc	r25, r25
    1188:	0a 94       	dec	r0
    118a:	e2 f7       	brpl	.-8      	; 0x1184 <M_DIO_SetPinDirection+0x1c0>
    118c:	80 95       	com	r24
    118e:	84 23       	and	r24, r20
    1190:	8c 93       	st	X, r24
    1192:	14 c0       	rjmp	.+40     	; 0x11bc <M_DIO_SetPinDirection+0x1f8>
			case PORT_D:CLR_BIT(MDIO_DDRD,pinNumber);break;
    1194:	a1 e3       	ldi	r26, 0x31	; 49
    1196:	b0 e0       	ldi	r27, 0x00	; 0
    1198:	e1 e3       	ldi	r30, 0x31	; 49
    119a:	f0 e0       	ldi	r31, 0x00	; 0
    119c:	80 81       	ld	r24, Z
    119e:	48 2f       	mov	r20, r24
    11a0:	8b 81       	ldd	r24, Y+3	; 0x03
    11a2:	28 2f       	mov	r18, r24
    11a4:	30 e0       	ldi	r19, 0x00	; 0
    11a6:	81 e0       	ldi	r24, 0x01	; 1
    11a8:	90 e0       	ldi	r25, 0x00	; 0
    11aa:	02 2e       	mov	r0, r18
    11ac:	02 c0       	rjmp	.+4      	; 0x11b2 <M_DIO_SetPinDirection+0x1ee>
    11ae:	88 0f       	add	r24, r24
    11b0:	99 1f       	adc	r25, r25
    11b2:	0a 94       	dec	r0
    11b4:	e2 f7       	brpl	.-8      	; 0x11ae <M_DIO_SetPinDirection+0x1ea>
    11b6:	80 95       	com	r24
    11b8:	84 23       	and	r24, r20
    11ba:	8c 93       	st	X, r24
			retVal=OK;
			}
		}
	}
	return retVal;
    11bc:	89 81       	ldd	r24, Y+1	; 0x01
}
    11be:	28 96       	adiw	r28, 0x08	; 8
    11c0:	0f b6       	in	r0, 0x3f	; 63
    11c2:	f8 94       	cli
    11c4:	de bf       	out	0x3e, r29	; 62
    11c6:	0f be       	out	0x3f, r0	; 63
    11c8:	cd bf       	out	0x3d, r28	; 61
    11ca:	cf 91       	pop	r28
    11cc:	df 91       	pop	r29
    11ce:	08 95       	ret

000011d0 <M_DIO_SetPinValue>:

ERROR_STATE_T M_DIO_SetPinValue(u8 portName,u8 pinNumber,u8 val){
    11d0:	df 93       	push	r29
    11d2:	cf 93       	push	r28
    11d4:	cd b7       	in	r28, 0x3d	; 61
    11d6:	de b7       	in	r29, 0x3e	; 62
    11d8:	28 97       	sbiw	r28, 0x08	; 8
    11da:	0f b6       	in	r0, 0x3f	; 63
    11dc:	f8 94       	cli
    11de:	de bf       	out	0x3e, r29	; 62
    11e0:	0f be       	out	0x3f, r0	; 63
    11e2:	cd bf       	out	0x3d, r28	; 61
    11e4:	8a 83       	std	Y+2, r24	; 0x02
    11e6:	6b 83       	std	Y+3, r22	; 0x03
    11e8:	4c 83       	std	Y+4, r20	; 0x04
	ERROR_STATE_T retVal=NOK;
    11ea:	19 82       	std	Y+1, r1	; 0x01
		if ((pinNumber>=PIN0) && (pinNumber<=PIN7))
    11ec:	8b 81       	ldd	r24, Y+3	; 0x03
    11ee:	88 30       	cpi	r24, 0x08	; 8
    11f0:	08 f0       	brcs	.+2      	; 0x11f4 <M_DIO_SetPinValue+0x24>
    11f2:	ea c0       	rjmp	.+468    	; 0x13c8 <M_DIO_SetPinValue+0x1f8>
		{
			if (val==HIGH)
    11f4:	8c 81       	ldd	r24, Y+4	; 0x04
    11f6:	81 30       	cpi	r24, 0x01	; 1
    11f8:	09 f0       	breq	.+2      	; 0x11fc <M_DIO_SetPinValue+0x2c>
    11fa:	6f c0       	rjmp	.+222    	; 0x12da <M_DIO_SetPinValue+0x10a>
			{
				switch(portName){
    11fc:	8a 81       	ldd	r24, Y+2	; 0x02
    11fe:	28 2f       	mov	r18, r24
    1200:	30 e0       	ldi	r19, 0x00	; 0
    1202:	38 87       	std	Y+8, r19	; 0x08
    1204:	2f 83       	std	Y+7, r18	; 0x07
    1206:	8f 81       	ldd	r24, Y+7	; 0x07
    1208:	98 85       	ldd	r25, Y+8	; 0x08
    120a:	81 30       	cpi	r24, 0x01	; 1
    120c:	91 05       	cpc	r25, r1
    120e:	49 f1       	breq	.+82     	; 0x1262 <M_DIO_SetPinValue+0x92>
    1210:	2f 81       	ldd	r18, Y+7	; 0x07
    1212:	38 85       	ldd	r19, Y+8	; 0x08
    1214:	22 30       	cpi	r18, 0x02	; 2
    1216:	31 05       	cpc	r19, r1
    1218:	2c f4       	brge	.+10     	; 0x1224 <M_DIO_SetPinValue+0x54>
    121a:	8f 81       	ldd	r24, Y+7	; 0x07
    121c:	98 85       	ldd	r25, Y+8	; 0x08
    121e:	00 97       	sbiw	r24, 0x00	; 0
    1220:	61 f0       	breq	.+24     	; 0x123a <M_DIO_SetPinValue+0x6a>
    1222:	d2 c0       	rjmp	.+420    	; 0x13c8 <M_DIO_SetPinValue+0x1f8>
    1224:	2f 81       	ldd	r18, Y+7	; 0x07
    1226:	38 85       	ldd	r19, Y+8	; 0x08
    1228:	22 30       	cpi	r18, 0x02	; 2
    122a:	31 05       	cpc	r19, r1
    122c:	71 f1       	breq	.+92     	; 0x128a <M_DIO_SetPinValue+0xba>
    122e:	8f 81       	ldd	r24, Y+7	; 0x07
    1230:	98 85       	ldd	r25, Y+8	; 0x08
    1232:	83 30       	cpi	r24, 0x03	; 3
    1234:	91 05       	cpc	r25, r1
    1236:	e9 f1       	breq	.+122    	; 0x12b2 <M_DIO_SetPinValue+0xe2>
    1238:	c7 c0       	rjmp	.+398    	; 0x13c8 <M_DIO_SetPinValue+0x1f8>
				case PORT_A:SET_BIT(MDIO_PORTA,pinNumber);break;
    123a:	ab e3       	ldi	r26, 0x3B	; 59
    123c:	b0 e0       	ldi	r27, 0x00	; 0
    123e:	eb e3       	ldi	r30, 0x3B	; 59
    1240:	f0 e0       	ldi	r31, 0x00	; 0
    1242:	80 81       	ld	r24, Z
    1244:	48 2f       	mov	r20, r24
    1246:	8b 81       	ldd	r24, Y+3	; 0x03
    1248:	28 2f       	mov	r18, r24
    124a:	30 e0       	ldi	r19, 0x00	; 0
    124c:	81 e0       	ldi	r24, 0x01	; 1
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	02 2e       	mov	r0, r18
    1252:	02 c0       	rjmp	.+4      	; 0x1258 <M_DIO_SetPinValue+0x88>
    1254:	88 0f       	add	r24, r24
    1256:	99 1f       	adc	r25, r25
    1258:	0a 94       	dec	r0
    125a:	e2 f7       	brpl	.-8      	; 0x1254 <M_DIO_SetPinValue+0x84>
    125c:	84 2b       	or	r24, r20
    125e:	8c 93       	st	X, r24
    1260:	b3 c0       	rjmp	.+358    	; 0x13c8 <M_DIO_SetPinValue+0x1f8>
				case PORT_B:SET_BIT(MDIO_PORTB,pinNumber);break;
    1262:	a8 e3       	ldi	r26, 0x38	; 56
    1264:	b0 e0       	ldi	r27, 0x00	; 0
    1266:	e8 e3       	ldi	r30, 0x38	; 56
    1268:	f0 e0       	ldi	r31, 0x00	; 0
    126a:	80 81       	ld	r24, Z
    126c:	48 2f       	mov	r20, r24
    126e:	8b 81       	ldd	r24, Y+3	; 0x03
    1270:	28 2f       	mov	r18, r24
    1272:	30 e0       	ldi	r19, 0x00	; 0
    1274:	81 e0       	ldi	r24, 0x01	; 1
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	02 2e       	mov	r0, r18
    127a:	02 c0       	rjmp	.+4      	; 0x1280 <M_DIO_SetPinValue+0xb0>
    127c:	88 0f       	add	r24, r24
    127e:	99 1f       	adc	r25, r25
    1280:	0a 94       	dec	r0
    1282:	e2 f7       	brpl	.-8      	; 0x127c <M_DIO_SetPinValue+0xac>
    1284:	84 2b       	or	r24, r20
    1286:	8c 93       	st	X, r24
    1288:	9f c0       	rjmp	.+318    	; 0x13c8 <M_DIO_SetPinValue+0x1f8>
				case PORT_C:SET_BIT(MDIO_PORTC,pinNumber);break;
    128a:	a5 e3       	ldi	r26, 0x35	; 53
    128c:	b0 e0       	ldi	r27, 0x00	; 0
    128e:	e5 e3       	ldi	r30, 0x35	; 53
    1290:	f0 e0       	ldi	r31, 0x00	; 0
    1292:	80 81       	ld	r24, Z
    1294:	48 2f       	mov	r20, r24
    1296:	8b 81       	ldd	r24, Y+3	; 0x03
    1298:	28 2f       	mov	r18, r24
    129a:	30 e0       	ldi	r19, 0x00	; 0
    129c:	81 e0       	ldi	r24, 0x01	; 1
    129e:	90 e0       	ldi	r25, 0x00	; 0
    12a0:	02 2e       	mov	r0, r18
    12a2:	02 c0       	rjmp	.+4      	; 0x12a8 <M_DIO_SetPinValue+0xd8>
    12a4:	88 0f       	add	r24, r24
    12a6:	99 1f       	adc	r25, r25
    12a8:	0a 94       	dec	r0
    12aa:	e2 f7       	brpl	.-8      	; 0x12a4 <M_DIO_SetPinValue+0xd4>
    12ac:	84 2b       	or	r24, r20
    12ae:	8c 93       	st	X, r24
    12b0:	8b c0       	rjmp	.+278    	; 0x13c8 <M_DIO_SetPinValue+0x1f8>
				case PORT_D:SET_BIT(MDIO_PORTD,pinNumber);break;
    12b2:	a2 e3       	ldi	r26, 0x32	; 50
    12b4:	b0 e0       	ldi	r27, 0x00	; 0
    12b6:	e2 e3       	ldi	r30, 0x32	; 50
    12b8:	f0 e0       	ldi	r31, 0x00	; 0
    12ba:	80 81       	ld	r24, Z
    12bc:	48 2f       	mov	r20, r24
    12be:	8b 81       	ldd	r24, Y+3	; 0x03
    12c0:	28 2f       	mov	r18, r24
    12c2:	30 e0       	ldi	r19, 0x00	; 0
    12c4:	81 e0       	ldi	r24, 0x01	; 1
    12c6:	90 e0       	ldi	r25, 0x00	; 0
    12c8:	02 2e       	mov	r0, r18
    12ca:	02 c0       	rjmp	.+4      	; 0x12d0 <M_DIO_SetPinValue+0x100>
    12cc:	88 0f       	add	r24, r24
    12ce:	99 1f       	adc	r25, r25
    12d0:	0a 94       	dec	r0
    12d2:	e2 f7       	brpl	.-8      	; 0x12cc <M_DIO_SetPinValue+0xfc>
    12d4:	84 2b       	or	r24, r20
    12d6:	8c 93       	st	X, r24
    12d8:	77 c0       	rjmp	.+238    	; 0x13c8 <M_DIO_SetPinValue+0x1f8>
				retVal=OK;
				}
			}
			else if(val==LOW) {
    12da:	8c 81       	ldd	r24, Y+4	; 0x04
    12dc:	88 23       	and	r24, r24
    12de:	09 f0       	breq	.+2      	; 0x12e2 <M_DIO_SetPinValue+0x112>
    12e0:	73 c0       	rjmp	.+230    	; 0x13c8 <M_DIO_SetPinValue+0x1f8>
				switch(portName){
    12e2:	8a 81       	ldd	r24, Y+2	; 0x02
    12e4:	28 2f       	mov	r18, r24
    12e6:	30 e0       	ldi	r19, 0x00	; 0
    12e8:	3e 83       	std	Y+6, r19	; 0x06
    12ea:	2d 83       	std	Y+5, r18	; 0x05
    12ec:	8d 81       	ldd	r24, Y+5	; 0x05
    12ee:	9e 81       	ldd	r25, Y+6	; 0x06
    12f0:	81 30       	cpi	r24, 0x01	; 1
    12f2:	91 05       	cpc	r25, r1
    12f4:	59 f1       	breq	.+86     	; 0x134c <M_DIO_SetPinValue+0x17c>
    12f6:	2d 81       	ldd	r18, Y+5	; 0x05
    12f8:	3e 81       	ldd	r19, Y+6	; 0x06
    12fa:	22 30       	cpi	r18, 0x02	; 2
    12fc:	31 05       	cpc	r19, r1
    12fe:	2c f4       	brge	.+10     	; 0x130a <M_DIO_SetPinValue+0x13a>
    1300:	8d 81       	ldd	r24, Y+5	; 0x05
    1302:	9e 81       	ldd	r25, Y+6	; 0x06
    1304:	00 97       	sbiw	r24, 0x00	; 0
    1306:	69 f0       	breq	.+26     	; 0x1322 <M_DIO_SetPinValue+0x152>
    1308:	5f c0       	rjmp	.+190    	; 0x13c8 <M_DIO_SetPinValue+0x1f8>
    130a:	2d 81       	ldd	r18, Y+5	; 0x05
    130c:	3e 81       	ldd	r19, Y+6	; 0x06
    130e:	22 30       	cpi	r18, 0x02	; 2
    1310:	31 05       	cpc	r19, r1
    1312:	89 f1       	breq	.+98     	; 0x1376 <M_DIO_SetPinValue+0x1a6>
    1314:	8d 81       	ldd	r24, Y+5	; 0x05
    1316:	9e 81       	ldd	r25, Y+6	; 0x06
    1318:	83 30       	cpi	r24, 0x03	; 3
    131a:	91 05       	cpc	r25, r1
    131c:	09 f4       	brne	.+2      	; 0x1320 <M_DIO_SetPinValue+0x150>
    131e:	40 c0       	rjmp	.+128    	; 0x13a0 <M_DIO_SetPinValue+0x1d0>
    1320:	53 c0       	rjmp	.+166    	; 0x13c8 <M_DIO_SetPinValue+0x1f8>
				case PORT_A:CLR_BIT(MDIO_PORTA,pinNumber);break;
    1322:	ab e3       	ldi	r26, 0x3B	; 59
    1324:	b0 e0       	ldi	r27, 0x00	; 0
    1326:	eb e3       	ldi	r30, 0x3B	; 59
    1328:	f0 e0       	ldi	r31, 0x00	; 0
    132a:	80 81       	ld	r24, Z
    132c:	48 2f       	mov	r20, r24
    132e:	8b 81       	ldd	r24, Y+3	; 0x03
    1330:	28 2f       	mov	r18, r24
    1332:	30 e0       	ldi	r19, 0x00	; 0
    1334:	81 e0       	ldi	r24, 0x01	; 1
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	02 2e       	mov	r0, r18
    133a:	02 c0       	rjmp	.+4      	; 0x1340 <M_DIO_SetPinValue+0x170>
    133c:	88 0f       	add	r24, r24
    133e:	99 1f       	adc	r25, r25
    1340:	0a 94       	dec	r0
    1342:	e2 f7       	brpl	.-8      	; 0x133c <M_DIO_SetPinValue+0x16c>
    1344:	80 95       	com	r24
    1346:	84 23       	and	r24, r20
    1348:	8c 93       	st	X, r24
    134a:	3e c0       	rjmp	.+124    	; 0x13c8 <M_DIO_SetPinValue+0x1f8>
				case PORT_B:CLR_BIT(MDIO_PORTB,pinNumber);break;
    134c:	a8 e3       	ldi	r26, 0x38	; 56
    134e:	b0 e0       	ldi	r27, 0x00	; 0
    1350:	e8 e3       	ldi	r30, 0x38	; 56
    1352:	f0 e0       	ldi	r31, 0x00	; 0
    1354:	80 81       	ld	r24, Z
    1356:	48 2f       	mov	r20, r24
    1358:	8b 81       	ldd	r24, Y+3	; 0x03
    135a:	28 2f       	mov	r18, r24
    135c:	30 e0       	ldi	r19, 0x00	; 0
    135e:	81 e0       	ldi	r24, 0x01	; 1
    1360:	90 e0       	ldi	r25, 0x00	; 0
    1362:	02 2e       	mov	r0, r18
    1364:	02 c0       	rjmp	.+4      	; 0x136a <M_DIO_SetPinValue+0x19a>
    1366:	88 0f       	add	r24, r24
    1368:	99 1f       	adc	r25, r25
    136a:	0a 94       	dec	r0
    136c:	e2 f7       	brpl	.-8      	; 0x1366 <M_DIO_SetPinValue+0x196>
    136e:	80 95       	com	r24
    1370:	84 23       	and	r24, r20
    1372:	8c 93       	st	X, r24
    1374:	29 c0       	rjmp	.+82     	; 0x13c8 <M_DIO_SetPinValue+0x1f8>
				case PORT_C:CLR_BIT(MDIO_PORTC,pinNumber);break;
    1376:	a5 e3       	ldi	r26, 0x35	; 53
    1378:	b0 e0       	ldi	r27, 0x00	; 0
    137a:	e5 e3       	ldi	r30, 0x35	; 53
    137c:	f0 e0       	ldi	r31, 0x00	; 0
    137e:	80 81       	ld	r24, Z
    1380:	48 2f       	mov	r20, r24
    1382:	8b 81       	ldd	r24, Y+3	; 0x03
    1384:	28 2f       	mov	r18, r24
    1386:	30 e0       	ldi	r19, 0x00	; 0
    1388:	81 e0       	ldi	r24, 0x01	; 1
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	02 2e       	mov	r0, r18
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <M_DIO_SetPinValue+0x1c4>
    1390:	88 0f       	add	r24, r24
    1392:	99 1f       	adc	r25, r25
    1394:	0a 94       	dec	r0
    1396:	e2 f7       	brpl	.-8      	; 0x1390 <M_DIO_SetPinValue+0x1c0>
    1398:	80 95       	com	r24
    139a:	84 23       	and	r24, r20
    139c:	8c 93       	st	X, r24
    139e:	14 c0       	rjmp	.+40     	; 0x13c8 <M_DIO_SetPinValue+0x1f8>
				case PORT_D:CLR_BIT(MDIO_PORTD,pinNumber);break;
    13a0:	a2 e3       	ldi	r26, 0x32	; 50
    13a2:	b0 e0       	ldi	r27, 0x00	; 0
    13a4:	e2 e3       	ldi	r30, 0x32	; 50
    13a6:	f0 e0       	ldi	r31, 0x00	; 0
    13a8:	80 81       	ld	r24, Z
    13aa:	48 2f       	mov	r20, r24
    13ac:	8b 81       	ldd	r24, Y+3	; 0x03
    13ae:	28 2f       	mov	r18, r24
    13b0:	30 e0       	ldi	r19, 0x00	; 0
    13b2:	81 e0       	ldi	r24, 0x01	; 1
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	02 2e       	mov	r0, r18
    13b8:	02 c0       	rjmp	.+4      	; 0x13be <M_DIO_SetPinValue+0x1ee>
    13ba:	88 0f       	add	r24, r24
    13bc:	99 1f       	adc	r25, r25
    13be:	0a 94       	dec	r0
    13c0:	e2 f7       	brpl	.-8      	; 0x13ba <M_DIO_SetPinValue+0x1ea>
    13c2:	80 95       	com	r24
    13c4:	84 23       	and	r24, r20
    13c6:	8c 93       	st	X, r24
				retVal=OK;
				}
			}
		}
		return retVal;
    13c8:	89 81       	ldd	r24, Y+1	; 0x01

}
    13ca:	28 96       	adiw	r28, 0x08	; 8
    13cc:	0f b6       	in	r0, 0x3f	; 63
    13ce:	f8 94       	cli
    13d0:	de bf       	out	0x3e, r29	; 62
    13d2:	0f be       	out	0x3f, r0	; 63
    13d4:	cd bf       	out	0x3d, r28	; 61
    13d6:	cf 91       	pop	r28
    13d8:	df 91       	pop	r29
    13da:	08 95       	ret

000013dc <M_DIO_GetPinValue>:

ERROR_STATE_T M_DIO_GetPinValue(u8 portName,u8 pinNumber,u8 *val){
    13dc:	df 93       	push	r29
    13de:	cf 93       	push	r28
    13e0:	cd b7       	in	r28, 0x3d	; 61
    13e2:	de b7       	in	r29, 0x3e	; 62
    13e4:	27 97       	sbiw	r28, 0x07	; 7
    13e6:	0f b6       	in	r0, 0x3f	; 63
    13e8:	f8 94       	cli
    13ea:	de bf       	out	0x3e, r29	; 62
    13ec:	0f be       	out	0x3f, r0	; 63
    13ee:	cd bf       	out	0x3d, r28	; 61
    13f0:	8a 83       	std	Y+2, r24	; 0x02
    13f2:	6b 83       	std	Y+3, r22	; 0x03
    13f4:	5d 83       	std	Y+5, r21	; 0x05
    13f6:	4c 83       	std	Y+4, r20	; 0x04
	ERROR_STATE_T retVal=NOK;
    13f8:	19 82       	std	Y+1, r1	; 0x01
	if(*val != NULL){
    13fa:	ec 81       	ldd	r30, Y+4	; 0x04
    13fc:	fd 81       	ldd	r31, Y+5	; 0x05
    13fe:	80 81       	ld	r24, Z
    1400:	88 23       	and	r24, r24
    1402:	09 f4       	brne	.+2      	; 0x1406 <M_DIO_GetPinValue+0x2a>
    1404:	74 c0       	rjmp	.+232    	; 0x14ee <M_DIO_GetPinValue+0x112>
			if ((pinNumber>=PIN0) && (pinNumber<=PIN7))
    1406:	8b 81       	ldd	r24, Y+3	; 0x03
    1408:	88 30       	cpi	r24, 0x08	; 8
    140a:	08 f0       	brcs	.+2      	; 0x140e <M_DIO_GetPinValue+0x32>
    140c:	70 c0       	rjmp	.+224    	; 0x14ee <M_DIO_GetPinValue+0x112>
			{
					switch(portName){
    140e:	8a 81       	ldd	r24, Y+2	; 0x02
    1410:	28 2f       	mov	r18, r24
    1412:	30 e0       	ldi	r19, 0x00	; 0
    1414:	3f 83       	std	Y+7, r19	; 0x07
    1416:	2e 83       	std	Y+6, r18	; 0x06
    1418:	4e 81       	ldd	r20, Y+6	; 0x06
    141a:	5f 81       	ldd	r21, Y+7	; 0x07
    141c:	41 30       	cpi	r20, 0x01	; 1
    141e:	51 05       	cpc	r21, r1
    1420:	59 f1       	breq	.+86     	; 0x1478 <M_DIO_GetPinValue+0x9c>
    1422:	8e 81       	ldd	r24, Y+6	; 0x06
    1424:	9f 81       	ldd	r25, Y+7	; 0x07
    1426:	82 30       	cpi	r24, 0x02	; 2
    1428:	91 05       	cpc	r25, r1
    142a:	34 f4       	brge	.+12     	; 0x1438 <M_DIO_GetPinValue+0x5c>
    142c:	2e 81       	ldd	r18, Y+6	; 0x06
    142e:	3f 81       	ldd	r19, Y+7	; 0x07
    1430:	21 15       	cp	r18, r1
    1432:	31 05       	cpc	r19, r1
    1434:	69 f0       	breq	.+26     	; 0x1450 <M_DIO_GetPinValue+0x74>
    1436:	5b c0       	rjmp	.+182    	; 0x14ee <M_DIO_GetPinValue+0x112>
    1438:	4e 81       	ldd	r20, Y+6	; 0x06
    143a:	5f 81       	ldd	r21, Y+7	; 0x07
    143c:	42 30       	cpi	r20, 0x02	; 2
    143e:	51 05       	cpc	r21, r1
    1440:	79 f1       	breq	.+94     	; 0x14a0 <M_DIO_GetPinValue+0xc4>
    1442:	8e 81       	ldd	r24, Y+6	; 0x06
    1444:	9f 81       	ldd	r25, Y+7	; 0x07
    1446:	83 30       	cpi	r24, 0x03	; 3
    1448:	91 05       	cpc	r25, r1
    144a:	09 f4       	brne	.+2      	; 0x144e <M_DIO_GetPinValue+0x72>
    144c:	3d c0       	rjmp	.+122    	; 0x14c8 <M_DIO_GetPinValue+0xec>
    144e:	4f c0       	rjmp	.+158    	; 0x14ee <M_DIO_GetPinValue+0x112>
					case PORT_A:*val=READ_BIT(MDIO_PINA,pinNumber);break;
    1450:	e9 e3       	ldi	r30, 0x39	; 57
    1452:	f0 e0       	ldi	r31, 0x00	; 0
    1454:	80 81       	ld	r24, Z
    1456:	28 2f       	mov	r18, r24
    1458:	30 e0       	ldi	r19, 0x00	; 0
    145a:	8b 81       	ldd	r24, Y+3	; 0x03
    145c:	88 2f       	mov	r24, r24
    145e:	90 e0       	ldi	r25, 0x00	; 0
    1460:	a9 01       	movw	r20, r18
    1462:	02 c0       	rjmp	.+4      	; 0x1468 <M_DIO_GetPinValue+0x8c>
    1464:	55 95       	asr	r21
    1466:	47 95       	ror	r20
    1468:	8a 95       	dec	r24
    146a:	e2 f7       	brpl	.-8      	; 0x1464 <M_DIO_GetPinValue+0x88>
    146c:	ca 01       	movw	r24, r20
    146e:	81 70       	andi	r24, 0x01	; 1
    1470:	ec 81       	ldd	r30, Y+4	; 0x04
    1472:	fd 81       	ldd	r31, Y+5	; 0x05
    1474:	80 83       	st	Z, r24
    1476:	3b c0       	rjmp	.+118    	; 0x14ee <M_DIO_GetPinValue+0x112>
					case PORT_B:*val=READ_BIT(MDIO_PINB,pinNumber);break;
    1478:	e6 e3       	ldi	r30, 0x36	; 54
    147a:	f0 e0       	ldi	r31, 0x00	; 0
    147c:	80 81       	ld	r24, Z
    147e:	28 2f       	mov	r18, r24
    1480:	30 e0       	ldi	r19, 0x00	; 0
    1482:	8b 81       	ldd	r24, Y+3	; 0x03
    1484:	88 2f       	mov	r24, r24
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	a9 01       	movw	r20, r18
    148a:	02 c0       	rjmp	.+4      	; 0x1490 <M_DIO_GetPinValue+0xb4>
    148c:	55 95       	asr	r21
    148e:	47 95       	ror	r20
    1490:	8a 95       	dec	r24
    1492:	e2 f7       	brpl	.-8      	; 0x148c <M_DIO_GetPinValue+0xb0>
    1494:	ca 01       	movw	r24, r20
    1496:	81 70       	andi	r24, 0x01	; 1
    1498:	ec 81       	ldd	r30, Y+4	; 0x04
    149a:	fd 81       	ldd	r31, Y+5	; 0x05
    149c:	80 83       	st	Z, r24
    149e:	27 c0       	rjmp	.+78     	; 0x14ee <M_DIO_GetPinValue+0x112>
					case PORT_C:*val=READ_BIT(MDIO_PINC,pinNumber);break;
    14a0:	e3 e3       	ldi	r30, 0x33	; 51
    14a2:	f0 e0       	ldi	r31, 0x00	; 0
    14a4:	80 81       	ld	r24, Z
    14a6:	28 2f       	mov	r18, r24
    14a8:	30 e0       	ldi	r19, 0x00	; 0
    14aa:	8b 81       	ldd	r24, Y+3	; 0x03
    14ac:	88 2f       	mov	r24, r24
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	a9 01       	movw	r20, r18
    14b2:	02 c0       	rjmp	.+4      	; 0x14b8 <M_DIO_GetPinValue+0xdc>
    14b4:	55 95       	asr	r21
    14b6:	47 95       	ror	r20
    14b8:	8a 95       	dec	r24
    14ba:	e2 f7       	brpl	.-8      	; 0x14b4 <M_DIO_GetPinValue+0xd8>
    14bc:	ca 01       	movw	r24, r20
    14be:	81 70       	andi	r24, 0x01	; 1
    14c0:	ec 81       	ldd	r30, Y+4	; 0x04
    14c2:	fd 81       	ldd	r31, Y+5	; 0x05
    14c4:	80 83       	st	Z, r24
    14c6:	13 c0       	rjmp	.+38     	; 0x14ee <M_DIO_GetPinValue+0x112>
					case PORT_D:*val=READ_BIT(MDIO_PIND,pinNumber);break;
    14c8:	e0 e3       	ldi	r30, 0x30	; 48
    14ca:	f0 e0       	ldi	r31, 0x00	; 0
    14cc:	80 81       	ld	r24, Z
    14ce:	28 2f       	mov	r18, r24
    14d0:	30 e0       	ldi	r19, 0x00	; 0
    14d2:	8b 81       	ldd	r24, Y+3	; 0x03
    14d4:	88 2f       	mov	r24, r24
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	a9 01       	movw	r20, r18
    14da:	02 c0       	rjmp	.+4      	; 0x14e0 <M_DIO_GetPinValue+0x104>
    14dc:	55 95       	asr	r21
    14de:	47 95       	ror	r20
    14e0:	8a 95       	dec	r24
    14e2:	e2 f7       	brpl	.-8      	; 0x14dc <M_DIO_GetPinValue+0x100>
    14e4:	ca 01       	movw	r24, r20
    14e6:	81 70       	andi	r24, 0x01	; 1
    14e8:	ec 81       	ldd	r30, Y+4	; 0x04
    14ea:	fd 81       	ldd	r31, Y+5	; 0x05
    14ec:	80 83       	st	Z, r24
					retVal=OK;
					}
			}
	}
			return retVal;
    14ee:	89 81       	ldd	r24, Y+1	; 0x01
}
    14f0:	27 96       	adiw	r28, 0x07	; 7
    14f2:	0f b6       	in	r0, 0x3f	; 63
    14f4:	f8 94       	cli
    14f6:	de bf       	out	0x3e, r29	; 62
    14f8:	0f be       	out	0x3f, r0	; 63
    14fa:	cd bf       	out	0x3d, r28	; 61
    14fc:	cf 91       	pop	r28
    14fe:	df 91       	pop	r29
    1500:	08 95       	ret

00001502 <M_DIO_SetPortValue>:


ERROR_STATE_T M_DIO_SetPortValue(u8 portName,u8 val){
    1502:	df 93       	push	r29
    1504:	cf 93       	push	r28
    1506:	00 d0       	rcall	.+0      	; 0x1508 <M_DIO_SetPortValue+0x6>
    1508:	00 d0       	rcall	.+0      	; 0x150a <M_DIO_SetPortValue+0x8>
    150a:	0f 92       	push	r0
    150c:	cd b7       	in	r28, 0x3d	; 61
    150e:	de b7       	in	r29, 0x3e	; 62
    1510:	8a 83       	std	Y+2, r24	; 0x02
    1512:	6b 83       	std	Y+3, r22	; 0x03
	ERROR_STATE_T retVal=NOK;
    1514:	19 82       	std	Y+1, r1	; 0x01
	switch(portName){
    1516:	8a 81       	ldd	r24, Y+2	; 0x02
    1518:	28 2f       	mov	r18, r24
    151a:	30 e0       	ldi	r19, 0x00	; 0
    151c:	3d 83       	std	Y+5, r19	; 0x05
    151e:	2c 83       	std	Y+4, r18	; 0x04
    1520:	8c 81       	ldd	r24, Y+4	; 0x04
    1522:	9d 81       	ldd	r25, Y+5	; 0x05
    1524:	81 30       	cpi	r24, 0x01	; 1
    1526:	91 05       	cpc	r25, r1
    1528:	d1 f0       	breq	.+52     	; 0x155e <M_DIO_SetPortValue+0x5c>
    152a:	2c 81       	ldd	r18, Y+4	; 0x04
    152c:	3d 81       	ldd	r19, Y+5	; 0x05
    152e:	22 30       	cpi	r18, 0x02	; 2
    1530:	31 05       	cpc	r19, r1
    1532:	2c f4       	brge	.+10     	; 0x153e <M_DIO_SetPortValue+0x3c>
    1534:	8c 81       	ldd	r24, Y+4	; 0x04
    1536:	9d 81       	ldd	r25, Y+5	; 0x05
    1538:	00 97       	sbiw	r24, 0x00	; 0
    153a:	61 f0       	breq	.+24     	; 0x1554 <M_DIO_SetPortValue+0x52>
    153c:	1e c0       	rjmp	.+60     	; 0x157a <M_DIO_SetPortValue+0x78>
    153e:	2c 81       	ldd	r18, Y+4	; 0x04
    1540:	3d 81       	ldd	r19, Y+5	; 0x05
    1542:	22 30       	cpi	r18, 0x02	; 2
    1544:	31 05       	cpc	r19, r1
    1546:	81 f0       	breq	.+32     	; 0x1568 <M_DIO_SetPortValue+0x66>
    1548:	8c 81       	ldd	r24, Y+4	; 0x04
    154a:	9d 81       	ldd	r25, Y+5	; 0x05
    154c:	83 30       	cpi	r24, 0x03	; 3
    154e:	91 05       	cpc	r25, r1
    1550:	81 f0       	breq	.+32     	; 0x1572 <M_DIO_SetPortValue+0x70>
    1552:	13 c0       	rjmp	.+38     	; 0x157a <M_DIO_SetPortValue+0x78>
	case PORT_A:MDIO_PORTA=val;break;
    1554:	eb e3       	ldi	r30, 0x3B	; 59
    1556:	f0 e0       	ldi	r31, 0x00	; 0
    1558:	8b 81       	ldd	r24, Y+3	; 0x03
    155a:	80 83       	st	Z, r24
    155c:	0e c0       	rjmp	.+28     	; 0x157a <M_DIO_SetPortValue+0x78>
	case PORT_B:MDIO_PORTB=val;break;
    155e:	e8 e3       	ldi	r30, 0x38	; 56
    1560:	f0 e0       	ldi	r31, 0x00	; 0
    1562:	8b 81       	ldd	r24, Y+3	; 0x03
    1564:	80 83       	st	Z, r24
    1566:	09 c0       	rjmp	.+18     	; 0x157a <M_DIO_SetPortValue+0x78>
	case PORT_C:MDIO_PORTC=val;break;
    1568:	e5 e3       	ldi	r30, 0x35	; 53
    156a:	f0 e0       	ldi	r31, 0x00	; 0
    156c:	8b 81       	ldd	r24, Y+3	; 0x03
    156e:	80 83       	st	Z, r24
    1570:	04 c0       	rjmp	.+8      	; 0x157a <M_DIO_SetPortValue+0x78>
	case PORT_D:MDIO_PORTD=val;break;
    1572:	e2 e3       	ldi	r30, 0x32	; 50
    1574:	f0 e0       	ldi	r31, 0x00	; 0
    1576:	8b 81       	ldd	r24, Y+3	; 0x03
    1578:	80 83       	st	Z, r24
	retVal=OK;
	}
	return retVal;
    157a:	89 81       	ldd	r24, Y+1	; 0x01
}
    157c:	0f 90       	pop	r0
    157e:	0f 90       	pop	r0
    1580:	0f 90       	pop	r0
    1582:	0f 90       	pop	r0
    1584:	0f 90       	pop	r0
    1586:	cf 91       	pop	r28
    1588:	df 91       	pop	r29
    158a:	08 95       	ret

0000158c <M_DIO_GetPortValue>:

ERROR_STATE_T M_DIO_GetPortValue(u8 portName,u8 *val){
    158c:	df 93       	push	r29
    158e:	cf 93       	push	r28
    1590:	00 d0       	rcall	.+0      	; 0x1592 <M_DIO_GetPortValue+0x6>
    1592:	00 d0       	rcall	.+0      	; 0x1594 <M_DIO_GetPortValue+0x8>
    1594:	00 d0       	rcall	.+0      	; 0x1596 <M_DIO_GetPortValue+0xa>
    1596:	cd b7       	in	r28, 0x3d	; 61
    1598:	de b7       	in	r29, 0x3e	; 62
    159a:	8a 83       	std	Y+2, r24	; 0x02
    159c:	7c 83       	std	Y+4, r23	; 0x04
    159e:	6b 83       	std	Y+3, r22	; 0x03
	ERROR_STATE_T retVal=NOK;
    15a0:	19 82       	std	Y+1, r1	; 0x01
	if(*val != NULL){
    15a2:	eb 81       	ldd	r30, Y+3	; 0x03
    15a4:	fc 81       	ldd	r31, Y+4	; 0x04
    15a6:	80 81       	ld	r24, Z
    15a8:	88 23       	and	r24, r24
    15aa:	d1 f1       	breq	.+116    	; 0x1620 <M_DIO_GetPortValue+0x94>
	switch(portName){
    15ac:	8a 81       	ldd	r24, Y+2	; 0x02
    15ae:	28 2f       	mov	r18, r24
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	3e 83       	std	Y+6, r19	; 0x06
    15b4:	2d 83       	std	Y+5, r18	; 0x05
    15b6:	8d 81       	ldd	r24, Y+5	; 0x05
    15b8:	9e 81       	ldd	r25, Y+6	; 0x06
    15ba:	81 30       	cpi	r24, 0x01	; 1
    15bc:	91 05       	cpc	r25, r1
    15be:	e1 f0       	breq	.+56     	; 0x15f8 <M_DIO_GetPortValue+0x6c>
    15c0:	2d 81       	ldd	r18, Y+5	; 0x05
    15c2:	3e 81       	ldd	r19, Y+6	; 0x06
    15c4:	22 30       	cpi	r18, 0x02	; 2
    15c6:	31 05       	cpc	r19, r1
    15c8:	2c f4       	brge	.+10     	; 0x15d4 <M_DIO_GetPortValue+0x48>
    15ca:	8d 81       	ldd	r24, Y+5	; 0x05
    15cc:	9e 81       	ldd	r25, Y+6	; 0x06
    15ce:	00 97       	sbiw	r24, 0x00	; 0
    15d0:	61 f0       	breq	.+24     	; 0x15ea <M_DIO_GetPortValue+0x5e>
    15d2:	26 c0       	rjmp	.+76     	; 0x1620 <M_DIO_GetPortValue+0x94>
    15d4:	2d 81       	ldd	r18, Y+5	; 0x05
    15d6:	3e 81       	ldd	r19, Y+6	; 0x06
    15d8:	22 30       	cpi	r18, 0x02	; 2
    15da:	31 05       	cpc	r19, r1
    15dc:	a1 f0       	breq	.+40     	; 0x1606 <M_DIO_GetPortValue+0x7a>
    15de:	8d 81       	ldd	r24, Y+5	; 0x05
    15e0:	9e 81       	ldd	r25, Y+6	; 0x06
    15e2:	83 30       	cpi	r24, 0x03	; 3
    15e4:	91 05       	cpc	r25, r1
    15e6:	b1 f0       	breq	.+44     	; 0x1614 <M_DIO_GetPortValue+0x88>
    15e8:	1b c0       	rjmp	.+54     	; 0x1620 <M_DIO_GetPortValue+0x94>
		case PORT_A:*val=MDIO_PORTA;break;
    15ea:	eb e3       	ldi	r30, 0x3B	; 59
    15ec:	f0 e0       	ldi	r31, 0x00	; 0
    15ee:	80 81       	ld	r24, Z
    15f0:	eb 81       	ldd	r30, Y+3	; 0x03
    15f2:	fc 81       	ldd	r31, Y+4	; 0x04
    15f4:	80 83       	st	Z, r24
    15f6:	14 c0       	rjmp	.+40     	; 0x1620 <M_DIO_GetPortValue+0x94>
		case PORT_B:*val=MDIO_PORTB;break;
    15f8:	e8 e3       	ldi	r30, 0x38	; 56
    15fa:	f0 e0       	ldi	r31, 0x00	; 0
    15fc:	80 81       	ld	r24, Z
    15fe:	eb 81       	ldd	r30, Y+3	; 0x03
    1600:	fc 81       	ldd	r31, Y+4	; 0x04
    1602:	80 83       	st	Z, r24
    1604:	0d c0       	rjmp	.+26     	; 0x1620 <M_DIO_GetPortValue+0x94>
		case PORT_C:*val=MDIO_PORTC;break;
    1606:	e5 e3       	ldi	r30, 0x35	; 53
    1608:	f0 e0       	ldi	r31, 0x00	; 0
    160a:	80 81       	ld	r24, Z
    160c:	eb 81       	ldd	r30, Y+3	; 0x03
    160e:	fc 81       	ldd	r31, Y+4	; 0x04
    1610:	80 83       	st	Z, r24
    1612:	06 c0       	rjmp	.+12     	; 0x1620 <M_DIO_GetPortValue+0x94>
		case PORT_D:*val=MDIO_PORTC;break;
    1614:	e5 e3       	ldi	r30, 0x35	; 53
    1616:	f0 e0       	ldi	r31, 0x00	; 0
    1618:	80 81       	ld	r24, Z
    161a:	eb 81       	ldd	r30, Y+3	; 0x03
    161c:	fc 81       	ldd	r31, Y+4	; 0x04
    161e:	80 83       	st	Z, r24
		retVal=OK;
		}
	}
		return retVal;
    1620:	89 81       	ldd	r24, Y+1	; 0x01
}
    1622:	26 96       	adiw	r28, 0x06	; 6
    1624:	0f b6       	in	r0, 0x3f	; 63
    1626:	f8 94       	cli
    1628:	de bf       	out	0x3e, r29	; 62
    162a:	0f be       	out	0x3f, r0	; 63
    162c:	cd bf       	out	0x3d, r28	; 61
    162e:	cf 91       	pop	r28
    1630:	df 91       	pop	r29
    1632:	08 95       	ret

00001634 <M_DIO_SetPortDirection>:
ERROR_STATE_T M_DIO_SetPortDirection(u8 portName,u8 dir){
    1634:	df 93       	push	r29
    1636:	cf 93       	push	r28
    1638:	00 d0       	rcall	.+0      	; 0x163a <M_DIO_SetPortDirection+0x6>
    163a:	00 d0       	rcall	.+0      	; 0x163c <M_DIO_SetPortDirection+0x8>
    163c:	0f 92       	push	r0
    163e:	cd b7       	in	r28, 0x3d	; 61
    1640:	de b7       	in	r29, 0x3e	; 62
    1642:	8a 83       	std	Y+2, r24	; 0x02
    1644:	6b 83       	std	Y+3, r22	; 0x03
	ERROR_STATE_T retVal=NOK;
    1646:	19 82       	std	Y+1, r1	; 0x01
	switch(portName){
    1648:	8a 81       	ldd	r24, Y+2	; 0x02
    164a:	28 2f       	mov	r18, r24
    164c:	30 e0       	ldi	r19, 0x00	; 0
    164e:	3d 83       	std	Y+5, r19	; 0x05
    1650:	2c 83       	std	Y+4, r18	; 0x04
    1652:	8c 81       	ldd	r24, Y+4	; 0x04
    1654:	9d 81       	ldd	r25, Y+5	; 0x05
    1656:	81 30       	cpi	r24, 0x01	; 1
    1658:	91 05       	cpc	r25, r1
    165a:	d1 f0       	breq	.+52     	; 0x1690 <M_DIO_SetPortDirection+0x5c>
    165c:	2c 81       	ldd	r18, Y+4	; 0x04
    165e:	3d 81       	ldd	r19, Y+5	; 0x05
    1660:	22 30       	cpi	r18, 0x02	; 2
    1662:	31 05       	cpc	r19, r1
    1664:	2c f4       	brge	.+10     	; 0x1670 <M_DIO_SetPortDirection+0x3c>
    1666:	8c 81       	ldd	r24, Y+4	; 0x04
    1668:	9d 81       	ldd	r25, Y+5	; 0x05
    166a:	00 97       	sbiw	r24, 0x00	; 0
    166c:	61 f0       	breq	.+24     	; 0x1686 <M_DIO_SetPortDirection+0x52>
    166e:	1e c0       	rjmp	.+60     	; 0x16ac <M_DIO_SetPortDirection+0x78>
    1670:	2c 81       	ldd	r18, Y+4	; 0x04
    1672:	3d 81       	ldd	r19, Y+5	; 0x05
    1674:	22 30       	cpi	r18, 0x02	; 2
    1676:	31 05       	cpc	r19, r1
    1678:	81 f0       	breq	.+32     	; 0x169a <M_DIO_SetPortDirection+0x66>
    167a:	8c 81       	ldd	r24, Y+4	; 0x04
    167c:	9d 81       	ldd	r25, Y+5	; 0x05
    167e:	83 30       	cpi	r24, 0x03	; 3
    1680:	91 05       	cpc	r25, r1
    1682:	81 f0       	breq	.+32     	; 0x16a4 <M_DIO_SetPortDirection+0x70>
    1684:	13 c0       	rjmp	.+38     	; 0x16ac <M_DIO_SetPortDirection+0x78>
	case PORT_A:MDIO_DDRA=dir;break;
    1686:	ea e3       	ldi	r30, 0x3A	; 58
    1688:	f0 e0       	ldi	r31, 0x00	; 0
    168a:	8b 81       	ldd	r24, Y+3	; 0x03
    168c:	80 83       	st	Z, r24
    168e:	0e c0       	rjmp	.+28     	; 0x16ac <M_DIO_SetPortDirection+0x78>
	case PORT_B:MDIO_DDRB=dir;break;
    1690:	e7 e3       	ldi	r30, 0x37	; 55
    1692:	f0 e0       	ldi	r31, 0x00	; 0
    1694:	8b 81       	ldd	r24, Y+3	; 0x03
    1696:	80 83       	st	Z, r24
    1698:	09 c0       	rjmp	.+18     	; 0x16ac <M_DIO_SetPortDirection+0x78>
	case PORT_C:MDIO_DDRC=dir;break;
    169a:	e4 e3       	ldi	r30, 0x34	; 52
    169c:	f0 e0       	ldi	r31, 0x00	; 0
    169e:	8b 81       	ldd	r24, Y+3	; 0x03
    16a0:	80 83       	st	Z, r24
    16a2:	04 c0       	rjmp	.+8      	; 0x16ac <M_DIO_SetPortDirection+0x78>
	case PORT_D:MDIO_DDRD=dir;break;
    16a4:	e1 e3       	ldi	r30, 0x31	; 49
    16a6:	f0 e0       	ldi	r31, 0x00	; 0
    16a8:	8b 81       	ldd	r24, Y+3	; 0x03
    16aa:	80 83       	st	Z, r24
	retVal=OK;
	}
	return retVal;
    16ac:	89 81       	ldd	r24, Y+1	; 0x01
}
    16ae:	0f 90       	pop	r0
    16b0:	0f 90       	pop	r0
    16b2:	0f 90       	pop	r0
    16b4:	0f 90       	pop	r0
    16b6:	0f 90       	pop	r0
    16b8:	cf 91       	pop	r28
    16ba:	df 91       	pop	r29
    16bc:	08 95       	ret

000016be <M_DIO_EnablPullup>:
ERROR_STATE_T M_DIO_EnablPullup(u8 portName, u8 pinNumber){
    16be:	df 93       	push	r29
    16c0:	cf 93       	push	r28
    16c2:	00 d0       	rcall	.+0      	; 0x16c4 <M_DIO_EnablPullup+0x6>
    16c4:	00 d0       	rcall	.+0      	; 0x16c6 <M_DIO_EnablPullup+0x8>
    16c6:	0f 92       	push	r0
    16c8:	cd b7       	in	r28, 0x3d	; 61
    16ca:	de b7       	in	r29, 0x3e	; 62
    16cc:	8a 83       	std	Y+2, r24	; 0x02
    16ce:	6b 83       	std	Y+3, r22	; 0x03
	ERROR_STATE_T retVal=NOK;
    16d0:	19 82       	std	Y+1, r1	; 0x01
	switch(portName){
    16d2:	8a 81       	ldd	r24, Y+2	; 0x02
    16d4:	28 2f       	mov	r18, r24
    16d6:	30 e0       	ldi	r19, 0x00	; 0
    16d8:	3d 83       	std	Y+5, r19	; 0x05
    16da:	2c 83       	std	Y+4, r18	; 0x04
    16dc:	8c 81       	ldd	r24, Y+4	; 0x04
    16de:	9d 81       	ldd	r25, Y+5	; 0x05
    16e0:	81 30       	cpi	r24, 0x01	; 1
    16e2:	91 05       	cpc	r25, r1
    16e4:	d1 f0       	breq	.+52     	; 0x171a <M_DIO_EnablPullup+0x5c>
    16e6:	2c 81       	ldd	r18, Y+4	; 0x04
    16e8:	3d 81       	ldd	r19, Y+5	; 0x05
    16ea:	22 30       	cpi	r18, 0x02	; 2
    16ec:	31 05       	cpc	r19, r1
    16ee:	2c f4       	brge	.+10     	; 0x16fa <M_DIO_EnablPullup+0x3c>
    16f0:	8c 81       	ldd	r24, Y+4	; 0x04
    16f2:	9d 81       	ldd	r25, Y+5	; 0x05
    16f4:	00 97       	sbiw	r24, 0x00	; 0
    16f6:	61 f0       	breq	.+24     	; 0x1710 <M_DIO_EnablPullup+0x52>
    16f8:	1e c0       	rjmp	.+60     	; 0x1736 <M_DIO_EnablPullup+0x78>
    16fa:	2c 81       	ldd	r18, Y+4	; 0x04
    16fc:	3d 81       	ldd	r19, Y+5	; 0x05
    16fe:	22 30       	cpi	r18, 0x02	; 2
    1700:	31 05       	cpc	r19, r1
    1702:	81 f0       	breq	.+32     	; 0x1724 <M_DIO_EnablPullup+0x66>
    1704:	8c 81       	ldd	r24, Y+4	; 0x04
    1706:	9d 81       	ldd	r25, Y+5	; 0x05
    1708:	83 30       	cpi	r24, 0x03	; 3
    170a:	91 05       	cpc	r25, r1
    170c:	81 f0       	breq	.+32     	; 0x172e <M_DIO_EnablPullup+0x70>
    170e:	13 c0       	rjmp	.+38     	; 0x1736 <M_DIO_EnablPullup+0x78>
		case PORT_A:MDIO_PORTA=HIGH;break;
    1710:	eb e3       	ldi	r30, 0x3B	; 59
    1712:	f0 e0       	ldi	r31, 0x00	; 0
    1714:	81 e0       	ldi	r24, 0x01	; 1
    1716:	80 83       	st	Z, r24
    1718:	0e c0       	rjmp	.+28     	; 0x1736 <M_DIO_EnablPullup+0x78>
		case PORT_B:MDIO_PORTB=HIGH;break;
    171a:	e8 e3       	ldi	r30, 0x38	; 56
    171c:	f0 e0       	ldi	r31, 0x00	; 0
    171e:	81 e0       	ldi	r24, 0x01	; 1
    1720:	80 83       	st	Z, r24
    1722:	09 c0       	rjmp	.+18     	; 0x1736 <M_DIO_EnablPullup+0x78>
		case PORT_C:MDIO_PORTC=HIGH;break;
    1724:	e5 e3       	ldi	r30, 0x35	; 53
    1726:	f0 e0       	ldi	r31, 0x00	; 0
    1728:	81 e0       	ldi	r24, 0x01	; 1
    172a:	80 83       	st	Z, r24
    172c:	04 c0       	rjmp	.+8      	; 0x1736 <M_DIO_EnablPullup+0x78>
		case PORT_D:MDIO_PORTD=HIGH;break;
    172e:	e2 e3       	ldi	r30, 0x32	; 50
    1730:	f0 e0       	ldi	r31, 0x00	; 0
    1732:	81 e0       	ldi	r24, 0x01	; 1
    1734:	80 83       	st	Z, r24
		retVal=OK;
		}
	return retVal;
    1736:	89 81       	ldd	r24, Y+1	; 0x01
}
    1738:	0f 90       	pop	r0
    173a:	0f 90       	pop	r0
    173c:	0f 90       	pop	r0
    173e:	0f 90       	pop	r0
    1740:	0f 90       	pop	r0
    1742:	cf 91       	pop	r28
    1744:	df 91       	pop	r29
    1746:	08 95       	ret

00001748 <M_DIO_WriteHighNibble>:
ERROR_STATE_T M_DIO_WriteHighNibble(u8 portName,u8 data){
    1748:	df 93       	push	r29
    174a:	cf 93       	push	r28
    174c:	00 d0       	rcall	.+0      	; 0x174e <M_DIO_WriteHighNibble+0x6>
    174e:	00 d0       	rcall	.+0      	; 0x1750 <M_DIO_WriteHighNibble+0x8>
    1750:	0f 92       	push	r0
    1752:	cd b7       	in	r28, 0x3d	; 61
    1754:	de b7       	in	r29, 0x3e	; 62
    1756:	8a 83       	std	Y+2, r24	; 0x02
    1758:	6b 83       	std	Y+3, r22	; 0x03
	data<<=4;
    175a:	8b 81       	ldd	r24, Y+3	; 0x03
    175c:	82 95       	swap	r24
    175e:	80 7f       	andi	r24, 0xF0	; 240
    1760:	8b 83       	std	Y+3, r24	; 0x03
	ERROR_STATE_T retVal=NOK;
    1762:	19 82       	std	Y+1, r1	; 0x01
		switch(portName){
    1764:	8a 81       	ldd	r24, Y+2	; 0x02
    1766:	28 2f       	mov	r18, r24
    1768:	30 e0       	ldi	r19, 0x00	; 0
    176a:	3d 83       	std	Y+5, r19	; 0x05
    176c:	2c 83       	std	Y+4, r18	; 0x04
    176e:	8c 81       	ldd	r24, Y+4	; 0x04
    1770:	9d 81       	ldd	r25, Y+5	; 0x05
    1772:	81 30       	cpi	r24, 0x01	; 1
    1774:	91 05       	cpc	r25, r1
    1776:	29 f1       	breq	.+74     	; 0x17c2 <M_DIO_WriteHighNibble+0x7a>
    1778:	2c 81       	ldd	r18, Y+4	; 0x04
    177a:	3d 81       	ldd	r19, Y+5	; 0x05
    177c:	22 30       	cpi	r18, 0x02	; 2
    177e:	31 05       	cpc	r19, r1
    1780:	2c f4       	brge	.+10     	; 0x178c <M_DIO_WriteHighNibble+0x44>
    1782:	8c 81       	ldd	r24, Y+4	; 0x04
    1784:	9d 81       	ldd	r25, Y+5	; 0x05
    1786:	00 97       	sbiw	r24, 0x00	; 0
    1788:	61 f0       	breq	.+24     	; 0x17a2 <M_DIO_WriteHighNibble+0x5a>
    178a:	4a c0       	rjmp	.+148    	; 0x1820 <M_DIO_WriteHighNibble+0xd8>
    178c:	2c 81       	ldd	r18, Y+4	; 0x04
    178e:	3d 81       	ldd	r19, Y+5	; 0x05
    1790:	22 30       	cpi	r18, 0x02	; 2
    1792:	31 05       	cpc	r19, r1
    1794:	31 f1       	breq	.+76     	; 0x17e2 <M_DIO_WriteHighNibble+0x9a>
    1796:	8c 81       	ldd	r24, Y+4	; 0x04
    1798:	9d 81       	ldd	r25, Y+5	; 0x05
    179a:	83 30       	cpi	r24, 0x03	; 3
    179c:	91 05       	cpc	r25, r1
    179e:	89 f1       	breq	.+98     	; 0x1802 <M_DIO_WriteHighNibble+0xba>
    17a0:	3f c0       	rjmp	.+126    	; 0x1820 <M_DIO_WriteHighNibble+0xd8>
			case PORT_A:MDIO_PORTA&=0x0f; MDIO_PORTA|=data;break;
    17a2:	ab e3       	ldi	r26, 0x3B	; 59
    17a4:	b0 e0       	ldi	r27, 0x00	; 0
    17a6:	eb e3       	ldi	r30, 0x3B	; 59
    17a8:	f0 e0       	ldi	r31, 0x00	; 0
    17aa:	80 81       	ld	r24, Z
    17ac:	8f 70       	andi	r24, 0x0F	; 15
    17ae:	8c 93       	st	X, r24
    17b0:	ab e3       	ldi	r26, 0x3B	; 59
    17b2:	b0 e0       	ldi	r27, 0x00	; 0
    17b4:	eb e3       	ldi	r30, 0x3B	; 59
    17b6:	f0 e0       	ldi	r31, 0x00	; 0
    17b8:	90 81       	ld	r25, Z
    17ba:	8b 81       	ldd	r24, Y+3	; 0x03
    17bc:	89 2b       	or	r24, r25
    17be:	8c 93       	st	X, r24
    17c0:	2f c0       	rjmp	.+94     	; 0x1820 <M_DIO_WriteHighNibble+0xd8>
			case PORT_B:MDIO_PORTB&=0x0f; MDIO_PORTB|=data;break;
    17c2:	a8 e3       	ldi	r26, 0x38	; 56
    17c4:	b0 e0       	ldi	r27, 0x00	; 0
    17c6:	e8 e3       	ldi	r30, 0x38	; 56
    17c8:	f0 e0       	ldi	r31, 0x00	; 0
    17ca:	80 81       	ld	r24, Z
    17cc:	8f 70       	andi	r24, 0x0F	; 15
    17ce:	8c 93       	st	X, r24
    17d0:	a8 e3       	ldi	r26, 0x38	; 56
    17d2:	b0 e0       	ldi	r27, 0x00	; 0
    17d4:	e8 e3       	ldi	r30, 0x38	; 56
    17d6:	f0 e0       	ldi	r31, 0x00	; 0
    17d8:	90 81       	ld	r25, Z
    17da:	8b 81       	ldd	r24, Y+3	; 0x03
    17dc:	89 2b       	or	r24, r25
    17de:	8c 93       	st	X, r24
    17e0:	1f c0       	rjmp	.+62     	; 0x1820 <M_DIO_WriteHighNibble+0xd8>
			case PORT_C:MDIO_PORTC&=0x0f; MDIO_PORTC|=data;break;
    17e2:	a5 e3       	ldi	r26, 0x35	; 53
    17e4:	b0 e0       	ldi	r27, 0x00	; 0
    17e6:	e5 e3       	ldi	r30, 0x35	; 53
    17e8:	f0 e0       	ldi	r31, 0x00	; 0
    17ea:	80 81       	ld	r24, Z
    17ec:	8f 70       	andi	r24, 0x0F	; 15
    17ee:	8c 93       	st	X, r24
    17f0:	a5 e3       	ldi	r26, 0x35	; 53
    17f2:	b0 e0       	ldi	r27, 0x00	; 0
    17f4:	e5 e3       	ldi	r30, 0x35	; 53
    17f6:	f0 e0       	ldi	r31, 0x00	; 0
    17f8:	90 81       	ld	r25, Z
    17fa:	8b 81       	ldd	r24, Y+3	; 0x03
    17fc:	89 2b       	or	r24, r25
    17fe:	8c 93       	st	X, r24
    1800:	0f c0       	rjmp	.+30     	; 0x1820 <M_DIO_WriteHighNibble+0xd8>
			case PORT_D:MDIO_PORTD&=0x0f; MDIO_PORTA|=data;break;
    1802:	a2 e3       	ldi	r26, 0x32	; 50
    1804:	b0 e0       	ldi	r27, 0x00	; 0
    1806:	e2 e3       	ldi	r30, 0x32	; 50
    1808:	f0 e0       	ldi	r31, 0x00	; 0
    180a:	80 81       	ld	r24, Z
    180c:	8f 70       	andi	r24, 0x0F	; 15
    180e:	8c 93       	st	X, r24
    1810:	ab e3       	ldi	r26, 0x3B	; 59
    1812:	b0 e0       	ldi	r27, 0x00	; 0
    1814:	eb e3       	ldi	r30, 0x3B	; 59
    1816:	f0 e0       	ldi	r31, 0x00	; 0
    1818:	90 81       	ld	r25, Z
    181a:	8b 81       	ldd	r24, Y+3	; 0x03
    181c:	89 2b       	or	r24, r25
    181e:	8c 93       	st	X, r24
			retVal=OK;
			}
		return retVal;
    1820:	89 81       	ldd	r24, Y+1	; 0x01

}
    1822:	0f 90       	pop	r0
    1824:	0f 90       	pop	r0
    1826:	0f 90       	pop	r0
    1828:	0f 90       	pop	r0
    182a:	0f 90       	pop	r0
    182c:	cf 91       	pop	r28
    182e:	df 91       	pop	r29
    1830:	08 95       	ret

00001832 <M_DIO_WriteLowNibble>:
ERROR_STATE_T M_DIO_WriteLowNibble(u8 portName,u8 data){
    1832:	df 93       	push	r29
    1834:	cf 93       	push	r28
    1836:	00 d0       	rcall	.+0      	; 0x1838 <M_DIO_WriteLowNibble+0x6>
    1838:	00 d0       	rcall	.+0      	; 0x183a <M_DIO_WriteLowNibble+0x8>
    183a:	0f 92       	push	r0
    183c:	cd b7       	in	r28, 0x3d	; 61
    183e:	de b7       	in	r29, 0x3e	; 62
    1840:	8a 83       	std	Y+2, r24	; 0x02
    1842:	6b 83       	std	Y+3, r22	; 0x03
	data&=0x0f;
    1844:	8b 81       	ldd	r24, Y+3	; 0x03
    1846:	8f 70       	andi	r24, 0x0F	; 15
    1848:	8b 83       	std	Y+3, r24	; 0x03
	ERROR_STATE_T retVal=NOK;
    184a:	19 82       	std	Y+1, r1	; 0x01
		switch(portName){
    184c:	8a 81       	ldd	r24, Y+2	; 0x02
    184e:	28 2f       	mov	r18, r24
    1850:	30 e0       	ldi	r19, 0x00	; 0
    1852:	3d 83       	std	Y+5, r19	; 0x05
    1854:	2c 83       	std	Y+4, r18	; 0x04
    1856:	8c 81       	ldd	r24, Y+4	; 0x04
    1858:	9d 81       	ldd	r25, Y+5	; 0x05
    185a:	81 30       	cpi	r24, 0x01	; 1
    185c:	91 05       	cpc	r25, r1
    185e:	29 f1       	breq	.+74     	; 0x18aa <M_DIO_WriteLowNibble+0x78>
    1860:	2c 81       	ldd	r18, Y+4	; 0x04
    1862:	3d 81       	ldd	r19, Y+5	; 0x05
    1864:	22 30       	cpi	r18, 0x02	; 2
    1866:	31 05       	cpc	r19, r1
    1868:	2c f4       	brge	.+10     	; 0x1874 <M_DIO_WriteLowNibble+0x42>
    186a:	8c 81       	ldd	r24, Y+4	; 0x04
    186c:	9d 81       	ldd	r25, Y+5	; 0x05
    186e:	00 97       	sbiw	r24, 0x00	; 0
    1870:	61 f0       	breq	.+24     	; 0x188a <M_DIO_WriteLowNibble+0x58>
    1872:	4a c0       	rjmp	.+148    	; 0x1908 <M_DIO_WriteLowNibble+0xd6>
    1874:	2c 81       	ldd	r18, Y+4	; 0x04
    1876:	3d 81       	ldd	r19, Y+5	; 0x05
    1878:	22 30       	cpi	r18, 0x02	; 2
    187a:	31 05       	cpc	r19, r1
    187c:	31 f1       	breq	.+76     	; 0x18ca <M_DIO_WriteLowNibble+0x98>
    187e:	8c 81       	ldd	r24, Y+4	; 0x04
    1880:	9d 81       	ldd	r25, Y+5	; 0x05
    1882:	83 30       	cpi	r24, 0x03	; 3
    1884:	91 05       	cpc	r25, r1
    1886:	89 f1       	breq	.+98     	; 0x18ea <M_DIO_WriteLowNibble+0xb8>
    1888:	3f c0       	rjmp	.+126    	; 0x1908 <M_DIO_WriteLowNibble+0xd6>
			case PORT_A:MDIO_PORTA&=0xf0; MDIO_PORTA|=data;break;
    188a:	ab e3       	ldi	r26, 0x3B	; 59
    188c:	b0 e0       	ldi	r27, 0x00	; 0
    188e:	eb e3       	ldi	r30, 0x3B	; 59
    1890:	f0 e0       	ldi	r31, 0x00	; 0
    1892:	80 81       	ld	r24, Z
    1894:	80 7f       	andi	r24, 0xF0	; 240
    1896:	8c 93       	st	X, r24
    1898:	ab e3       	ldi	r26, 0x3B	; 59
    189a:	b0 e0       	ldi	r27, 0x00	; 0
    189c:	eb e3       	ldi	r30, 0x3B	; 59
    189e:	f0 e0       	ldi	r31, 0x00	; 0
    18a0:	90 81       	ld	r25, Z
    18a2:	8b 81       	ldd	r24, Y+3	; 0x03
    18a4:	89 2b       	or	r24, r25
    18a6:	8c 93       	st	X, r24
    18a8:	2f c0       	rjmp	.+94     	; 0x1908 <M_DIO_WriteLowNibble+0xd6>
			case PORT_B:MDIO_PORTB&=0xf0; MDIO_PORTB|=data;break;
    18aa:	a8 e3       	ldi	r26, 0x38	; 56
    18ac:	b0 e0       	ldi	r27, 0x00	; 0
    18ae:	e8 e3       	ldi	r30, 0x38	; 56
    18b0:	f0 e0       	ldi	r31, 0x00	; 0
    18b2:	80 81       	ld	r24, Z
    18b4:	80 7f       	andi	r24, 0xF0	; 240
    18b6:	8c 93       	st	X, r24
    18b8:	a8 e3       	ldi	r26, 0x38	; 56
    18ba:	b0 e0       	ldi	r27, 0x00	; 0
    18bc:	e8 e3       	ldi	r30, 0x38	; 56
    18be:	f0 e0       	ldi	r31, 0x00	; 0
    18c0:	90 81       	ld	r25, Z
    18c2:	8b 81       	ldd	r24, Y+3	; 0x03
    18c4:	89 2b       	or	r24, r25
    18c6:	8c 93       	st	X, r24
    18c8:	1f c0       	rjmp	.+62     	; 0x1908 <M_DIO_WriteLowNibble+0xd6>
			case PORT_C:MDIO_PORTC&=0xf0; MDIO_PORTC|=data;break;
    18ca:	a5 e3       	ldi	r26, 0x35	; 53
    18cc:	b0 e0       	ldi	r27, 0x00	; 0
    18ce:	e5 e3       	ldi	r30, 0x35	; 53
    18d0:	f0 e0       	ldi	r31, 0x00	; 0
    18d2:	80 81       	ld	r24, Z
    18d4:	80 7f       	andi	r24, 0xF0	; 240
    18d6:	8c 93       	st	X, r24
    18d8:	a5 e3       	ldi	r26, 0x35	; 53
    18da:	b0 e0       	ldi	r27, 0x00	; 0
    18dc:	e5 e3       	ldi	r30, 0x35	; 53
    18de:	f0 e0       	ldi	r31, 0x00	; 0
    18e0:	90 81       	ld	r25, Z
    18e2:	8b 81       	ldd	r24, Y+3	; 0x03
    18e4:	89 2b       	or	r24, r25
    18e6:	8c 93       	st	X, r24
    18e8:	0f c0       	rjmp	.+30     	; 0x1908 <M_DIO_WriteLowNibble+0xd6>
			case PORT_D:MDIO_PORTD&=0xf0; MDIO_PORTA|=data;break;
    18ea:	a2 e3       	ldi	r26, 0x32	; 50
    18ec:	b0 e0       	ldi	r27, 0x00	; 0
    18ee:	e2 e3       	ldi	r30, 0x32	; 50
    18f0:	f0 e0       	ldi	r31, 0x00	; 0
    18f2:	80 81       	ld	r24, Z
    18f4:	80 7f       	andi	r24, 0xF0	; 240
    18f6:	8c 93       	st	X, r24
    18f8:	ab e3       	ldi	r26, 0x3B	; 59
    18fa:	b0 e0       	ldi	r27, 0x00	; 0
    18fc:	eb e3       	ldi	r30, 0x3B	; 59
    18fe:	f0 e0       	ldi	r31, 0x00	; 0
    1900:	90 81       	ld	r25, Z
    1902:	8b 81       	ldd	r24, Y+3	; 0x03
    1904:	89 2b       	or	r24, r25
    1906:	8c 93       	st	X, r24
			retVal=OK;
			}
		return retVal;
    1908:	89 81       	ldd	r24, Y+1	; 0x01

}
    190a:	0f 90       	pop	r0
    190c:	0f 90       	pop	r0
    190e:	0f 90       	pop	r0
    1910:	0f 90       	pop	r0
    1912:	0f 90       	pop	r0
    1914:	cf 91       	pop	r28
    1916:	df 91       	pop	r29
    1918:	08 95       	ret

0000191a <H_SevenSegment_Init>:
 *  Created on: Sep 5, 2024
 *      Author: Nourhan Mohamed Hassan
 */
#include "H_Seven_Segment.h"
#include "H_Seven_Segment_CFG.h"
ERROR_STATE_T H_SevenSegment_Init(u8 portName){
    191a:	df 93       	push	r29
    191c:	cf 93       	push	r28
    191e:	00 d0       	rcall	.+0      	; 0x1920 <H_SevenSegment_Init+0x6>
    1920:	00 d0       	rcall	.+0      	; 0x1922 <H_SevenSegment_Init+0x8>
    1922:	cd b7       	in	r28, 0x3d	; 61
    1924:	de b7       	in	r29, 0x3e	; 62
    1926:	8a 83       	std	Y+2, r24	; 0x02
	ERROR_STATE_T retVal=NOK;
    1928:	19 82       	std	Y+1, r1	; 0x01
	switch(portName){
    192a:	8a 81       	ldd	r24, Y+2	; 0x02
    192c:	28 2f       	mov	r18, r24
    192e:	30 e0       	ldi	r19, 0x00	; 0
    1930:	3c 83       	std	Y+4, r19	; 0x04
    1932:	2b 83       	std	Y+3, r18	; 0x03
    1934:	8b 81       	ldd	r24, Y+3	; 0x03
    1936:	9c 81       	ldd	r25, Y+4	; 0x04
    1938:	81 30       	cpi	r24, 0x01	; 1
    193a:	91 05       	cpc	r25, r1
    193c:	d1 f0       	breq	.+52     	; 0x1972 <H_SevenSegment_Init+0x58>
    193e:	2b 81       	ldd	r18, Y+3	; 0x03
    1940:	3c 81       	ldd	r19, Y+4	; 0x04
    1942:	22 30       	cpi	r18, 0x02	; 2
    1944:	31 05       	cpc	r19, r1
    1946:	2c f4       	brge	.+10     	; 0x1952 <H_SevenSegment_Init+0x38>
    1948:	8b 81       	ldd	r24, Y+3	; 0x03
    194a:	9c 81       	ldd	r25, Y+4	; 0x04
    194c:	00 97       	sbiw	r24, 0x00	; 0
    194e:	61 f0       	breq	.+24     	; 0x1968 <H_SevenSegment_Init+0x4e>
    1950:	1e c0       	rjmp	.+60     	; 0x198e <H_SevenSegment_Init+0x74>
    1952:	2b 81       	ldd	r18, Y+3	; 0x03
    1954:	3c 81       	ldd	r19, Y+4	; 0x04
    1956:	22 30       	cpi	r18, 0x02	; 2
    1958:	31 05       	cpc	r19, r1
    195a:	81 f0       	breq	.+32     	; 0x197c <H_SevenSegment_Init+0x62>
    195c:	8b 81       	ldd	r24, Y+3	; 0x03
    195e:	9c 81       	ldd	r25, Y+4	; 0x04
    1960:	83 30       	cpi	r24, 0x03	; 3
    1962:	91 05       	cpc	r25, r1
    1964:	81 f0       	breq	.+32     	; 0x1986 <H_SevenSegment_Init+0x6c>
    1966:	13 c0       	rjmp	.+38     	; 0x198e <H_SevenSegment_Init+0x74>
	case PORT_A:M_DIO_SetPortDirection(portName,ALL_PORT_OUTPUT); break;
    1968:	8a 81       	ldd	r24, Y+2	; 0x02
    196a:	6f ef       	ldi	r22, 0xFF	; 255
    196c:	0e 94 1a 0b 	call	0x1634	; 0x1634 <M_DIO_SetPortDirection>
    1970:	0e c0       	rjmp	.+28     	; 0x198e <H_SevenSegment_Init+0x74>
	case PORT_B:M_DIO_SetPortDirection(portName,ALL_PORT_OUTPUT); break;
    1972:	8a 81       	ldd	r24, Y+2	; 0x02
    1974:	6f ef       	ldi	r22, 0xFF	; 255
    1976:	0e 94 1a 0b 	call	0x1634	; 0x1634 <M_DIO_SetPortDirection>
    197a:	09 c0       	rjmp	.+18     	; 0x198e <H_SevenSegment_Init+0x74>
	case PORT_C:M_DIO_SetPortDirection(portName,ALL_PORT_OUTPUT); break;
    197c:	8a 81       	ldd	r24, Y+2	; 0x02
    197e:	6f ef       	ldi	r22, 0xFF	; 255
    1980:	0e 94 1a 0b 	call	0x1634	; 0x1634 <M_DIO_SetPortDirection>
    1984:	04 c0       	rjmp	.+8      	; 0x198e <H_SevenSegment_Init+0x74>
	case PORT_D:M_DIO_SetPortDirection(portName,ALL_PORT_OUTPUT); break;
    1986:	8a 81       	ldd	r24, Y+2	; 0x02
    1988:	6f ef       	ldi	r22, 0xFF	; 255
    198a:	0e 94 1a 0b 	call	0x1634	; 0x1634 <M_DIO_SetPortDirection>
	retVal=OK;
	}
	return retVal;
    198e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1990:	0f 90       	pop	r0
    1992:	0f 90       	pop	r0
    1994:	0f 90       	pop	r0
    1996:	0f 90       	pop	r0
    1998:	cf 91       	pop	r28
    199a:	df 91       	pop	r29
    199c:	08 95       	ret

0000199e <H_SevenSegment_Write_Cathode>:
ERROR_STATE_T H_SevenSegment_Write_Cathode(u8 data,u8 portName){
    199e:	df 93       	push	r29
    19a0:	cf 93       	push	r28
    19a2:	cd b7       	in	r28, 0x3d	; 61
    19a4:	de b7       	in	r29, 0x3e	; 62
    19a6:	64 97       	sbiw	r28, 0x14	; 20
    19a8:	0f b6       	in	r0, 0x3f	; 63
    19aa:	f8 94       	cli
    19ac:	de bf       	out	0x3e, r29	; 62
    19ae:	0f be       	out	0x3f, r0	; 63
    19b0:	cd bf       	out	0x3d, r28	; 61
    19b2:	8c 87       	std	Y+12, r24	; 0x0c
    19b4:	6d 87       	std	Y+13, r22	; 0x0d
	u8 arrCathode[10]={
			0X3F,0X06,0X5B,0X4F,0X66,0X6D,0X7D,0X47,0X7F,0X6F
	};
    19b6:	9e 01       	movw	r18, r28
    19b8:	2e 5f       	subi	r18, 0xFE	; 254
    19ba:	3f 4f       	sbci	r19, 0xFF	; 255
    19bc:	39 8b       	std	Y+17, r19	; 0x11
    19be:	28 8b       	std	Y+16, r18	; 0x10
    19c0:	88 e6       	ldi	r24, 0x68	; 104
    19c2:	91 e0       	ldi	r25, 0x01	; 1
    19c4:	9b 8b       	std	Y+19, r25	; 0x13
    19c6:	8a 8b       	std	Y+18, r24	; 0x12
    19c8:	9a e0       	ldi	r25, 0x0A	; 10
    19ca:	9c 8b       	std	Y+20, r25	; 0x14
    19cc:	ea 89       	ldd	r30, Y+18	; 0x12
    19ce:	fb 89       	ldd	r31, Y+19	; 0x13
    19d0:	00 80       	ld	r0, Z
    19d2:	2a 89       	ldd	r18, Y+18	; 0x12
    19d4:	3b 89       	ldd	r19, Y+19	; 0x13
    19d6:	2f 5f       	subi	r18, 0xFF	; 255
    19d8:	3f 4f       	sbci	r19, 0xFF	; 255
    19da:	3b 8b       	std	Y+19, r19	; 0x13
    19dc:	2a 8b       	std	Y+18, r18	; 0x12
    19de:	e8 89       	ldd	r30, Y+16	; 0x10
    19e0:	f9 89       	ldd	r31, Y+17	; 0x11
    19e2:	00 82       	st	Z, r0
    19e4:	28 89       	ldd	r18, Y+16	; 0x10
    19e6:	39 89       	ldd	r19, Y+17	; 0x11
    19e8:	2f 5f       	subi	r18, 0xFF	; 255
    19ea:	3f 4f       	sbci	r19, 0xFF	; 255
    19ec:	39 8b       	std	Y+17, r19	; 0x11
    19ee:	28 8b       	std	Y+16, r18	; 0x10
    19f0:	3c 89       	ldd	r19, Y+20	; 0x14
    19f2:	31 50       	subi	r19, 0x01	; 1
    19f4:	3c 8b       	std	Y+20, r19	; 0x14
    19f6:	8c 89       	ldd	r24, Y+20	; 0x14
    19f8:	88 23       	and	r24, r24
    19fa:	41 f7       	brne	.-48     	; 0x19cc <H_SevenSegment_Write_Cathode+0x2e>
	ERROR_STATE_T retVal=NOK;
    19fc:	19 82       	std	Y+1, r1	; 0x01
	switch(portName){
    19fe:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a00:	e8 2f       	mov	r30, r24
    1a02:	f0 e0       	ldi	r31, 0x00	; 0
    1a04:	ff 87       	std	Y+15, r31	; 0x0f
    1a06:	ee 87       	std	Y+14, r30	; 0x0e
    1a08:	2e 85       	ldd	r18, Y+14	; 0x0e
    1a0a:	3f 85       	ldd	r19, Y+15	; 0x0f
    1a0c:	21 30       	cpi	r18, 0x01	; 1
    1a0e:	31 05       	cpc	r19, r1
    1a10:	11 f1       	breq	.+68     	; 0x1a56 <H_SevenSegment_Write_Cathode+0xb8>
    1a12:	8e 85       	ldd	r24, Y+14	; 0x0e
    1a14:	9f 85       	ldd	r25, Y+15	; 0x0f
    1a16:	82 30       	cpi	r24, 0x02	; 2
    1a18:	91 05       	cpc	r25, r1
    1a1a:	2c f4       	brge	.+10     	; 0x1a26 <H_SevenSegment_Write_Cathode+0x88>
    1a1c:	ee 85       	ldd	r30, Y+14	; 0x0e
    1a1e:	ff 85       	ldd	r31, Y+15	; 0x0f
    1a20:	30 97       	sbiw	r30, 0x00	; 0
    1a22:	61 f0       	breq	.+24     	; 0x1a3c <H_SevenSegment_Write_Cathode+0x9e>
    1a24:	3e c0       	rjmp	.+124    	; 0x1aa2 <H_SevenSegment_Write_Cathode+0x104>
    1a26:	2e 85       	ldd	r18, Y+14	; 0x0e
    1a28:	3f 85       	ldd	r19, Y+15	; 0x0f
    1a2a:	22 30       	cpi	r18, 0x02	; 2
    1a2c:	31 05       	cpc	r19, r1
    1a2e:	01 f1       	breq	.+64     	; 0x1a70 <H_SevenSegment_Write_Cathode+0xd2>
    1a30:	8e 85       	ldd	r24, Y+14	; 0x0e
    1a32:	9f 85       	ldd	r25, Y+15	; 0x0f
    1a34:	83 30       	cpi	r24, 0x03	; 3
    1a36:	91 05       	cpc	r25, r1
    1a38:	41 f1       	breq	.+80     	; 0x1a8a <H_SevenSegment_Write_Cathode+0xec>
    1a3a:	33 c0       	rjmp	.+102    	; 0x1aa2 <H_SevenSegment_Write_Cathode+0x104>
	case PORT_A:M_DIO_SetPortValue(portName,*(arrCathode+data)); break;
    1a3c:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a3e:	88 2f       	mov	r24, r24
    1a40:	90 e0       	ldi	r25, 0x00	; 0
    1a42:	fe 01       	movw	r30, r28
    1a44:	32 96       	adiw	r30, 0x02	; 2
    1a46:	e8 0f       	add	r30, r24
    1a48:	f9 1f       	adc	r31, r25
    1a4a:	90 81       	ld	r25, Z
    1a4c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a4e:	69 2f       	mov	r22, r25
    1a50:	0e 94 81 0a 	call	0x1502	; 0x1502 <M_DIO_SetPortValue>
    1a54:	26 c0       	rjmp	.+76     	; 0x1aa2 <H_SevenSegment_Write_Cathode+0x104>
	case PORT_B:M_DIO_SetPortValue(portName,*(arrCathode+data)); break;
    1a56:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a58:	88 2f       	mov	r24, r24
    1a5a:	90 e0       	ldi	r25, 0x00	; 0
    1a5c:	fe 01       	movw	r30, r28
    1a5e:	32 96       	adiw	r30, 0x02	; 2
    1a60:	e8 0f       	add	r30, r24
    1a62:	f9 1f       	adc	r31, r25
    1a64:	90 81       	ld	r25, Z
    1a66:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a68:	69 2f       	mov	r22, r25
    1a6a:	0e 94 81 0a 	call	0x1502	; 0x1502 <M_DIO_SetPortValue>
    1a6e:	19 c0       	rjmp	.+50     	; 0x1aa2 <H_SevenSegment_Write_Cathode+0x104>
	case PORT_C:M_DIO_SetPortValue(portName,*(arrCathode+data)); break;
    1a70:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a72:	88 2f       	mov	r24, r24
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	fe 01       	movw	r30, r28
    1a78:	32 96       	adiw	r30, 0x02	; 2
    1a7a:	e8 0f       	add	r30, r24
    1a7c:	f9 1f       	adc	r31, r25
    1a7e:	90 81       	ld	r25, Z
    1a80:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a82:	69 2f       	mov	r22, r25
    1a84:	0e 94 81 0a 	call	0x1502	; 0x1502 <M_DIO_SetPortValue>
    1a88:	0c c0       	rjmp	.+24     	; 0x1aa2 <H_SevenSegment_Write_Cathode+0x104>
	case PORT_D:M_DIO_SetPortValue(portName,*(arrCathode+data)); break;
    1a8a:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a8c:	88 2f       	mov	r24, r24
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	fe 01       	movw	r30, r28
    1a92:	32 96       	adiw	r30, 0x02	; 2
    1a94:	e8 0f       	add	r30, r24
    1a96:	f9 1f       	adc	r31, r25
    1a98:	90 81       	ld	r25, Z
    1a9a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a9c:	69 2f       	mov	r22, r25
    1a9e:	0e 94 81 0a 	call	0x1502	; 0x1502 <M_DIO_SetPortValue>
	retVal=OK;
	}
	return retVal;
    1aa2:	89 81       	ldd	r24, Y+1	; 0x01
}
    1aa4:	64 96       	adiw	r28, 0x14	; 20
    1aa6:	0f b6       	in	r0, 0x3f	; 63
    1aa8:	f8 94       	cli
    1aaa:	de bf       	out	0x3e, r29	; 62
    1aac:	0f be       	out	0x3f, r0	; 63
    1aae:	cd bf       	out	0x3d, r28	; 61
    1ab0:	cf 91       	pop	r28
    1ab2:	df 91       	pop	r29
    1ab4:	08 95       	ret

00001ab6 <H_SevenSegment_Write_Anode>:
ERROR_STATE_T H_SevenSegment_Write_Anode(u8 data,u8 portName){
    1ab6:	df 93       	push	r29
    1ab8:	cf 93       	push	r28
    1aba:	cd b7       	in	r28, 0x3d	; 61
    1abc:	de b7       	in	r29, 0x3e	; 62
    1abe:	64 97       	sbiw	r28, 0x14	; 20
    1ac0:	0f b6       	in	r0, 0x3f	; 63
    1ac2:	f8 94       	cli
    1ac4:	de bf       	out	0x3e, r29	; 62
    1ac6:	0f be       	out	0x3f, r0	; 63
    1ac8:	cd bf       	out	0x3d, r28	; 61
    1aca:	8c 87       	std	Y+12, r24	; 0x0c
    1acc:	6d 87       	std	Y+13, r22	; 0x0d
	u8 arrAnode[]={
	0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xB8,0x80,0x90
	};
    1ace:	9e 01       	movw	r18, r28
    1ad0:	2e 5f       	subi	r18, 0xFE	; 254
    1ad2:	3f 4f       	sbci	r19, 0xFF	; 255
    1ad4:	39 8b       	std	Y+17, r19	; 0x11
    1ad6:	28 8b       	std	Y+16, r18	; 0x10
    1ad8:	82 e7       	ldi	r24, 0x72	; 114
    1ada:	91 e0       	ldi	r25, 0x01	; 1
    1adc:	9b 8b       	std	Y+19, r25	; 0x13
    1ade:	8a 8b       	std	Y+18, r24	; 0x12
    1ae0:	9a e0       	ldi	r25, 0x0A	; 10
    1ae2:	9c 8b       	std	Y+20, r25	; 0x14
    1ae4:	ea 89       	ldd	r30, Y+18	; 0x12
    1ae6:	fb 89       	ldd	r31, Y+19	; 0x13
    1ae8:	00 80       	ld	r0, Z
    1aea:	2a 89       	ldd	r18, Y+18	; 0x12
    1aec:	3b 89       	ldd	r19, Y+19	; 0x13
    1aee:	2f 5f       	subi	r18, 0xFF	; 255
    1af0:	3f 4f       	sbci	r19, 0xFF	; 255
    1af2:	3b 8b       	std	Y+19, r19	; 0x13
    1af4:	2a 8b       	std	Y+18, r18	; 0x12
    1af6:	e8 89       	ldd	r30, Y+16	; 0x10
    1af8:	f9 89       	ldd	r31, Y+17	; 0x11
    1afa:	00 82       	st	Z, r0
    1afc:	28 89       	ldd	r18, Y+16	; 0x10
    1afe:	39 89       	ldd	r19, Y+17	; 0x11
    1b00:	2f 5f       	subi	r18, 0xFF	; 255
    1b02:	3f 4f       	sbci	r19, 0xFF	; 255
    1b04:	39 8b       	std	Y+17, r19	; 0x11
    1b06:	28 8b       	std	Y+16, r18	; 0x10
    1b08:	3c 89       	ldd	r19, Y+20	; 0x14
    1b0a:	31 50       	subi	r19, 0x01	; 1
    1b0c:	3c 8b       	std	Y+20, r19	; 0x14
    1b0e:	8c 89       	ldd	r24, Y+20	; 0x14
    1b10:	88 23       	and	r24, r24
    1b12:	41 f7       	brne	.-48     	; 0x1ae4 <H_SevenSegment_Write_Anode+0x2e>
	ERROR_STATE_T retVal=NOK;
    1b14:	19 82       	std	Y+1, r1	; 0x01
	switch(portName){
    1b16:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b18:	e8 2f       	mov	r30, r24
    1b1a:	f0 e0       	ldi	r31, 0x00	; 0
    1b1c:	ff 87       	std	Y+15, r31	; 0x0f
    1b1e:	ee 87       	std	Y+14, r30	; 0x0e
    1b20:	2e 85       	ldd	r18, Y+14	; 0x0e
    1b22:	3f 85       	ldd	r19, Y+15	; 0x0f
    1b24:	21 30       	cpi	r18, 0x01	; 1
    1b26:	31 05       	cpc	r19, r1
    1b28:	11 f1       	breq	.+68     	; 0x1b6e <H_SevenSegment_Write_Anode+0xb8>
    1b2a:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b2c:	9f 85       	ldd	r25, Y+15	; 0x0f
    1b2e:	82 30       	cpi	r24, 0x02	; 2
    1b30:	91 05       	cpc	r25, r1
    1b32:	2c f4       	brge	.+10     	; 0x1b3e <H_SevenSegment_Write_Anode+0x88>
    1b34:	ee 85       	ldd	r30, Y+14	; 0x0e
    1b36:	ff 85       	ldd	r31, Y+15	; 0x0f
    1b38:	30 97       	sbiw	r30, 0x00	; 0
    1b3a:	61 f0       	breq	.+24     	; 0x1b54 <H_SevenSegment_Write_Anode+0x9e>
    1b3c:	3e c0       	rjmp	.+124    	; 0x1bba <H_SevenSegment_Write_Anode+0x104>
    1b3e:	2e 85       	ldd	r18, Y+14	; 0x0e
    1b40:	3f 85       	ldd	r19, Y+15	; 0x0f
    1b42:	22 30       	cpi	r18, 0x02	; 2
    1b44:	31 05       	cpc	r19, r1
    1b46:	01 f1       	breq	.+64     	; 0x1b88 <H_SevenSegment_Write_Anode+0xd2>
    1b48:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b4a:	9f 85       	ldd	r25, Y+15	; 0x0f
    1b4c:	83 30       	cpi	r24, 0x03	; 3
    1b4e:	91 05       	cpc	r25, r1
    1b50:	41 f1       	breq	.+80     	; 0x1ba2 <H_SevenSegment_Write_Anode+0xec>
    1b52:	33 c0       	rjmp	.+102    	; 0x1bba <H_SevenSegment_Write_Anode+0x104>
	case PORT_A:M_DIO_SetPortValue(portName,*(arrAnode+data)); break;
    1b54:	8c 85       	ldd	r24, Y+12	; 0x0c
    1b56:	88 2f       	mov	r24, r24
    1b58:	90 e0       	ldi	r25, 0x00	; 0
    1b5a:	fe 01       	movw	r30, r28
    1b5c:	32 96       	adiw	r30, 0x02	; 2
    1b5e:	e8 0f       	add	r30, r24
    1b60:	f9 1f       	adc	r31, r25
    1b62:	90 81       	ld	r25, Z
    1b64:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b66:	69 2f       	mov	r22, r25
    1b68:	0e 94 81 0a 	call	0x1502	; 0x1502 <M_DIO_SetPortValue>
    1b6c:	26 c0       	rjmp	.+76     	; 0x1bba <H_SevenSegment_Write_Anode+0x104>
	case PORT_B:M_DIO_SetPortValue(portName,*(arrAnode+data)); break;
    1b6e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1b70:	88 2f       	mov	r24, r24
    1b72:	90 e0       	ldi	r25, 0x00	; 0
    1b74:	fe 01       	movw	r30, r28
    1b76:	32 96       	adiw	r30, 0x02	; 2
    1b78:	e8 0f       	add	r30, r24
    1b7a:	f9 1f       	adc	r31, r25
    1b7c:	90 81       	ld	r25, Z
    1b7e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b80:	69 2f       	mov	r22, r25
    1b82:	0e 94 81 0a 	call	0x1502	; 0x1502 <M_DIO_SetPortValue>
    1b86:	19 c0       	rjmp	.+50     	; 0x1bba <H_SevenSegment_Write_Anode+0x104>
	case PORT_C:M_DIO_SetPortValue(portName,*(arrAnode+data)); break;
    1b88:	8c 85       	ldd	r24, Y+12	; 0x0c
    1b8a:	88 2f       	mov	r24, r24
    1b8c:	90 e0       	ldi	r25, 0x00	; 0
    1b8e:	fe 01       	movw	r30, r28
    1b90:	32 96       	adiw	r30, 0x02	; 2
    1b92:	e8 0f       	add	r30, r24
    1b94:	f9 1f       	adc	r31, r25
    1b96:	90 81       	ld	r25, Z
    1b98:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b9a:	69 2f       	mov	r22, r25
    1b9c:	0e 94 81 0a 	call	0x1502	; 0x1502 <M_DIO_SetPortValue>
    1ba0:	0c c0       	rjmp	.+24     	; 0x1bba <H_SevenSegment_Write_Anode+0x104>
	case PORT_D:M_DIO_SetPortValue(portName,*(arrAnode+data)); break;
    1ba2:	8c 85       	ldd	r24, Y+12	; 0x0c
    1ba4:	88 2f       	mov	r24, r24
    1ba6:	90 e0       	ldi	r25, 0x00	; 0
    1ba8:	fe 01       	movw	r30, r28
    1baa:	32 96       	adiw	r30, 0x02	; 2
    1bac:	e8 0f       	add	r30, r24
    1bae:	f9 1f       	adc	r31, r25
    1bb0:	90 81       	ld	r25, Z
    1bb2:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bb4:	69 2f       	mov	r22, r25
    1bb6:	0e 94 81 0a 	call	0x1502	; 0x1502 <M_DIO_SetPortValue>
	retVal=OK;
	}
	return retVal;
    1bba:	89 81       	ldd	r24, Y+1	; 0x01
}
    1bbc:	64 96       	adiw	r28, 0x14	; 20
    1bbe:	0f b6       	in	r0, 0x3f	; 63
    1bc0:	f8 94       	cli
    1bc2:	de bf       	out	0x3e, r29	; 62
    1bc4:	0f be       	out	0x3f, r0	; 63
    1bc6:	cd bf       	out	0x3d, r28	; 61
    1bc8:	cf 91       	pop	r28
    1bca:	df 91       	pop	r29
    1bcc:	08 95       	ret

00001bce <H_SevenSegment_BCD_Init_HighNibble>:

ERROR_STATE_T H_SevenSegment_BCD_Init_HighNibble(u8 portName){
    1bce:	df 93       	push	r29
    1bd0:	cf 93       	push	r28
    1bd2:	00 d0       	rcall	.+0      	; 0x1bd4 <H_SevenSegment_BCD_Init_HighNibble+0x6>
    1bd4:	00 d0       	rcall	.+0      	; 0x1bd6 <H_SevenSegment_BCD_Init_HighNibble+0x8>
    1bd6:	cd b7       	in	r28, 0x3d	; 61
    1bd8:	de b7       	in	r29, 0x3e	; 62
    1bda:	8a 83       	std	Y+2, r24	; 0x02
	ERROR_STATE_T retVal=NOK;
    1bdc:	19 82       	std	Y+1, r1	; 0x01
		switch(portName){
    1bde:	8a 81       	ldd	r24, Y+2	; 0x02
    1be0:	28 2f       	mov	r18, r24
    1be2:	30 e0       	ldi	r19, 0x00	; 0
    1be4:	3c 83       	std	Y+4, r19	; 0x04
    1be6:	2b 83       	std	Y+3, r18	; 0x03
    1be8:	8b 81       	ldd	r24, Y+3	; 0x03
    1bea:	9c 81       	ldd	r25, Y+4	; 0x04
    1bec:	81 30       	cpi	r24, 0x01	; 1
    1bee:	91 05       	cpc	r25, r1
    1bf0:	59 f1       	breq	.+86     	; 0x1c48 <H_SevenSegment_BCD_Init_HighNibble+0x7a>
    1bf2:	2b 81       	ldd	r18, Y+3	; 0x03
    1bf4:	3c 81       	ldd	r19, Y+4	; 0x04
    1bf6:	22 30       	cpi	r18, 0x02	; 2
    1bf8:	31 05       	cpc	r19, r1
    1bfa:	2c f4       	brge	.+10     	; 0x1c06 <H_SevenSegment_BCD_Init_HighNibble+0x38>
    1bfc:	8b 81       	ldd	r24, Y+3	; 0x03
    1bfe:	9c 81       	ldd	r25, Y+4	; 0x04
    1c00:	00 97       	sbiw	r24, 0x00	; 0
    1c02:	69 f0       	breq	.+26     	; 0x1c1e <H_SevenSegment_BCD_Init_HighNibble+0x50>
    1c04:	5f c0       	rjmp	.+190    	; 0x1cc4 <H_SevenSegment_BCD_Init_HighNibble+0xf6>
    1c06:	2b 81       	ldd	r18, Y+3	; 0x03
    1c08:	3c 81       	ldd	r19, Y+4	; 0x04
    1c0a:	22 30       	cpi	r18, 0x02	; 2
    1c0c:	31 05       	cpc	r19, r1
    1c0e:	89 f1       	breq	.+98     	; 0x1c72 <H_SevenSegment_BCD_Init_HighNibble+0xa4>
    1c10:	8b 81       	ldd	r24, Y+3	; 0x03
    1c12:	9c 81       	ldd	r25, Y+4	; 0x04
    1c14:	83 30       	cpi	r24, 0x03	; 3
    1c16:	91 05       	cpc	r25, r1
    1c18:	09 f4       	brne	.+2      	; 0x1c1c <H_SevenSegment_BCD_Init_HighNibble+0x4e>
    1c1a:	40 c0       	rjmp	.+128    	; 0x1c9c <H_SevenSegment_BCD_Init_HighNibble+0xce>
    1c1c:	53 c0       	rjmp	.+166    	; 0x1cc4 <H_SevenSegment_BCD_Init_HighNibble+0xf6>
		case PORT_A:
		M_DIO_SetPinDirection(PORT_A,PIN4,OUTPUT);
    1c1e:	80 e0       	ldi	r24, 0x00	; 0
    1c20:	64 e0       	ldi	r22, 0x04	; 4
    1c22:	41 e0       	ldi	r20, 0x01	; 1
    1c24:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_A,PIN5,OUTPUT);
    1c28:	80 e0       	ldi	r24, 0x00	; 0
    1c2a:	65 e0       	ldi	r22, 0x05	; 5
    1c2c:	41 e0       	ldi	r20, 0x01	; 1
    1c2e:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_A,PIN6,OUTPUT);
    1c32:	80 e0       	ldi	r24, 0x00	; 0
    1c34:	66 e0       	ldi	r22, 0x06	; 6
    1c36:	41 e0       	ldi	r20, 0x01	; 1
    1c38:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_A,PIN7,OUTPUT); break;
    1c3c:	80 e0       	ldi	r24, 0x00	; 0
    1c3e:	67 e0       	ldi	r22, 0x07	; 7
    1c40:	41 e0       	ldi	r20, 0x01	; 1
    1c42:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
    1c46:	3e c0       	rjmp	.+124    	; 0x1cc4 <H_SevenSegment_BCD_Init_HighNibble+0xf6>
		case PORT_B:
		M_DIO_SetPinDirection(PORT_B,PIN4,OUTPUT);
    1c48:	81 e0       	ldi	r24, 0x01	; 1
    1c4a:	64 e0       	ldi	r22, 0x04	; 4
    1c4c:	41 e0       	ldi	r20, 0x01	; 1
    1c4e:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_B,PIN5,OUTPUT);
    1c52:	81 e0       	ldi	r24, 0x01	; 1
    1c54:	65 e0       	ldi	r22, 0x05	; 5
    1c56:	41 e0       	ldi	r20, 0x01	; 1
    1c58:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_B,PIN6,OUTPUT);
    1c5c:	81 e0       	ldi	r24, 0x01	; 1
    1c5e:	66 e0       	ldi	r22, 0x06	; 6
    1c60:	41 e0       	ldi	r20, 0x01	; 1
    1c62:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_B,PIN7,OUTPUT); break;
    1c66:	81 e0       	ldi	r24, 0x01	; 1
    1c68:	67 e0       	ldi	r22, 0x07	; 7
    1c6a:	41 e0       	ldi	r20, 0x01	; 1
    1c6c:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
    1c70:	29 c0       	rjmp	.+82     	; 0x1cc4 <H_SevenSegment_BCD_Init_HighNibble+0xf6>

		case PORT_C:
		M_DIO_SetPinDirection(PORT_C,PIN4,OUTPUT);
    1c72:	82 e0       	ldi	r24, 0x02	; 2
    1c74:	64 e0       	ldi	r22, 0x04	; 4
    1c76:	41 e0       	ldi	r20, 0x01	; 1
    1c78:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_C,PIN5,OUTPUT);
    1c7c:	82 e0       	ldi	r24, 0x02	; 2
    1c7e:	65 e0       	ldi	r22, 0x05	; 5
    1c80:	41 e0       	ldi	r20, 0x01	; 1
    1c82:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_C,PIN6,OUTPUT);
    1c86:	82 e0       	ldi	r24, 0x02	; 2
    1c88:	66 e0       	ldi	r22, 0x06	; 6
    1c8a:	41 e0       	ldi	r20, 0x01	; 1
    1c8c:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_C,PIN7,OUTPUT); break;
    1c90:	82 e0       	ldi	r24, 0x02	; 2
    1c92:	67 e0       	ldi	r22, 0x07	; 7
    1c94:	41 e0       	ldi	r20, 0x01	; 1
    1c96:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
    1c9a:	14 c0       	rjmp	.+40     	; 0x1cc4 <H_SevenSegment_BCD_Init_HighNibble+0xf6>

		case PORT_D:
		M_DIO_SetPinDirection(PORT_D,PIN4,OUTPUT);
    1c9c:	83 e0       	ldi	r24, 0x03	; 3
    1c9e:	64 e0       	ldi	r22, 0x04	; 4
    1ca0:	41 e0       	ldi	r20, 0x01	; 1
    1ca2:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_D,PIN5,OUTPUT);
    1ca6:	83 e0       	ldi	r24, 0x03	; 3
    1ca8:	65 e0       	ldi	r22, 0x05	; 5
    1caa:	41 e0       	ldi	r20, 0x01	; 1
    1cac:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_D,PIN6,OUTPUT);
    1cb0:	83 e0       	ldi	r24, 0x03	; 3
    1cb2:	66 e0       	ldi	r22, 0x06	; 6
    1cb4:	41 e0       	ldi	r20, 0x01	; 1
    1cb6:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_D,PIN7,OUTPUT); break;
    1cba:	83 e0       	ldi	r24, 0x03	; 3
    1cbc:	67 e0       	ldi	r22, 0x07	; 7
    1cbe:	41 e0       	ldi	r20, 0x01	; 1
    1cc0:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		retVal=OK;
		}
		return retVal;
    1cc4:	89 81       	ldd	r24, Y+1	; 0x01
}
    1cc6:	0f 90       	pop	r0
    1cc8:	0f 90       	pop	r0
    1cca:	0f 90       	pop	r0
    1ccc:	0f 90       	pop	r0
    1cce:	cf 91       	pop	r28
    1cd0:	df 91       	pop	r29
    1cd2:	08 95       	ret

00001cd4 <H_SevenSegment_BCD_Init_LowNibble>:
ERROR_STATE_T H_SevenSegment_BCD_Init_LowNibble(u8 portName){
    1cd4:	df 93       	push	r29
    1cd6:	cf 93       	push	r28
    1cd8:	00 d0       	rcall	.+0      	; 0x1cda <H_SevenSegment_BCD_Init_LowNibble+0x6>
    1cda:	00 d0       	rcall	.+0      	; 0x1cdc <H_SevenSegment_BCD_Init_LowNibble+0x8>
    1cdc:	cd b7       	in	r28, 0x3d	; 61
    1cde:	de b7       	in	r29, 0x3e	; 62
    1ce0:	8a 83       	std	Y+2, r24	; 0x02
	ERROR_STATE_T retVal=NOK;
    1ce2:	19 82       	std	Y+1, r1	; 0x01
		switch(portName){
    1ce4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ce6:	28 2f       	mov	r18, r24
    1ce8:	30 e0       	ldi	r19, 0x00	; 0
    1cea:	3c 83       	std	Y+4, r19	; 0x04
    1cec:	2b 83       	std	Y+3, r18	; 0x03
    1cee:	8b 81       	ldd	r24, Y+3	; 0x03
    1cf0:	9c 81       	ldd	r25, Y+4	; 0x04
    1cf2:	81 30       	cpi	r24, 0x01	; 1
    1cf4:	91 05       	cpc	r25, r1
    1cf6:	59 f1       	breq	.+86     	; 0x1d4e <H_SevenSegment_BCD_Init_LowNibble+0x7a>
    1cf8:	2b 81       	ldd	r18, Y+3	; 0x03
    1cfa:	3c 81       	ldd	r19, Y+4	; 0x04
    1cfc:	22 30       	cpi	r18, 0x02	; 2
    1cfe:	31 05       	cpc	r19, r1
    1d00:	2c f4       	brge	.+10     	; 0x1d0c <H_SevenSegment_BCD_Init_LowNibble+0x38>
    1d02:	8b 81       	ldd	r24, Y+3	; 0x03
    1d04:	9c 81       	ldd	r25, Y+4	; 0x04
    1d06:	00 97       	sbiw	r24, 0x00	; 0
    1d08:	69 f0       	breq	.+26     	; 0x1d24 <H_SevenSegment_BCD_Init_LowNibble+0x50>
    1d0a:	5f c0       	rjmp	.+190    	; 0x1dca <H_SevenSegment_BCD_Init_LowNibble+0xf6>
    1d0c:	2b 81       	ldd	r18, Y+3	; 0x03
    1d0e:	3c 81       	ldd	r19, Y+4	; 0x04
    1d10:	22 30       	cpi	r18, 0x02	; 2
    1d12:	31 05       	cpc	r19, r1
    1d14:	89 f1       	breq	.+98     	; 0x1d78 <H_SevenSegment_BCD_Init_LowNibble+0xa4>
    1d16:	8b 81       	ldd	r24, Y+3	; 0x03
    1d18:	9c 81       	ldd	r25, Y+4	; 0x04
    1d1a:	83 30       	cpi	r24, 0x03	; 3
    1d1c:	91 05       	cpc	r25, r1
    1d1e:	09 f4       	brne	.+2      	; 0x1d22 <H_SevenSegment_BCD_Init_LowNibble+0x4e>
    1d20:	40 c0       	rjmp	.+128    	; 0x1da2 <H_SevenSegment_BCD_Init_LowNibble+0xce>
    1d22:	53 c0       	rjmp	.+166    	; 0x1dca <H_SevenSegment_BCD_Init_LowNibble+0xf6>
		case PORT_A:
		M_DIO_SetPinDirection(PORT_A,PIN0,OUTPUT);
    1d24:	80 e0       	ldi	r24, 0x00	; 0
    1d26:	60 e0       	ldi	r22, 0x00	; 0
    1d28:	41 e0       	ldi	r20, 0x01	; 1
    1d2a:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_A,PIN1,OUTPUT);
    1d2e:	80 e0       	ldi	r24, 0x00	; 0
    1d30:	61 e0       	ldi	r22, 0x01	; 1
    1d32:	41 e0       	ldi	r20, 0x01	; 1
    1d34:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_A,PIN2,OUTPUT);
    1d38:	80 e0       	ldi	r24, 0x00	; 0
    1d3a:	62 e0       	ldi	r22, 0x02	; 2
    1d3c:	41 e0       	ldi	r20, 0x01	; 1
    1d3e:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_A,PIN3,OUTPUT); break;
    1d42:	80 e0       	ldi	r24, 0x00	; 0
    1d44:	63 e0       	ldi	r22, 0x03	; 3
    1d46:	41 e0       	ldi	r20, 0x01	; 1
    1d48:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
    1d4c:	3e c0       	rjmp	.+124    	; 0x1dca <H_SevenSegment_BCD_Init_LowNibble+0xf6>
		case PORT_B:
		M_DIO_SetPinDirection(PORT_B,PIN0,OUTPUT);
    1d4e:	81 e0       	ldi	r24, 0x01	; 1
    1d50:	60 e0       	ldi	r22, 0x00	; 0
    1d52:	41 e0       	ldi	r20, 0x01	; 1
    1d54:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_B,PIN1,OUTPUT);
    1d58:	81 e0       	ldi	r24, 0x01	; 1
    1d5a:	61 e0       	ldi	r22, 0x01	; 1
    1d5c:	41 e0       	ldi	r20, 0x01	; 1
    1d5e:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_B,PIN2,OUTPUT);
    1d62:	81 e0       	ldi	r24, 0x01	; 1
    1d64:	62 e0       	ldi	r22, 0x02	; 2
    1d66:	41 e0       	ldi	r20, 0x01	; 1
    1d68:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_B,PIN3,OUTPUT); break;
    1d6c:	81 e0       	ldi	r24, 0x01	; 1
    1d6e:	63 e0       	ldi	r22, 0x03	; 3
    1d70:	41 e0       	ldi	r20, 0x01	; 1
    1d72:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
    1d76:	29 c0       	rjmp	.+82     	; 0x1dca <H_SevenSegment_BCD_Init_LowNibble+0xf6>

		case PORT_C:
		M_DIO_SetPinDirection(PORT_C,PIN0,OUTPUT);
    1d78:	82 e0       	ldi	r24, 0x02	; 2
    1d7a:	60 e0       	ldi	r22, 0x00	; 0
    1d7c:	41 e0       	ldi	r20, 0x01	; 1
    1d7e:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_C,PIN1,OUTPUT);
    1d82:	82 e0       	ldi	r24, 0x02	; 2
    1d84:	61 e0       	ldi	r22, 0x01	; 1
    1d86:	41 e0       	ldi	r20, 0x01	; 1
    1d88:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_C,PIN2,OUTPUT);
    1d8c:	82 e0       	ldi	r24, 0x02	; 2
    1d8e:	62 e0       	ldi	r22, 0x02	; 2
    1d90:	41 e0       	ldi	r20, 0x01	; 1
    1d92:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_C,PIN3,OUTPUT); break;
    1d96:	82 e0       	ldi	r24, 0x02	; 2
    1d98:	63 e0       	ldi	r22, 0x03	; 3
    1d9a:	41 e0       	ldi	r20, 0x01	; 1
    1d9c:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
    1da0:	14 c0       	rjmp	.+40     	; 0x1dca <H_SevenSegment_BCD_Init_LowNibble+0xf6>

		case PORT_D:
		M_DIO_SetPinDirection(PORT_D,PIN0,OUTPUT);
    1da2:	83 e0       	ldi	r24, 0x03	; 3
    1da4:	60 e0       	ldi	r22, 0x00	; 0
    1da6:	41 e0       	ldi	r20, 0x01	; 1
    1da8:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_D,PIN1,OUTPUT);
    1dac:	83 e0       	ldi	r24, 0x03	; 3
    1dae:	61 e0       	ldi	r22, 0x01	; 1
    1db0:	41 e0       	ldi	r20, 0x01	; 1
    1db2:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_D,PIN2,OUTPUT);
    1db6:	83 e0       	ldi	r24, 0x03	; 3
    1db8:	62 e0       	ldi	r22, 0x02	; 2
    1dba:	41 e0       	ldi	r20, 0x01	; 1
    1dbc:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		M_DIO_SetPinDirection(PORT_D,PIN3,OUTPUT); break;
    1dc0:	83 e0       	ldi	r24, 0x03	; 3
    1dc2:	63 e0       	ldi	r22, 0x03	; 3
    1dc4:	41 e0       	ldi	r20, 0x01	; 1
    1dc6:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
		retVal=OK;
		}
		return retVal;
    1dca:	89 81       	ldd	r24, Y+1	; 0x01
}
    1dcc:	0f 90       	pop	r0
    1dce:	0f 90       	pop	r0
    1dd0:	0f 90       	pop	r0
    1dd2:	0f 90       	pop	r0
    1dd4:	cf 91       	pop	r28
    1dd6:	df 91       	pop	r29
    1dd8:	08 95       	ret

00001dda <H_SevenSegment_BCD_HighNibble_Write>:

ERROR_STATE_T H_SevenSegment_BCD_HighNibble_Write(u8 portName,u8 data){
    1dda:	df 93       	push	r29
    1ddc:	cf 93       	push	r28
    1dde:	00 d0       	rcall	.+0      	; 0x1de0 <H_SevenSegment_BCD_HighNibble_Write+0x6>
    1de0:	00 d0       	rcall	.+0      	; 0x1de2 <H_SevenSegment_BCD_HighNibble_Write+0x8>
    1de2:	0f 92       	push	r0
    1de4:	cd b7       	in	r28, 0x3d	; 61
    1de6:	de b7       	in	r29, 0x3e	; 62
    1de8:	8a 83       	std	Y+2, r24	; 0x02
    1dea:	6b 83       	std	Y+3, r22	; 0x03
	ERROR_STATE_T retVal=NOK;
    1dec:	19 82       	std	Y+1, r1	; 0x01
	switch(portName){
    1dee:	8a 81       	ldd	r24, Y+2	; 0x02
    1df0:	28 2f       	mov	r18, r24
    1df2:	30 e0       	ldi	r19, 0x00	; 0
    1df4:	3d 83       	std	Y+5, r19	; 0x05
    1df6:	2c 83       	std	Y+4, r18	; 0x04
    1df8:	8c 81       	ldd	r24, Y+4	; 0x04
    1dfa:	9d 81       	ldd	r25, Y+5	; 0x05
    1dfc:	81 30       	cpi	r24, 0x01	; 1
    1dfe:	91 05       	cpc	r25, r1
    1e00:	d1 f0       	breq	.+52     	; 0x1e36 <H_SevenSegment_BCD_HighNibble_Write+0x5c>
    1e02:	2c 81       	ldd	r18, Y+4	; 0x04
    1e04:	3d 81       	ldd	r19, Y+5	; 0x05
    1e06:	22 30       	cpi	r18, 0x02	; 2
    1e08:	31 05       	cpc	r19, r1
    1e0a:	2c f4       	brge	.+10     	; 0x1e16 <H_SevenSegment_BCD_HighNibble_Write+0x3c>
    1e0c:	8c 81       	ldd	r24, Y+4	; 0x04
    1e0e:	9d 81       	ldd	r25, Y+5	; 0x05
    1e10:	00 97       	sbiw	r24, 0x00	; 0
    1e12:	61 f0       	breq	.+24     	; 0x1e2c <H_SevenSegment_BCD_HighNibble_Write+0x52>
    1e14:	1e c0       	rjmp	.+60     	; 0x1e52 <H_SevenSegment_BCD_HighNibble_Write+0x78>
    1e16:	2c 81       	ldd	r18, Y+4	; 0x04
    1e18:	3d 81       	ldd	r19, Y+5	; 0x05
    1e1a:	22 30       	cpi	r18, 0x02	; 2
    1e1c:	31 05       	cpc	r19, r1
    1e1e:	81 f0       	breq	.+32     	; 0x1e40 <H_SevenSegment_BCD_HighNibble_Write+0x66>
    1e20:	8c 81       	ldd	r24, Y+4	; 0x04
    1e22:	9d 81       	ldd	r25, Y+5	; 0x05
    1e24:	83 30       	cpi	r24, 0x03	; 3
    1e26:	91 05       	cpc	r25, r1
    1e28:	81 f0       	breq	.+32     	; 0x1e4a <H_SevenSegment_BCD_HighNibble_Write+0x70>
    1e2a:	13 c0       	rjmp	.+38     	; 0x1e52 <H_SevenSegment_BCD_HighNibble_Write+0x78>
	case PORT_A:M_DIO_WriteHighNibble(portName,data); break;
    1e2c:	8a 81       	ldd	r24, Y+2	; 0x02
    1e2e:	6b 81       	ldd	r22, Y+3	; 0x03
    1e30:	0e 94 a4 0b 	call	0x1748	; 0x1748 <M_DIO_WriteHighNibble>
    1e34:	0e c0       	rjmp	.+28     	; 0x1e52 <H_SevenSegment_BCD_HighNibble_Write+0x78>
	case PORT_B:M_DIO_WriteHighNibble(portName,data); break;
    1e36:	8a 81       	ldd	r24, Y+2	; 0x02
    1e38:	6b 81       	ldd	r22, Y+3	; 0x03
    1e3a:	0e 94 a4 0b 	call	0x1748	; 0x1748 <M_DIO_WriteHighNibble>
    1e3e:	09 c0       	rjmp	.+18     	; 0x1e52 <H_SevenSegment_BCD_HighNibble_Write+0x78>
	case PORT_C:M_DIO_WriteHighNibble(portName,data); break;
    1e40:	8a 81       	ldd	r24, Y+2	; 0x02
    1e42:	6b 81       	ldd	r22, Y+3	; 0x03
    1e44:	0e 94 a4 0b 	call	0x1748	; 0x1748 <M_DIO_WriteHighNibble>
    1e48:	04 c0       	rjmp	.+8      	; 0x1e52 <H_SevenSegment_BCD_HighNibble_Write+0x78>
	case PORT_D:M_DIO_WriteHighNibble(portName,data); break;
    1e4a:	8a 81       	ldd	r24, Y+2	; 0x02
    1e4c:	6b 81       	ldd	r22, Y+3	; 0x03
    1e4e:	0e 94 a4 0b 	call	0x1748	; 0x1748 <M_DIO_WriteHighNibble>
	retVal=OK;
	}
	return retVal;
    1e52:	89 81       	ldd	r24, Y+1	; 0x01
}
    1e54:	0f 90       	pop	r0
    1e56:	0f 90       	pop	r0
    1e58:	0f 90       	pop	r0
    1e5a:	0f 90       	pop	r0
    1e5c:	0f 90       	pop	r0
    1e5e:	cf 91       	pop	r28
    1e60:	df 91       	pop	r29
    1e62:	08 95       	ret

00001e64 <H_SevenSegment_BCD_LowNibble_Write>:
ERROR_STATE_T H_SevenSegment_BCD_LowNibble_Write(u8 portName,u8 data){
    1e64:	df 93       	push	r29
    1e66:	cf 93       	push	r28
    1e68:	00 d0       	rcall	.+0      	; 0x1e6a <H_SevenSegment_BCD_LowNibble_Write+0x6>
    1e6a:	00 d0       	rcall	.+0      	; 0x1e6c <H_SevenSegment_BCD_LowNibble_Write+0x8>
    1e6c:	0f 92       	push	r0
    1e6e:	cd b7       	in	r28, 0x3d	; 61
    1e70:	de b7       	in	r29, 0x3e	; 62
    1e72:	8a 83       	std	Y+2, r24	; 0x02
    1e74:	6b 83       	std	Y+3, r22	; 0x03
	ERROR_STATE_T retVal=NOK;
    1e76:	19 82       	std	Y+1, r1	; 0x01
	switch(portName){
    1e78:	8a 81       	ldd	r24, Y+2	; 0x02
    1e7a:	28 2f       	mov	r18, r24
    1e7c:	30 e0       	ldi	r19, 0x00	; 0
    1e7e:	3d 83       	std	Y+5, r19	; 0x05
    1e80:	2c 83       	std	Y+4, r18	; 0x04
    1e82:	8c 81       	ldd	r24, Y+4	; 0x04
    1e84:	9d 81       	ldd	r25, Y+5	; 0x05
    1e86:	81 30       	cpi	r24, 0x01	; 1
    1e88:	91 05       	cpc	r25, r1
    1e8a:	d1 f0       	breq	.+52     	; 0x1ec0 <H_SevenSegment_BCD_LowNibble_Write+0x5c>
    1e8c:	2c 81       	ldd	r18, Y+4	; 0x04
    1e8e:	3d 81       	ldd	r19, Y+5	; 0x05
    1e90:	22 30       	cpi	r18, 0x02	; 2
    1e92:	31 05       	cpc	r19, r1
    1e94:	2c f4       	brge	.+10     	; 0x1ea0 <H_SevenSegment_BCD_LowNibble_Write+0x3c>
    1e96:	8c 81       	ldd	r24, Y+4	; 0x04
    1e98:	9d 81       	ldd	r25, Y+5	; 0x05
    1e9a:	00 97       	sbiw	r24, 0x00	; 0
    1e9c:	61 f0       	breq	.+24     	; 0x1eb6 <H_SevenSegment_BCD_LowNibble_Write+0x52>
    1e9e:	1e c0       	rjmp	.+60     	; 0x1edc <H_SevenSegment_BCD_LowNibble_Write+0x78>
    1ea0:	2c 81       	ldd	r18, Y+4	; 0x04
    1ea2:	3d 81       	ldd	r19, Y+5	; 0x05
    1ea4:	22 30       	cpi	r18, 0x02	; 2
    1ea6:	31 05       	cpc	r19, r1
    1ea8:	81 f0       	breq	.+32     	; 0x1eca <H_SevenSegment_BCD_LowNibble_Write+0x66>
    1eaa:	8c 81       	ldd	r24, Y+4	; 0x04
    1eac:	9d 81       	ldd	r25, Y+5	; 0x05
    1eae:	83 30       	cpi	r24, 0x03	; 3
    1eb0:	91 05       	cpc	r25, r1
    1eb2:	81 f0       	breq	.+32     	; 0x1ed4 <H_SevenSegment_BCD_LowNibble_Write+0x70>
    1eb4:	13 c0       	rjmp	.+38     	; 0x1edc <H_SevenSegment_BCD_LowNibble_Write+0x78>
	case PORT_A:M_DIO_WriteLowNibble(portName,data); break;
    1eb6:	8a 81       	ldd	r24, Y+2	; 0x02
    1eb8:	6b 81       	ldd	r22, Y+3	; 0x03
    1eba:	0e 94 19 0c 	call	0x1832	; 0x1832 <M_DIO_WriteLowNibble>
    1ebe:	0e c0       	rjmp	.+28     	; 0x1edc <H_SevenSegment_BCD_LowNibble_Write+0x78>
	case PORT_B:M_DIO_WriteLowNibble(portName,data); break;
    1ec0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ec2:	6b 81       	ldd	r22, Y+3	; 0x03
    1ec4:	0e 94 19 0c 	call	0x1832	; 0x1832 <M_DIO_WriteLowNibble>
    1ec8:	09 c0       	rjmp	.+18     	; 0x1edc <H_SevenSegment_BCD_LowNibble_Write+0x78>
	case PORT_C:M_DIO_WriteLowNibble(portName,data); break;
    1eca:	8a 81       	ldd	r24, Y+2	; 0x02
    1ecc:	6b 81       	ldd	r22, Y+3	; 0x03
    1ece:	0e 94 19 0c 	call	0x1832	; 0x1832 <M_DIO_WriteLowNibble>
    1ed2:	04 c0       	rjmp	.+8      	; 0x1edc <H_SevenSegment_BCD_LowNibble_Write+0x78>
	case PORT_D:M_DIO_WriteLowNibble(portName,data); break;
    1ed4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ed6:	6b 81       	ldd	r22, Y+3	; 0x03
    1ed8:	0e 94 19 0c 	call	0x1832	; 0x1832 <M_DIO_WriteLowNibble>
	retVal=OK;
	}
	return retVal;
    1edc:	89 81       	ldd	r24, Y+1	; 0x01
}
    1ede:	0f 90       	pop	r0
    1ee0:	0f 90       	pop	r0
    1ee2:	0f 90       	pop	r0
    1ee4:	0f 90       	pop	r0
    1ee6:	0f 90       	pop	r0
    1ee8:	cf 91       	pop	r28
    1eea:	df 91       	pop	r29
    1eec:	08 95       	ret

00001eee <H_LCD_Init>:
 *      Author: Nourhan Mohamed Hassan
 */
#include "../H_LCD_Driver/H_LCD.h"
#include "../H_LCD_Driver/H_LCD_CFG.h"

void H_LCD_Init(){
    1eee:	df 93       	push	r29
    1ef0:	cf 93       	push	r28
    1ef2:	cd b7       	in	r28, 0x3d	; 61
    1ef4:	de b7       	in	r29, 0x3e	; 62
    1ef6:	e8 97       	sbiw	r28, 0x38	; 56
    1ef8:	0f b6       	in	r0, 0x3f	; 63
    1efa:	f8 94       	cli
    1efc:	de bf       	out	0x3e, r29	; 62
    1efe:	0f be       	out	0x3f, r0	; 63
    1f00:	cd bf       	out	0x3d, r28	; 61

	M_DIO_SetPortDirection(LCD_DATA_PORT,0xff);
    1f02:	80 e0       	ldi	r24, 0x00	; 0
    1f04:	6f ef       	ldi	r22, 0xFF	; 255
    1f06:	0e 94 1a 0b 	call	0x1634	; 0x1634 <M_DIO_SetPortDirection>
	M_DIO_SetPinDirection(LCD_RS_PORT,LCD_RS_PIN,OUTPUT);
    1f0a:	81 e0       	ldi	r24, 0x01	; 1
    1f0c:	62 e0       	ldi	r22, 0x02	; 2
    1f0e:	41 e0       	ldi	r20, 0x01	; 1
    1f10:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
	M_DIO_SetPinDirection(LCD_EN_PORT,LCD_EN_PIN,OUTPUT);
    1f14:	81 e0       	ldi	r24, 0x01	; 1
    1f16:	60 e0       	ldi	r22, 0x00	; 0
    1f18:	41 e0       	ldi	r20, 0x01	; 1
    1f1a:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
    1f1e:	80 e0       	ldi	r24, 0x00	; 0
    1f20:	90 e0       	ldi	r25, 0x00	; 0
    1f22:	a8 e4       	ldi	r26, 0x48	; 72
    1f24:	b3 e4       	ldi	r27, 0x43	; 67
    1f26:	8d ab       	std	Y+53, r24	; 0x35
    1f28:	9e ab       	std	Y+54, r25	; 0x36
    1f2a:	af ab       	std	Y+55, r26	; 0x37
    1f2c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f2e:	6d a9       	ldd	r22, Y+53	; 0x35
    1f30:	7e a9       	ldd	r23, Y+54	; 0x36
    1f32:	8f a9       	ldd	r24, Y+55	; 0x37
    1f34:	98 ad       	ldd	r25, Y+56	; 0x38
    1f36:	20 e0       	ldi	r18, 0x00	; 0
    1f38:	30 e0       	ldi	r19, 0x00	; 0
    1f3a:	4a e7       	ldi	r20, 0x7A	; 122
    1f3c:	53 e4       	ldi	r21, 0x43	; 67
    1f3e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f42:	dc 01       	movw	r26, r24
    1f44:	cb 01       	movw	r24, r22
    1f46:	89 ab       	std	Y+49, r24	; 0x31
    1f48:	9a ab       	std	Y+50, r25	; 0x32
    1f4a:	ab ab       	std	Y+51, r26	; 0x33
    1f4c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1f4e:	69 a9       	ldd	r22, Y+49	; 0x31
    1f50:	7a a9       	ldd	r23, Y+50	; 0x32
    1f52:	8b a9       	ldd	r24, Y+51	; 0x33
    1f54:	9c a9       	ldd	r25, Y+52	; 0x34
    1f56:	20 e0       	ldi	r18, 0x00	; 0
    1f58:	30 e0       	ldi	r19, 0x00	; 0
    1f5a:	40 e8       	ldi	r20, 0x80	; 128
    1f5c:	5f e3       	ldi	r21, 0x3F	; 63
    1f5e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1f62:	88 23       	and	r24, r24
    1f64:	2c f4       	brge	.+10     	; 0x1f70 <H_LCD_Init+0x82>
		__ticks = 1;
    1f66:	81 e0       	ldi	r24, 0x01	; 1
    1f68:	90 e0       	ldi	r25, 0x00	; 0
    1f6a:	98 ab       	std	Y+48, r25	; 0x30
    1f6c:	8f a7       	std	Y+47, r24	; 0x2f
    1f6e:	3f c0       	rjmp	.+126    	; 0x1fee <H_LCD_Init+0x100>
	else if (__tmp > 65535)
    1f70:	69 a9       	ldd	r22, Y+49	; 0x31
    1f72:	7a a9       	ldd	r23, Y+50	; 0x32
    1f74:	8b a9       	ldd	r24, Y+51	; 0x33
    1f76:	9c a9       	ldd	r25, Y+52	; 0x34
    1f78:	20 e0       	ldi	r18, 0x00	; 0
    1f7a:	3f ef       	ldi	r19, 0xFF	; 255
    1f7c:	4f e7       	ldi	r20, 0x7F	; 127
    1f7e:	57 e4       	ldi	r21, 0x47	; 71
    1f80:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1f84:	18 16       	cp	r1, r24
    1f86:	4c f5       	brge	.+82     	; 0x1fda <H_LCD_Init+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f88:	6d a9       	ldd	r22, Y+53	; 0x35
    1f8a:	7e a9       	ldd	r23, Y+54	; 0x36
    1f8c:	8f a9       	ldd	r24, Y+55	; 0x37
    1f8e:	98 ad       	ldd	r25, Y+56	; 0x38
    1f90:	20 e0       	ldi	r18, 0x00	; 0
    1f92:	30 e0       	ldi	r19, 0x00	; 0
    1f94:	40 e2       	ldi	r20, 0x20	; 32
    1f96:	51 e4       	ldi	r21, 0x41	; 65
    1f98:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f9c:	dc 01       	movw	r26, r24
    1f9e:	cb 01       	movw	r24, r22
    1fa0:	bc 01       	movw	r22, r24
    1fa2:	cd 01       	movw	r24, r26
    1fa4:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fa8:	dc 01       	movw	r26, r24
    1faa:	cb 01       	movw	r24, r22
    1fac:	98 ab       	std	Y+48, r25	; 0x30
    1fae:	8f a7       	std	Y+47, r24	; 0x2f
    1fb0:	0f c0       	rjmp	.+30     	; 0x1fd0 <H_LCD_Init+0xe2>
    1fb2:	89 e1       	ldi	r24, 0x19	; 25
    1fb4:	90 e0       	ldi	r25, 0x00	; 0
    1fb6:	9e a7       	std	Y+46, r25	; 0x2e
    1fb8:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1fba:	8d a5       	ldd	r24, Y+45	; 0x2d
    1fbc:	9e a5       	ldd	r25, Y+46	; 0x2e
    1fbe:	01 97       	sbiw	r24, 0x01	; 1
    1fc0:	f1 f7       	brne	.-4      	; 0x1fbe <H_LCD_Init+0xd0>
    1fc2:	9e a7       	std	Y+46, r25	; 0x2e
    1fc4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fc6:	8f a5       	ldd	r24, Y+47	; 0x2f
    1fc8:	98 a9       	ldd	r25, Y+48	; 0x30
    1fca:	01 97       	sbiw	r24, 0x01	; 1
    1fcc:	98 ab       	std	Y+48, r25	; 0x30
    1fce:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fd0:	8f a5       	ldd	r24, Y+47	; 0x2f
    1fd2:	98 a9       	ldd	r25, Y+48	; 0x30
    1fd4:	00 97       	sbiw	r24, 0x00	; 0
    1fd6:	69 f7       	brne	.-38     	; 0x1fb2 <H_LCD_Init+0xc4>
    1fd8:	14 c0       	rjmp	.+40     	; 0x2002 <H_LCD_Init+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1fda:	69 a9       	ldd	r22, Y+49	; 0x31
    1fdc:	7a a9       	ldd	r23, Y+50	; 0x32
    1fde:	8b a9       	ldd	r24, Y+51	; 0x33
    1fe0:	9c a9       	ldd	r25, Y+52	; 0x34
    1fe2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fe6:	dc 01       	movw	r26, r24
    1fe8:	cb 01       	movw	r24, r22
    1fea:	98 ab       	std	Y+48, r25	; 0x30
    1fec:	8f a7       	std	Y+47, r24	; 0x2f
    1fee:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ff0:	98 a9       	ldd	r25, Y+48	; 0x30
    1ff2:	9c a7       	std	Y+44, r25	; 0x2c
    1ff4:	8b a7       	std	Y+43, r24	; 0x2b
    1ff6:	8b a5       	ldd	r24, Y+43	; 0x2b
    1ff8:	9c a5       	ldd	r25, Y+44	; 0x2c
    1ffa:	01 97       	sbiw	r24, 0x01	; 1
    1ffc:	f1 f7       	brne	.-4      	; 0x1ffa <H_LCD_Init+0x10c>
    1ffe:	9c a7       	std	Y+44, r25	; 0x2c
    2000:	8b a7       	std	Y+43, r24	; 0x2b
	//wait 40 ms
	_delay_ms(200);
	//1. set Function_Set command
	H_LCD_sendCommand(FUNCTION_SET);
    2002:	88 e3       	ldi	r24, 0x38	; 56
    2004:	0e 94 05 12 	call	0x240a	; 0x240a <H_LCD_sendCommand>
    2008:	80 e0       	ldi	r24, 0x00	; 0
    200a:	90 e0       	ldi	r25, 0x00	; 0
    200c:	a0 e0       	ldi	r26, 0x00	; 0
    200e:	b0 e4       	ldi	r27, 0x40	; 64
    2010:	8f a3       	std	Y+39, r24	; 0x27
    2012:	98 a7       	std	Y+40, r25	; 0x28
    2014:	a9 a7       	std	Y+41, r26	; 0x29
    2016:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2018:	6f a1       	ldd	r22, Y+39	; 0x27
    201a:	78 a5       	ldd	r23, Y+40	; 0x28
    201c:	89 a5       	ldd	r24, Y+41	; 0x29
    201e:	9a a5       	ldd	r25, Y+42	; 0x2a
    2020:	20 e0       	ldi	r18, 0x00	; 0
    2022:	30 e0       	ldi	r19, 0x00	; 0
    2024:	4a e7       	ldi	r20, 0x7A	; 122
    2026:	53 e4       	ldi	r21, 0x43	; 67
    2028:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    202c:	dc 01       	movw	r26, r24
    202e:	cb 01       	movw	r24, r22
    2030:	8b a3       	std	Y+35, r24	; 0x23
    2032:	9c a3       	std	Y+36, r25	; 0x24
    2034:	ad a3       	std	Y+37, r26	; 0x25
    2036:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2038:	6b a1       	ldd	r22, Y+35	; 0x23
    203a:	7c a1       	ldd	r23, Y+36	; 0x24
    203c:	8d a1       	ldd	r24, Y+37	; 0x25
    203e:	9e a1       	ldd	r25, Y+38	; 0x26
    2040:	20 e0       	ldi	r18, 0x00	; 0
    2042:	30 e0       	ldi	r19, 0x00	; 0
    2044:	40 e8       	ldi	r20, 0x80	; 128
    2046:	5f e3       	ldi	r21, 0x3F	; 63
    2048:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    204c:	88 23       	and	r24, r24
    204e:	2c f4       	brge	.+10     	; 0x205a <H_LCD_Init+0x16c>
		__ticks = 1;
    2050:	81 e0       	ldi	r24, 0x01	; 1
    2052:	90 e0       	ldi	r25, 0x00	; 0
    2054:	9a a3       	std	Y+34, r25	; 0x22
    2056:	89 a3       	std	Y+33, r24	; 0x21
    2058:	3f c0       	rjmp	.+126    	; 0x20d8 <H_LCD_Init+0x1ea>
	else if (__tmp > 65535)
    205a:	6b a1       	ldd	r22, Y+35	; 0x23
    205c:	7c a1       	ldd	r23, Y+36	; 0x24
    205e:	8d a1       	ldd	r24, Y+37	; 0x25
    2060:	9e a1       	ldd	r25, Y+38	; 0x26
    2062:	20 e0       	ldi	r18, 0x00	; 0
    2064:	3f ef       	ldi	r19, 0xFF	; 255
    2066:	4f e7       	ldi	r20, 0x7F	; 127
    2068:	57 e4       	ldi	r21, 0x47	; 71
    206a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    206e:	18 16       	cp	r1, r24
    2070:	4c f5       	brge	.+82     	; 0x20c4 <H_LCD_Init+0x1d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2072:	6f a1       	ldd	r22, Y+39	; 0x27
    2074:	78 a5       	ldd	r23, Y+40	; 0x28
    2076:	89 a5       	ldd	r24, Y+41	; 0x29
    2078:	9a a5       	ldd	r25, Y+42	; 0x2a
    207a:	20 e0       	ldi	r18, 0x00	; 0
    207c:	30 e0       	ldi	r19, 0x00	; 0
    207e:	40 e2       	ldi	r20, 0x20	; 32
    2080:	51 e4       	ldi	r21, 0x41	; 65
    2082:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2086:	dc 01       	movw	r26, r24
    2088:	cb 01       	movw	r24, r22
    208a:	bc 01       	movw	r22, r24
    208c:	cd 01       	movw	r24, r26
    208e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2092:	dc 01       	movw	r26, r24
    2094:	cb 01       	movw	r24, r22
    2096:	9a a3       	std	Y+34, r25	; 0x22
    2098:	89 a3       	std	Y+33, r24	; 0x21
    209a:	0f c0       	rjmp	.+30     	; 0x20ba <H_LCD_Init+0x1cc>
    209c:	89 e1       	ldi	r24, 0x19	; 25
    209e:	90 e0       	ldi	r25, 0x00	; 0
    20a0:	98 a3       	std	Y+32, r25	; 0x20
    20a2:	8f 8f       	std	Y+31, r24	; 0x1f
    20a4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    20a6:	98 a1       	ldd	r25, Y+32	; 0x20
    20a8:	01 97       	sbiw	r24, 0x01	; 1
    20aa:	f1 f7       	brne	.-4      	; 0x20a8 <H_LCD_Init+0x1ba>
    20ac:	98 a3       	std	Y+32, r25	; 0x20
    20ae:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20b0:	89 a1       	ldd	r24, Y+33	; 0x21
    20b2:	9a a1       	ldd	r25, Y+34	; 0x22
    20b4:	01 97       	sbiw	r24, 0x01	; 1
    20b6:	9a a3       	std	Y+34, r25	; 0x22
    20b8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20ba:	89 a1       	ldd	r24, Y+33	; 0x21
    20bc:	9a a1       	ldd	r25, Y+34	; 0x22
    20be:	00 97       	sbiw	r24, 0x00	; 0
    20c0:	69 f7       	brne	.-38     	; 0x209c <H_LCD_Init+0x1ae>
    20c2:	14 c0       	rjmp	.+40     	; 0x20ec <H_LCD_Init+0x1fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20c4:	6b a1       	ldd	r22, Y+35	; 0x23
    20c6:	7c a1       	ldd	r23, Y+36	; 0x24
    20c8:	8d a1       	ldd	r24, Y+37	; 0x25
    20ca:	9e a1       	ldd	r25, Y+38	; 0x26
    20cc:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    20d0:	dc 01       	movw	r26, r24
    20d2:	cb 01       	movw	r24, r22
    20d4:	9a a3       	std	Y+34, r25	; 0x22
    20d6:	89 a3       	std	Y+33, r24	; 0x21
    20d8:	89 a1       	ldd	r24, Y+33	; 0x21
    20da:	9a a1       	ldd	r25, Y+34	; 0x22
    20dc:	9e 8f       	std	Y+30, r25	; 0x1e
    20de:	8d 8f       	std	Y+29, r24	; 0x1d
    20e0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    20e2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    20e4:	01 97       	sbiw	r24, 0x01	; 1
    20e6:	f1 f7       	brne	.-4      	; 0x20e4 <H_LCD_Init+0x1f6>
    20e8:	9e 8f       	std	Y+30, r25	; 0x1e
    20ea:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(2);

	//2.send on/off instruction
	H_LCD_sendCommand(0B00001111);
    20ec:	8f e0       	ldi	r24, 0x0F	; 15
    20ee:	0e 94 05 12 	call	0x240a	; 0x240a <H_LCD_sendCommand>
    20f2:	80 e0       	ldi	r24, 0x00	; 0
    20f4:	90 e0       	ldi	r25, 0x00	; 0
    20f6:	a0 e0       	ldi	r26, 0x00	; 0
    20f8:	b0 e4       	ldi	r27, 0x40	; 64
    20fa:	89 8f       	std	Y+25, r24	; 0x19
    20fc:	9a 8f       	std	Y+26, r25	; 0x1a
    20fe:	ab 8f       	std	Y+27, r26	; 0x1b
    2100:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2102:	69 8d       	ldd	r22, Y+25	; 0x19
    2104:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2106:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2108:	9c 8d       	ldd	r25, Y+28	; 0x1c
    210a:	20 e0       	ldi	r18, 0x00	; 0
    210c:	30 e0       	ldi	r19, 0x00	; 0
    210e:	4a e7       	ldi	r20, 0x7A	; 122
    2110:	53 e4       	ldi	r21, 0x43	; 67
    2112:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2116:	dc 01       	movw	r26, r24
    2118:	cb 01       	movw	r24, r22
    211a:	8d 8b       	std	Y+21, r24	; 0x15
    211c:	9e 8b       	std	Y+22, r25	; 0x16
    211e:	af 8b       	std	Y+23, r26	; 0x17
    2120:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2122:	6d 89       	ldd	r22, Y+21	; 0x15
    2124:	7e 89       	ldd	r23, Y+22	; 0x16
    2126:	8f 89       	ldd	r24, Y+23	; 0x17
    2128:	98 8d       	ldd	r25, Y+24	; 0x18
    212a:	20 e0       	ldi	r18, 0x00	; 0
    212c:	30 e0       	ldi	r19, 0x00	; 0
    212e:	40 e8       	ldi	r20, 0x80	; 128
    2130:	5f e3       	ldi	r21, 0x3F	; 63
    2132:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2136:	88 23       	and	r24, r24
    2138:	2c f4       	brge	.+10     	; 0x2144 <H_LCD_Init+0x256>
		__ticks = 1;
    213a:	81 e0       	ldi	r24, 0x01	; 1
    213c:	90 e0       	ldi	r25, 0x00	; 0
    213e:	9c 8b       	std	Y+20, r25	; 0x14
    2140:	8b 8b       	std	Y+19, r24	; 0x13
    2142:	3f c0       	rjmp	.+126    	; 0x21c2 <H_LCD_Init+0x2d4>
	else if (__tmp > 65535)
    2144:	6d 89       	ldd	r22, Y+21	; 0x15
    2146:	7e 89       	ldd	r23, Y+22	; 0x16
    2148:	8f 89       	ldd	r24, Y+23	; 0x17
    214a:	98 8d       	ldd	r25, Y+24	; 0x18
    214c:	20 e0       	ldi	r18, 0x00	; 0
    214e:	3f ef       	ldi	r19, 0xFF	; 255
    2150:	4f e7       	ldi	r20, 0x7F	; 127
    2152:	57 e4       	ldi	r21, 0x47	; 71
    2154:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2158:	18 16       	cp	r1, r24
    215a:	4c f5       	brge	.+82     	; 0x21ae <H_LCD_Init+0x2c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    215c:	69 8d       	ldd	r22, Y+25	; 0x19
    215e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2160:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2162:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2164:	20 e0       	ldi	r18, 0x00	; 0
    2166:	30 e0       	ldi	r19, 0x00	; 0
    2168:	40 e2       	ldi	r20, 0x20	; 32
    216a:	51 e4       	ldi	r21, 0x41	; 65
    216c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2170:	dc 01       	movw	r26, r24
    2172:	cb 01       	movw	r24, r22
    2174:	bc 01       	movw	r22, r24
    2176:	cd 01       	movw	r24, r26
    2178:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    217c:	dc 01       	movw	r26, r24
    217e:	cb 01       	movw	r24, r22
    2180:	9c 8b       	std	Y+20, r25	; 0x14
    2182:	8b 8b       	std	Y+19, r24	; 0x13
    2184:	0f c0       	rjmp	.+30     	; 0x21a4 <H_LCD_Init+0x2b6>
    2186:	89 e1       	ldi	r24, 0x19	; 25
    2188:	90 e0       	ldi	r25, 0x00	; 0
    218a:	9a 8b       	std	Y+18, r25	; 0x12
    218c:	89 8b       	std	Y+17, r24	; 0x11
    218e:	89 89       	ldd	r24, Y+17	; 0x11
    2190:	9a 89       	ldd	r25, Y+18	; 0x12
    2192:	01 97       	sbiw	r24, 0x01	; 1
    2194:	f1 f7       	brne	.-4      	; 0x2192 <H_LCD_Init+0x2a4>
    2196:	9a 8b       	std	Y+18, r25	; 0x12
    2198:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    219a:	8b 89       	ldd	r24, Y+19	; 0x13
    219c:	9c 89       	ldd	r25, Y+20	; 0x14
    219e:	01 97       	sbiw	r24, 0x01	; 1
    21a0:	9c 8b       	std	Y+20, r25	; 0x14
    21a2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21a4:	8b 89       	ldd	r24, Y+19	; 0x13
    21a6:	9c 89       	ldd	r25, Y+20	; 0x14
    21a8:	00 97       	sbiw	r24, 0x00	; 0
    21aa:	69 f7       	brne	.-38     	; 0x2186 <H_LCD_Init+0x298>
    21ac:	14 c0       	rjmp	.+40     	; 0x21d6 <H_LCD_Init+0x2e8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21ae:	6d 89       	ldd	r22, Y+21	; 0x15
    21b0:	7e 89       	ldd	r23, Y+22	; 0x16
    21b2:	8f 89       	ldd	r24, Y+23	; 0x17
    21b4:	98 8d       	ldd	r25, Y+24	; 0x18
    21b6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    21ba:	dc 01       	movw	r26, r24
    21bc:	cb 01       	movw	r24, r22
    21be:	9c 8b       	std	Y+20, r25	; 0x14
    21c0:	8b 8b       	std	Y+19, r24	; 0x13
    21c2:	8b 89       	ldd	r24, Y+19	; 0x13
    21c4:	9c 89       	ldd	r25, Y+20	; 0x14
    21c6:	98 8b       	std	Y+16, r25	; 0x10
    21c8:	8f 87       	std	Y+15, r24	; 0x0f
    21ca:	8f 85       	ldd	r24, Y+15	; 0x0f
    21cc:	98 89       	ldd	r25, Y+16	; 0x10
    21ce:	01 97       	sbiw	r24, 0x01	; 1
    21d0:	f1 f7       	brne	.-4      	; 0x21ce <H_LCD_Init+0x2e0>
    21d2:	98 8b       	std	Y+16, r25	; 0x10
    21d4:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	//3.clear display
	H_LCD_sendCommand(CLEAR_DISPLAY);
    21d6:	81 e0       	ldi	r24, 0x01	; 1
    21d8:	0e 94 05 12 	call	0x240a	; 0x240a <H_LCD_sendCommand>
    21dc:	80 e0       	ldi	r24, 0x00	; 0
    21de:	90 e0       	ldi	r25, 0x00	; 0
    21e0:	a0 e0       	ldi	r26, 0x00	; 0
    21e2:	b0 e4       	ldi	r27, 0x40	; 64
    21e4:	8b 87       	std	Y+11, r24	; 0x0b
    21e6:	9c 87       	std	Y+12, r25	; 0x0c
    21e8:	ad 87       	std	Y+13, r26	; 0x0d
    21ea:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21ec:	6b 85       	ldd	r22, Y+11	; 0x0b
    21ee:	7c 85       	ldd	r23, Y+12	; 0x0c
    21f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    21f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    21f4:	20 e0       	ldi	r18, 0x00	; 0
    21f6:	30 e0       	ldi	r19, 0x00	; 0
    21f8:	4a e7       	ldi	r20, 0x7A	; 122
    21fa:	53 e4       	ldi	r21, 0x43	; 67
    21fc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2200:	dc 01       	movw	r26, r24
    2202:	cb 01       	movw	r24, r22
    2204:	8f 83       	std	Y+7, r24	; 0x07
    2206:	98 87       	std	Y+8, r25	; 0x08
    2208:	a9 87       	std	Y+9, r26	; 0x09
    220a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    220c:	6f 81       	ldd	r22, Y+7	; 0x07
    220e:	78 85       	ldd	r23, Y+8	; 0x08
    2210:	89 85       	ldd	r24, Y+9	; 0x09
    2212:	9a 85       	ldd	r25, Y+10	; 0x0a
    2214:	20 e0       	ldi	r18, 0x00	; 0
    2216:	30 e0       	ldi	r19, 0x00	; 0
    2218:	40 e8       	ldi	r20, 0x80	; 128
    221a:	5f e3       	ldi	r21, 0x3F	; 63
    221c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2220:	88 23       	and	r24, r24
    2222:	2c f4       	brge	.+10     	; 0x222e <H_LCD_Init+0x340>
		__ticks = 1;
    2224:	81 e0       	ldi	r24, 0x01	; 1
    2226:	90 e0       	ldi	r25, 0x00	; 0
    2228:	9e 83       	std	Y+6, r25	; 0x06
    222a:	8d 83       	std	Y+5, r24	; 0x05
    222c:	3f c0       	rjmp	.+126    	; 0x22ac <H_LCD_Init+0x3be>
	else if (__tmp > 65535)
    222e:	6f 81       	ldd	r22, Y+7	; 0x07
    2230:	78 85       	ldd	r23, Y+8	; 0x08
    2232:	89 85       	ldd	r24, Y+9	; 0x09
    2234:	9a 85       	ldd	r25, Y+10	; 0x0a
    2236:	20 e0       	ldi	r18, 0x00	; 0
    2238:	3f ef       	ldi	r19, 0xFF	; 255
    223a:	4f e7       	ldi	r20, 0x7F	; 127
    223c:	57 e4       	ldi	r21, 0x47	; 71
    223e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2242:	18 16       	cp	r1, r24
    2244:	4c f5       	brge	.+82     	; 0x2298 <H_LCD_Init+0x3aa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2246:	6b 85       	ldd	r22, Y+11	; 0x0b
    2248:	7c 85       	ldd	r23, Y+12	; 0x0c
    224a:	8d 85       	ldd	r24, Y+13	; 0x0d
    224c:	9e 85       	ldd	r25, Y+14	; 0x0e
    224e:	20 e0       	ldi	r18, 0x00	; 0
    2250:	30 e0       	ldi	r19, 0x00	; 0
    2252:	40 e2       	ldi	r20, 0x20	; 32
    2254:	51 e4       	ldi	r21, 0x41	; 65
    2256:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    225a:	dc 01       	movw	r26, r24
    225c:	cb 01       	movw	r24, r22
    225e:	bc 01       	movw	r22, r24
    2260:	cd 01       	movw	r24, r26
    2262:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2266:	dc 01       	movw	r26, r24
    2268:	cb 01       	movw	r24, r22
    226a:	9e 83       	std	Y+6, r25	; 0x06
    226c:	8d 83       	std	Y+5, r24	; 0x05
    226e:	0f c0       	rjmp	.+30     	; 0x228e <H_LCD_Init+0x3a0>
    2270:	89 e1       	ldi	r24, 0x19	; 25
    2272:	90 e0       	ldi	r25, 0x00	; 0
    2274:	9c 83       	std	Y+4, r25	; 0x04
    2276:	8b 83       	std	Y+3, r24	; 0x03
    2278:	8b 81       	ldd	r24, Y+3	; 0x03
    227a:	9c 81       	ldd	r25, Y+4	; 0x04
    227c:	01 97       	sbiw	r24, 0x01	; 1
    227e:	f1 f7       	brne	.-4      	; 0x227c <H_LCD_Init+0x38e>
    2280:	9c 83       	std	Y+4, r25	; 0x04
    2282:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2284:	8d 81       	ldd	r24, Y+5	; 0x05
    2286:	9e 81       	ldd	r25, Y+6	; 0x06
    2288:	01 97       	sbiw	r24, 0x01	; 1
    228a:	9e 83       	std	Y+6, r25	; 0x06
    228c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    228e:	8d 81       	ldd	r24, Y+5	; 0x05
    2290:	9e 81       	ldd	r25, Y+6	; 0x06
    2292:	00 97       	sbiw	r24, 0x00	; 0
    2294:	69 f7       	brne	.-38     	; 0x2270 <H_LCD_Init+0x382>
    2296:	14 c0       	rjmp	.+40     	; 0x22c0 <H_LCD_Init+0x3d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2298:	6f 81       	ldd	r22, Y+7	; 0x07
    229a:	78 85       	ldd	r23, Y+8	; 0x08
    229c:	89 85       	ldd	r24, Y+9	; 0x09
    229e:	9a 85       	ldd	r25, Y+10	; 0x0a
    22a0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    22a4:	dc 01       	movw	r26, r24
    22a6:	cb 01       	movw	r24, r22
    22a8:	9e 83       	std	Y+6, r25	; 0x06
    22aa:	8d 83       	std	Y+5, r24	; 0x05
    22ac:	8d 81       	ldd	r24, Y+5	; 0x05
    22ae:	9e 81       	ldd	r25, Y+6	; 0x06
    22b0:	9a 83       	std	Y+2, r25	; 0x02
    22b2:	89 83       	std	Y+1, r24	; 0x01
    22b4:	89 81       	ldd	r24, Y+1	; 0x01
    22b6:	9a 81       	ldd	r25, Y+2	; 0x02
    22b8:	01 97       	sbiw	r24, 0x01	; 1
    22ba:	f1 f7       	brne	.-4      	; 0x22b8 <H_LCD_Init+0x3ca>
    22bc:	9a 83       	std	Y+2, r25	; 0x02
    22be:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	//4.send entry mood
	H_LCD_sendCommand(0X06);
    22c0:	86 e0       	ldi	r24, 0x06	; 6
    22c2:	0e 94 05 12 	call	0x240a	; 0x240a <H_LCD_sendCommand>
}
    22c6:	e8 96       	adiw	r28, 0x38	; 56
    22c8:	0f b6       	in	r0, 0x3f	; 63
    22ca:	f8 94       	cli
    22cc:	de bf       	out	0x3e, r29	; 62
    22ce:	0f be       	out	0x3f, r0	; 63
    22d0:	cd bf       	out	0x3d, r28	; 61
    22d2:	cf 91       	pop	r28
    22d4:	df 91       	pop	r29
    22d6:	08 95       	ret

000022d8 <H_LCD_sendData>:

void H_LCD_sendData(u8 data){
    22d8:	df 93       	push	r29
    22da:	cf 93       	push	r28
    22dc:	cd b7       	in	r28, 0x3d	; 61
    22de:	de b7       	in	r29, 0x3e	; 62
    22e0:	2f 97       	sbiw	r28, 0x0f	; 15
    22e2:	0f b6       	in	r0, 0x3f	; 63
    22e4:	f8 94       	cli
    22e6:	de bf       	out	0x3e, r29	; 62
    22e8:	0f be       	out	0x3f, r0	; 63
    22ea:	cd bf       	out	0x3d, r28	; 61
    22ec:	8f 87       	std	Y+15, r24	; 0x0f
	//1. send data on data port
	M_DIO_SetPortValue(LCD_DATA_PORT,data);
    22ee:	80 e0       	ldi	r24, 0x00	; 0
    22f0:	6f 85       	ldd	r22, Y+15	; 0x0f
    22f2:	0e 94 81 0a 	call	0x1502	; 0x1502 <M_DIO_SetPortValue>

	//2.set RS to high
	M_DIO_SetPinValue(LCD_RS_PORT,LCD_RS_PIN,HIGH);
    22f6:	81 e0       	ldi	r24, 0x01	; 1
    22f8:	62 e0       	ldi	r22, 0x02	; 2
    22fa:	41 e0       	ldi	r20, 0x01	; 1
    22fc:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <M_DIO_SetPinValue>

	//3.send enable pulse
	M_DIO_SetPinValue(LCD_EN_PORT,LCD_EN_PIN,HIGH);
    2300:	81 e0       	ldi	r24, 0x01	; 1
    2302:	60 e0       	ldi	r22, 0x00	; 0
    2304:	41 e0       	ldi	r20, 0x01	; 1
    2306:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <M_DIO_SetPinValue>
    230a:	80 e0       	ldi	r24, 0x00	; 0
    230c:	90 e0       	ldi	r25, 0x00	; 0
    230e:	a0 e2       	ldi	r26, 0x20	; 32
    2310:	b1 e4       	ldi	r27, 0x41	; 65
    2312:	8b 87       	std	Y+11, r24	; 0x0b
    2314:	9c 87       	std	Y+12, r25	; 0x0c
    2316:	ad 87       	std	Y+13, r26	; 0x0d
    2318:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    231a:	6b 85       	ldd	r22, Y+11	; 0x0b
    231c:	7c 85       	ldd	r23, Y+12	; 0x0c
    231e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2320:	9e 85       	ldd	r25, Y+14	; 0x0e
    2322:	20 e0       	ldi	r18, 0x00	; 0
    2324:	30 e0       	ldi	r19, 0x00	; 0
    2326:	4a e7       	ldi	r20, 0x7A	; 122
    2328:	53 e4       	ldi	r21, 0x43	; 67
    232a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    232e:	dc 01       	movw	r26, r24
    2330:	cb 01       	movw	r24, r22
    2332:	8f 83       	std	Y+7, r24	; 0x07
    2334:	98 87       	std	Y+8, r25	; 0x08
    2336:	a9 87       	std	Y+9, r26	; 0x09
    2338:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    233a:	6f 81       	ldd	r22, Y+7	; 0x07
    233c:	78 85       	ldd	r23, Y+8	; 0x08
    233e:	89 85       	ldd	r24, Y+9	; 0x09
    2340:	9a 85       	ldd	r25, Y+10	; 0x0a
    2342:	20 e0       	ldi	r18, 0x00	; 0
    2344:	30 e0       	ldi	r19, 0x00	; 0
    2346:	40 e8       	ldi	r20, 0x80	; 128
    2348:	5f e3       	ldi	r21, 0x3F	; 63
    234a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    234e:	88 23       	and	r24, r24
    2350:	2c f4       	brge	.+10     	; 0x235c <H_LCD_sendData+0x84>
		__ticks = 1;
    2352:	81 e0       	ldi	r24, 0x01	; 1
    2354:	90 e0       	ldi	r25, 0x00	; 0
    2356:	9e 83       	std	Y+6, r25	; 0x06
    2358:	8d 83       	std	Y+5, r24	; 0x05
    235a:	3f c0       	rjmp	.+126    	; 0x23da <H_LCD_sendData+0x102>
	else if (__tmp > 65535)
    235c:	6f 81       	ldd	r22, Y+7	; 0x07
    235e:	78 85       	ldd	r23, Y+8	; 0x08
    2360:	89 85       	ldd	r24, Y+9	; 0x09
    2362:	9a 85       	ldd	r25, Y+10	; 0x0a
    2364:	20 e0       	ldi	r18, 0x00	; 0
    2366:	3f ef       	ldi	r19, 0xFF	; 255
    2368:	4f e7       	ldi	r20, 0x7F	; 127
    236a:	57 e4       	ldi	r21, 0x47	; 71
    236c:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2370:	18 16       	cp	r1, r24
    2372:	4c f5       	brge	.+82     	; 0x23c6 <H_LCD_sendData+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2374:	6b 85       	ldd	r22, Y+11	; 0x0b
    2376:	7c 85       	ldd	r23, Y+12	; 0x0c
    2378:	8d 85       	ldd	r24, Y+13	; 0x0d
    237a:	9e 85       	ldd	r25, Y+14	; 0x0e
    237c:	20 e0       	ldi	r18, 0x00	; 0
    237e:	30 e0       	ldi	r19, 0x00	; 0
    2380:	40 e2       	ldi	r20, 0x20	; 32
    2382:	51 e4       	ldi	r21, 0x41	; 65
    2384:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2388:	dc 01       	movw	r26, r24
    238a:	cb 01       	movw	r24, r22
    238c:	bc 01       	movw	r22, r24
    238e:	cd 01       	movw	r24, r26
    2390:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2394:	dc 01       	movw	r26, r24
    2396:	cb 01       	movw	r24, r22
    2398:	9e 83       	std	Y+6, r25	; 0x06
    239a:	8d 83       	std	Y+5, r24	; 0x05
    239c:	0f c0       	rjmp	.+30     	; 0x23bc <H_LCD_sendData+0xe4>
    239e:	89 e1       	ldi	r24, 0x19	; 25
    23a0:	90 e0       	ldi	r25, 0x00	; 0
    23a2:	9c 83       	std	Y+4, r25	; 0x04
    23a4:	8b 83       	std	Y+3, r24	; 0x03
    23a6:	8b 81       	ldd	r24, Y+3	; 0x03
    23a8:	9c 81       	ldd	r25, Y+4	; 0x04
    23aa:	01 97       	sbiw	r24, 0x01	; 1
    23ac:	f1 f7       	brne	.-4      	; 0x23aa <H_LCD_sendData+0xd2>
    23ae:	9c 83       	std	Y+4, r25	; 0x04
    23b0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23b2:	8d 81       	ldd	r24, Y+5	; 0x05
    23b4:	9e 81       	ldd	r25, Y+6	; 0x06
    23b6:	01 97       	sbiw	r24, 0x01	; 1
    23b8:	9e 83       	std	Y+6, r25	; 0x06
    23ba:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23bc:	8d 81       	ldd	r24, Y+5	; 0x05
    23be:	9e 81       	ldd	r25, Y+6	; 0x06
    23c0:	00 97       	sbiw	r24, 0x00	; 0
    23c2:	69 f7       	brne	.-38     	; 0x239e <H_LCD_sendData+0xc6>
    23c4:	14 c0       	rjmp	.+40     	; 0x23ee <H_LCD_sendData+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    23c6:	6f 81       	ldd	r22, Y+7	; 0x07
    23c8:	78 85       	ldd	r23, Y+8	; 0x08
    23ca:	89 85       	ldd	r24, Y+9	; 0x09
    23cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    23ce:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    23d2:	dc 01       	movw	r26, r24
    23d4:	cb 01       	movw	r24, r22
    23d6:	9e 83       	std	Y+6, r25	; 0x06
    23d8:	8d 83       	std	Y+5, r24	; 0x05
    23da:	8d 81       	ldd	r24, Y+5	; 0x05
    23dc:	9e 81       	ldd	r25, Y+6	; 0x06
    23de:	9a 83       	std	Y+2, r25	; 0x02
    23e0:	89 83       	std	Y+1, r24	; 0x01
    23e2:	89 81       	ldd	r24, Y+1	; 0x01
    23e4:	9a 81       	ldd	r25, Y+2	; 0x02
    23e6:	01 97       	sbiw	r24, 0x01	; 1
    23e8:	f1 f7       	brne	.-4      	; 0x23e6 <H_LCD_sendData+0x10e>
    23ea:	9a 83       	std	Y+2, r25	; 0x02
    23ec:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
	M_DIO_SetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
    23ee:	81 e0       	ldi	r24, 0x01	; 1
    23f0:	60 e0       	ldi	r22, 0x00	; 0
    23f2:	40 e0       	ldi	r20, 0x00	; 0
    23f4:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <M_DIO_SetPinValue>

}
    23f8:	2f 96       	adiw	r28, 0x0f	; 15
    23fa:	0f b6       	in	r0, 0x3f	; 63
    23fc:	f8 94       	cli
    23fe:	de bf       	out	0x3e, r29	; 62
    2400:	0f be       	out	0x3f, r0	; 63
    2402:	cd bf       	out	0x3d, r28	; 61
    2404:	cf 91       	pop	r28
    2406:	df 91       	pop	r29
    2408:	08 95       	ret

0000240a <H_LCD_sendCommand>:
void H_LCD_sendCommand(u8 command){
    240a:	df 93       	push	r29
    240c:	cf 93       	push	r28
    240e:	cd b7       	in	r28, 0x3d	; 61
    2410:	de b7       	in	r29, 0x3e	; 62
    2412:	2f 97       	sbiw	r28, 0x0f	; 15
    2414:	0f b6       	in	r0, 0x3f	; 63
    2416:	f8 94       	cli
    2418:	de bf       	out	0x3e, r29	; 62
    241a:	0f be       	out	0x3f, r0	; 63
    241c:	cd bf       	out	0x3d, r28	; 61
    241e:	8f 87       	std	Y+15, r24	; 0x0f
	//1. send data on data port
		M_DIO_SetPortValue(LCD_DATA_PORT,command);
    2420:	80 e0       	ldi	r24, 0x00	; 0
    2422:	6f 85       	ldd	r22, Y+15	; 0x0f
    2424:	0e 94 81 0a 	call	0x1502	; 0x1502 <M_DIO_SetPortValue>

		M_DIO_SetPinValue(LCD_RS_PORT,LCD_RS_PIN,LOW);
    2428:	81 e0       	ldi	r24, 0x01	; 1
    242a:	62 e0       	ldi	r22, 0x02	; 2
    242c:	40 e0       	ldi	r20, 0x00	; 0
    242e:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <M_DIO_SetPinValue>

		//4.send enable pulse
		M_DIO_SetPinValue(LCD_EN_PORT,LCD_EN_PIN,HIGH);
    2432:	81 e0       	ldi	r24, 0x01	; 1
    2434:	60 e0       	ldi	r22, 0x00	; 0
    2436:	41 e0       	ldi	r20, 0x01	; 1
    2438:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <M_DIO_SetPinValue>
    243c:	80 e0       	ldi	r24, 0x00	; 0
    243e:	90 e0       	ldi	r25, 0x00	; 0
    2440:	a0 e2       	ldi	r26, 0x20	; 32
    2442:	b1 e4       	ldi	r27, 0x41	; 65
    2444:	8b 87       	std	Y+11, r24	; 0x0b
    2446:	9c 87       	std	Y+12, r25	; 0x0c
    2448:	ad 87       	std	Y+13, r26	; 0x0d
    244a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    244c:	6b 85       	ldd	r22, Y+11	; 0x0b
    244e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2450:	8d 85       	ldd	r24, Y+13	; 0x0d
    2452:	9e 85       	ldd	r25, Y+14	; 0x0e
    2454:	20 e0       	ldi	r18, 0x00	; 0
    2456:	30 e0       	ldi	r19, 0x00	; 0
    2458:	4a e7       	ldi	r20, 0x7A	; 122
    245a:	53 e4       	ldi	r21, 0x43	; 67
    245c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2460:	dc 01       	movw	r26, r24
    2462:	cb 01       	movw	r24, r22
    2464:	8f 83       	std	Y+7, r24	; 0x07
    2466:	98 87       	std	Y+8, r25	; 0x08
    2468:	a9 87       	std	Y+9, r26	; 0x09
    246a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    246c:	6f 81       	ldd	r22, Y+7	; 0x07
    246e:	78 85       	ldd	r23, Y+8	; 0x08
    2470:	89 85       	ldd	r24, Y+9	; 0x09
    2472:	9a 85       	ldd	r25, Y+10	; 0x0a
    2474:	20 e0       	ldi	r18, 0x00	; 0
    2476:	30 e0       	ldi	r19, 0x00	; 0
    2478:	40 e8       	ldi	r20, 0x80	; 128
    247a:	5f e3       	ldi	r21, 0x3F	; 63
    247c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2480:	88 23       	and	r24, r24
    2482:	2c f4       	brge	.+10     	; 0x248e <H_LCD_sendCommand+0x84>
		__ticks = 1;
    2484:	81 e0       	ldi	r24, 0x01	; 1
    2486:	90 e0       	ldi	r25, 0x00	; 0
    2488:	9e 83       	std	Y+6, r25	; 0x06
    248a:	8d 83       	std	Y+5, r24	; 0x05
    248c:	3f c0       	rjmp	.+126    	; 0x250c <H_LCD_sendCommand+0x102>
	else if (__tmp > 65535)
    248e:	6f 81       	ldd	r22, Y+7	; 0x07
    2490:	78 85       	ldd	r23, Y+8	; 0x08
    2492:	89 85       	ldd	r24, Y+9	; 0x09
    2494:	9a 85       	ldd	r25, Y+10	; 0x0a
    2496:	20 e0       	ldi	r18, 0x00	; 0
    2498:	3f ef       	ldi	r19, 0xFF	; 255
    249a:	4f e7       	ldi	r20, 0x7F	; 127
    249c:	57 e4       	ldi	r21, 0x47	; 71
    249e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    24a2:	18 16       	cp	r1, r24
    24a4:	4c f5       	brge	.+82     	; 0x24f8 <H_LCD_sendCommand+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24a6:	6b 85       	ldd	r22, Y+11	; 0x0b
    24a8:	7c 85       	ldd	r23, Y+12	; 0x0c
    24aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    24ac:	9e 85       	ldd	r25, Y+14	; 0x0e
    24ae:	20 e0       	ldi	r18, 0x00	; 0
    24b0:	30 e0       	ldi	r19, 0x00	; 0
    24b2:	40 e2       	ldi	r20, 0x20	; 32
    24b4:	51 e4       	ldi	r21, 0x41	; 65
    24b6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    24ba:	dc 01       	movw	r26, r24
    24bc:	cb 01       	movw	r24, r22
    24be:	bc 01       	movw	r22, r24
    24c0:	cd 01       	movw	r24, r26
    24c2:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    24c6:	dc 01       	movw	r26, r24
    24c8:	cb 01       	movw	r24, r22
    24ca:	9e 83       	std	Y+6, r25	; 0x06
    24cc:	8d 83       	std	Y+5, r24	; 0x05
    24ce:	0f c0       	rjmp	.+30     	; 0x24ee <H_LCD_sendCommand+0xe4>
    24d0:	89 e1       	ldi	r24, 0x19	; 25
    24d2:	90 e0       	ldi	r25, 0x00	; 0
    24d4:	9c 83       	std	Y+4, r25	; 0x04
    24d6:	8b 83       	std	Y+3, r24	; 0x03
    24d8:	8b 81       	ldd	r24, Y+3	; 0x03
    24da:	9c 81       	ldd	r25, Y+4	; 0x04
    24dc:	01 97       	sbiw	r24, 0x01	; 1
    24de:	f1 f7       	brne	.-4      	; 0x24dc <H_LCD_sendCommand+0xd2>
    24e0:	9c 83       	std	Y+4, r25	; 0x04
    24e2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24e4:	8d 81       	ldd	r24, Y+5	; 0x05
    24e6:	9e 81       	ldd	r25, Y+6	; 0x06
    24e8:	01 97       	sbiw	r24, 0x01	; 1
    24ea:	9e 83       	std	Y+6, r25	; 0x06
    24ec:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24ee:	8d 81       	ldd	r24, Y+5	; 0x05
    24f0:	9e 81       	ldd	r25, Y+6	; 0x06
    24f2:	00 97       	sbiw	r24, 0x00	; 0
    24f4:	69 f7       	brne	.-38     	; 0x24d0 <H_LCD_sendCommand+0xc6>
    24f6:	14 c0       	rjmp	.+40     	; 0x2520 <H_LCD_sendCommand+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24f8:	6f 81       	ldd	r22, Y+7	; 0x07
    24fa:	78 85       	ldd	r23, Y+8	; 0x08
    24fc:	89 85       	ldd	r24, Y+9	; 0x09
    24fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    2500:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2504:	dc 01       	movw	r26, r24
    2506:	cb 01       	movw	r24, r22
    2508:	9e 83       	std	Y+6, r25	; 0x06
    250a:	8d 83       	std	Y+5, r24	; 0x05
    250c:	8d 81       	ldd	r24, Y+5	; 0x05
    250e:	9e 81       	ldd	r25, Y+6	; 0x06
    2510:	9a 83       	std	Y+2, r25	; 0x02
    2512:	89 83       	std	Y+1, r24	; 0x01
    2514:	89 81       	ldd	r24, Y+1	; 0x01
    2516:	9a 81       	ldd	r25, Y+2	; 0x02
    2518:	01 97       	sbiw	r24, 0x01	; 1
    251a:	f1 f7       	brne	.-4      	; 0x2518 <H_LCD_sendCommand+0x10e>
    251c:	9a 83       	std	Y+2, r25	; 0x02
    251e:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(10);
		M_DIO_SetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);
    2520:	81 e0       	ldi	r24, 0x01	; 1
    2522:	60 e0       	ldi	r22, 0x00	; 0
    2524:	40 e0       	ldi	r20, 0x00	; 0
    2526:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <M_DIO_SetPinValue>

}
    252a:	2f 96       	adiw	r28, 0x0f	; 15
    252c:	0f b6       	in	r0, 0x3f	; 63
    252e:	f8 94       	cli
    2530:	de bf       	out	0x3e, r29	; 62
    2532:	0f be       	out	0x3f, r0	; 63
    2534:	cd bf       	out	0x3d, r28	; 61
    2536:	cf 91       	pop	r28
    2538:	df 91       	pop	r29
    253a:	08 95       	ret

0000253c <H_LCD_sendString>:
void H_LCD_sendString(const u8 *str){
    253c:	df 93       	push	r29
    253e:	cf 93       	push	r28
    2540:	00 d0       	rcall	.+0      	; 0x2542 <H_LCD_sendString+0x6>
    2542:	cd b7       	in	r28, 0x3d	; 61
    2544:	de b7       	in	r29, 0x3e	; 62
    2546:	9a 83       	std	Y+2, r25	; 0x02
    2548:	89 83       	std	Y+1, r24	; 0x01
    254a:	0b c0       	rjmp	.+22     	; 0x2562 <H_LCD_sendString+0x26>
	while(*str !='\0')
		H_LCD_sendData(*str++);
    254c:	e9 81       	ldd	r30, Y+1	; 0x01
    254e:	fa 81       	ldd	r31, Y+2	; 0x02
    2550:	20 81       	ld	r18, Z
    2552:	89 81       	ldd	r24, Y+1	; 0x01
    2554:	9a 81       	ldd	r25, Y+2	; 0x02
    2556:	01 96       	adiw	r24, 0x01	; 1
    2558:	9a 83       	std	Y+2, r25	; 0x02
    255a:	89 83       	std	Y+1, r24	; 0x01
    255c:	82 2f       	mov	r24, r18
    255e:	0e 94 6c 11 	call	0x22d8	; 0x22d8 <H_LCD_sendData>
		_delay_ms(10);
		M_DIO_SetPinValue(LCD_EN_PORT,LCD_EN_PIN,LOW);

}
void H_LCD_sendString(const u8 *str){
	while(*str !='\0')
    2562:	e9 81       	ldd	r30, Y+1	; 0x01
    2564:	fa 81       	ldd	r31, Y+2	; 0x02
    2566:	80 81       	ld	r24, Z
    2568:	88 23       	and	r24, r24
    256a:	81 f7       	brne	.-32     	; 0x254c <H_LCD_sendString+0x10>
		H_LCD_sendData(*str++);
}
    256c:	0f 90       	pop	r0
    256e:	0f 90       	pop	r0
    2570:	cf 91       	pop	r28
    2572:	df 91       	pop	r29
    2574:	08 95       	ret

00002576 <H_keyPad_Init>:
 *
 *  Created on: Sep 5, 2024
 *      Author: Nourhan Mohamed Hassan
 */
#include "H_KeyPad.h"
void H_keyPad_Init(){
    2576:	df 93       	push	r29
    2578:	cf 93       	push	r28
    257a:	cd b7       	in	r28, 0x3d	; 61
    257c:	de b7       	in	r29, 0x3e	; 62

}
    257e:	cf 91       	pop	r28
    2580:	df 91       	pop	r29
    2582:	08 95       	ret

00002584 <delay>:
#define F_CPU 1000000UL
#include <util/delay.h>
#include <avr/interrupt.h>

void delay()
{
    2584:	df 93       	push	r29
    2586:	cf 93       	push	r28
    2588:	00 d0       	rcall	.+0      	; 0x258a <delay+0x6>
    258a:	cd b7       	in	r28, 0x3d	; 61
    258c:	de b7       	in	r29, 0x3e	; 62
	//for loop consists of 5 instruction assembly
	//5 *65535 /1000000 -> 1/3 second
	for (u16 i=0;i<65535;i++);
    258e:	1a 82       	std	Y+2, r1	; 0x02
    2590:	19 82       	std	Y+1, r1	; 0x01
    2592:	05 c0       	rjmp	.+10     	; 0x259e <delay+0x1a>
    2594:	89 81       	ldd	r24, Y+1	; 0x01
    2596:	9a 81       	ldd	r25, Y+2	; 0x02
    2598:	01 96       	adiw	r24, 0x01	; 1
    259a:	9a 83       	std	Y+2, r25	; 0x02
    259c:	89 83       	std	Y+1, r24	; 0x01
    259e:	89 81       	ldd	r24, Y+1	; 0x01
    25a0:	9a 81       	ldd	r25, Y+2	; 0x02
    25a2:	2f ef       	ldi	r18, 0xFF	; 255
    25a4:	8f 3f       	cpi	r24, 0xFF	; 255
    25a6:	92 07       	cpc	r25, r18
    25a8:	a9 f7       	brne	.-22     	; 0x2594 <delay+0x10>
}
    25aa:	0f 90       	pop	r0
    25ac:	0f 90       	pop	r0
    25ae:	cf 91       	pop	r28
    25b0:	df 91       	pop	r29
    25b2:	08 95       	ret

000025b4 <main>:
u8 volatile counter=0;
u8 volatile counter2=0;
int main()
{
    25b4:	df 93       	push	r29
    25b6:	cf 93       	push	r28
    25b8:	cd b7       	in	r28, 0x3d	; 61
    25ba:	de b7       	in	r29, 0x3e	; 62
    25bc:	6c 97       	sbiw	r28, 0x1c	; 28
    25be:	0f b6       	in	r0, 0x3f	; 63
    25c0:	f8 94       	cli
    25c2:	de bf       	out	0x3e, r29	; 62
    25c4:	0f be       	out	0x3f, r0	; 63
    25c6:	cd bf       	out	0x3d, r28	; 61
    H_SevenSegment_BCD_Init_HighNibble(PORT_C);
    25c8:	82 e0       	ldi	r24, 0x02	; 2
    25ca:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <H_SevenSegment_BCD_Init_HighNibble>
    M_DIO_SetPinDirection(PORT_C, PIN0, OUTPUT);  // Pin for Display 1
    25ce:	82 e0       	ldi	r24, 0x02	; 2
    25d0:	60 e0       	ldi	r22, 0x00	; 0
    25d2:	41 e0       	ldi	r20, 0x01	; 1
    25d4:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>
    M_DIO_SetPinDirection(PORT_C, PIN1, OUTPUT);  // Pin for Display 2
    25d8:	82 e0       	ldi	r24, 0x02	; 2
    25da:	61 e0       	ldi	r22, 0x01	; 1
    25dc:	41 e0       	ldi	r20, 0x01	; 1
    25de:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <M_DIO_SetPinDirection>

    while(1)
    {
    	counter2++;
    25e2:	80 91 7d 01 	lds	r24, 0x017D
    25e6:	8f 5f       	subi	r24, 0xFF	; 255
    25e8:	80 93 7d 01 	sts	0x017D, r24
        // Activate the first display (e.g., tens place)
        M_DIO_SetPinValue(PORT_C, PIN0, LOW); //7Seg1 ON
    25ec:	82 e0       	ldi	r24, 0x02	; 2
    25ee:	60 e0       	ldi	r22, 0x00	; 0
    25f0:	40 e0       	ldi	r20, 0x00	; 0
    25f2:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <M_DIO_SetPinValue>
        M_DIO_SetPinValue(PORT_C, PIN1, HIGH);//7Seg1 OFF
    25f6:	82 e0       	ldi	r24, 0x02	; 2
    25f8:	61 e0       	ldi	r22, 0x01	; 1
    25fa:	41 e0       	ldi	r20, 0x01	; 1
    25fc:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <M_DIO_SetPinValue>
        H_SevenSegment_BCD_HighNibble_Write(PORT_C, counter / 10);  // Write tens
    2600:	80 91 7c 01 	lds	r24, 0x017C
    2604:	9a e0       	ldi	r25, 0x0A	; 10
    2606:	69 2f       	mov	r22, r25
    2608:	0e 94 19 14 	call	0x2832	; 0x2832 <__udivmodqi4>
    260c:	98 2f       	mov	r25, r24
    260e:	82 e0       	ldi	r24, 0x02	; 2
    2610:	69 2f       	mov	r22, r25
    2612:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <H_SevenSegment_BCD_HighNibble_Write>
    2616:	80 e0       	ldi	r24, 0x00	; 0
    2618:	90 e0       	ldi	r25, 0x00	; 0
    261a:	a0 ea       	ldi	r26, 0xA0	; 160
    261c:	b1 e4       	ldi	r27, 0x41	; 65
    261e:	89 8f       	std	Y+25, r24	; 0x19
    2620:	9a 8f       	std	Y+26, r25	; 0x1a
    2622:	ab 8f       	std	Y+27, r26	; 0x1b
    2624:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2626:	69 8d       	ldd	r22, Y+25	; 0x19
    2628:	7a 8d       	ldd	r23, Y+26	; 0x1a
    262a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    262c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    262e:	20 e0       	ldi	r18, 0x00	; 0
    2630:	30 e0       	ldi	r19, 0x00	; 0
    2632:	4a e7       	ldi	r20, 0x7A	; 122
    2634:	53 e4       	ldi	r21, 0x43	; 67
    2636:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    263a:	dc 01       	movw	r26, r24
    263c:	cb 01       	movw	r24, r22
    263e:	8d 8b       	std	Y+21, r24	; 0x15
    2640:	9e 8b       	std	Y+22, r25	; 0x16
    2642:	af 8b       	std	Y+23, r26	; 0x17
    2644:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2646:	6d 89       	ldd	r22, Y+21	; 0x15
    2648:	7e 89       	ldd	r23, Y+22	; 0x16
    264a:	8f 89       	ldd	r24, Y+23	; 0x17
    264c:	98 8d       	ldd	r25, Y+24	; 0x18
    264e:	20 e0       	ldi	r18, 0x00	; 0
    2650:	30 e0       	ldi	r19, 0x00	; 0
    2652:	40 e8       	ldi	r20, 0x80	; 128
    2654:	5f e3       	ldi	r21, 0x3F	; 63
    2656:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    265a:	88 23       	and	r24, r24
    265c:	2c f4       	brge	.+10     	; 0x2668 <main+0xb4>
		__ticks = 1;
    265e:	81 e0       	ldi	r24, 0x01	; 1
    2660:	90 e0       	ldi	r25, 0x00	; 0
    2662:	9c 8b       	std	Y+20, r25	; 0x14
    2664:	8b 8b       	std	Y+19, r24	; 0x13
    2666:	3f c0       	rjmp	.+126    	; 0x26e6 <main+0x132>
	else if (__tmp > 65535)
    2668:	6d 89       	ldd	r22, Y+21	; 0x15
    266a:	7e 89       	ldd	r23, Y+22	; 0x16
    266c:	8f 89       	ldd	r24, Y+23	; 0x17
    266e:	98 8d       	ldd	r25, Y+24	; 0x18
    2670:	20 e0       	ldi	r18, 0x00	; 0
    2672:	3f ef       	ldi	r19, 0xFF	; 255
    2674:	4f e7       	ldi	r20, 0x7F	; 127
    2676:	57 e4       	ldi	r21, 0x47	; 71
    2678:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    267c:	18 16       	cp	r1, r24
    267e:	4c f5       	brge	.+82     	; 0x26d2 <main+0x11e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2680:	69 8d       	ldd	r22, Y+25	; 0x19
    2682:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2684:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2686:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2688:	20 e0       	ldi	r18, 0x00	; 0
    268a:	30 e0       	ldi	r19, 0x00	; 0
    268c:	40 e2       	ldi	r20, 0x20	; 32
    268e:	51 e4       	ldi	r21, 0x41	; 65
    2690:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2694:	dc 01       	movw	r26, r24
    2696:	cb 01       	movw	r24, r22
    2698:	bc 01       	movw	r22, r24
    269a:	cd 01       	movw	r24, r26
    269c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26a0:	dc 01       	movw	r26, r24
    26a2:	cb 01       	movw	r24, r22
    26a4:	9c 8b       	std	Y+20, r25	; 0x14
    26a6:	8b 8b       	std	Y+19, r24	; 0x13
    26a8:	0f c0       	rjmp	.+30     	; 0x26c8 <main+0x114>
    26aa:	89 e1       	ldi	r24, 0x19	; 25
    26ac:	90 e0       	ldi	r25, 0x00	; 0
    26ae:	9a 8b       	std	Y+18, r25	; 0x12
    26b0:	89 8b       	std	Y+17, r24	; 0x11
    26b2:	89 89       	ldd	r24, Y+17	; 0x11
    26b4:	9a 89       	ldd	r25, Y+18	; 0x12
    26b6:	01 97       	sbiw	r24, 0x01	; 1
    26b8:	f1 f7       	brne	.-4      	; 0x26b6 <main+0x102>
    26ba:	9a 8b       	std	Y+18, r25	; 0x12
    26bc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26be:	8b 89       	ldd	r24, Y+19	; 0x13
    26c0:	9c 89       	ldd	r25, Y+20	; 0x14
    26c2:	01 97       	sbiw	r24, 0x01	; 1
    26c4:	9c 8b       	std	Y+20, r25	; 0x14
    26c6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26c8:	8b 89       	ldd	r24, Y+19	; 0x13
    26ca:	9c 89       	ldd	r25, Y+20	; 0x14
    26cc:	00 97       	sbiw	r24, 0x00	; 0
    26ce:	69 f7       	brne	.-38     	; 0x26aa <main+0xf6>
    26d0:	14 c0       	rjmp	.+40     	; 0x26fa <main+0x146>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26d2:	6d 89       	ldd	r22, Y+21	; 0x15
    26d4:	7e 89       	ldd	r23, Y+22	; 0x16
    26d6:	8f 89       	ldd	r24, Y+23	; 0x17
    26d8:	98 8d       	ldd	r25, Y+24	; 0x18
    26da:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    26de:	dc 01       	movw	r26, r24
    26e0:	cb 01       	movw	r24, r22
    26e2:	9c 8b       	std	Y+20, r25	; 0x14
    26e4:	8b 8b       	std	Y+19, r24	; 0x13
    26e6:	8b 89       	ldd	r24, Y+19	; 0x13
    26e8:	9c 89       	ldd	r25, Y+20	; 0x14
    26ea:	98 8b       	std	Y+16, r25	; 0x10
    26ec:	8f 87       	std	Y+15, r24	; 0x0f
    26ee:	8f 85       	ldd	r24, Y+15	; 0x0f
    26f0:	98 89       	ldd	r25, Y+16	; 0x10
    26f2:	01 97       	sbiw	r24, 0x01	; 1
    26f4:	f1 f7       	brne	.-4      	; 0x26f2 <main+0x13e>
    26f6:	98 8b       	std	Y+16, r25	; 0x10
    26f8:	8f 87       	std	Y+15, r24	; 0x0f
        _delay_ms(20);  // Delay for multiplexing

        // Activate the second display (e.g., ones place)
        M_DIO_SetPinValue(PORT_C, PIN1, LOW); //7Seg2 ON
    26fa:	82 e0       	ldi	r24, 0x02	; 2
    26fc:	61 e0       	ldi	r22, 0x01	; 1
    26fe:	40 e0       	ldi	r20, 0x00	; 0
    2700:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <M_DIO_SetPinValue>
        M_DIO_SetPinValue(PORT_C, PIN0, HIGH);//7Seg1 OFF
    2704:	82 e0       	ldi	r24, 0x02	; 2
    2706:	60 e0       	ldi	r22, 0x00	; 0
    2708:	41 e0       	ldi	r20, 0x01	; 1
    270a:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <M_DIO_SetPinValue>
        H_SevenSegment_BCD_HighNibble_Write(PORT_C, counter % 10);  // Write ones
    270e:	80 91 7c 01 	lds	r24, 0x017C
    2712:	9a e0       	ldi	r25, 0x0A	; 10
    2714:	69 2f       	mov	r22, r25
    2716:	0e 94 19 14 	call	0x2832	; 0x2832 <__udivmodqi4>
    271a:	89 2f       	mov	r24, r25
    271c:	98 2f       	mov	r25, r24
    271e:	82 e0       	ldi	r24, 0x02	; 2
    2720:	69 2f       	mov	r22, r25
    2722:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <H_SevenSegment_BCD_HighNibble_Write>
    2726:	80 e0       	ldi	r24, 0x00	; 0
    2728:	90 e0       	ldi	r25, 0x00	; 0
    272a:	a0 ea       	ldi	r26, 0xA0	; 160
    272c:	b1 e4       	ldi	r27, 0x41	; 65
    272e:	8b 87       	std	Y+11, r24	; 0x0b
    2730:	9c 87       	std	Y+12, r25	; 0x0c
    2732:	ad 87       	std	Y+13, r26	; 0x0d
    2734:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2736:	6b 85       	ldd	r22, Y+11	; 0x0b
    2738:	7c 85       	ldd	r23, Y+12	; 0x0c
    273a:	8d 85       	ldd	r24, Y+13	; 0x0d
    273c:	9e 85       	ldd	r25, Y+14	; 0x0e
    273e:	20 e0       	ldi	r18, 0x00	; 0
    2740:	30 e0       	ldi	r19, 0x00	; 0
    2742:	4a e7       	ldi	r20, 0x7A	; 122
    2744:	53 e4       	ldi	r21, 0x43	; 67
    2746:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    274a:	dc 01       	movw	r26, r24
    274c:	cb 01       	movw	r24, r22
    274e:	8f 83       	std	Y+7, r24	; 0x07
    2750:	98 87       	std	Y+8, r25	; 0x08
    2752:	a9 87       	std	Y+9, r26	; 0x09
    2754:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2756:	6f 81       	ldd	r22, Y+7	; 0x07
    2758:	78 85       	ldd	r23, Y+8	; 0x08
    275a:	89 85       	ldd	r24, Y+9	; 0x09
    275c:	9a 85       	ldd	r25, Y+10	; 0x0a
    275e:	20 e0       	ldi	r18, 0x00	; 0
    2760:	30 e0       	ldi	r19, 0x00	; 0
    2762:	40 e8       	ldi	r20, 0x80	; 128
    2764:	5f e3       	ldi	r21, 0x3F	; 63
    2766:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    276a:	88 23       	and	r24, r24
    276c:	2c f4       	brge	.+10     	; 0x2778 <main+0x1c4>
		__ticks = 1;
    276e:	81 e0       	ldi	r24, 0x01	; 1
    2770:	90 e0       	ldi	r25, 0x00	; 0
    2772:	9e 83       	std	Y+6, r25	; 0x06
    2774:	8d 83       	std	Y+5, r24	; 0x05
    2776:	3f c0       	rjmp	.+126    	; 0x27f6 <main+0x242>
	else if (__tmp > 65535)
    2778:	6f 81       	ldd	r22, Y+7	; 0x07
    277a:	78 85       	ldd	r23, Y+8	; 0x08
    277c:	89 85       	ldd	r24, Y+9	; 0x09
    277e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2780:	20 e0       	ldi	r18, 0x00	; 0
    2782:	3f ef       	ldi	r19, 0xFF	; 255
    2784:	4f e7       	ldi	r20, 0x7F	; 127
    2786:	57 e4       	ldi	r21, 0x47	; 71
    2788:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    278c:	18 16       	cp	r1, r24
    278e:	4c f5       	brge	.+82     	; 0x27e2 <main+0x22e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2790:	6b 85       	ldd	r22, Y+11	; 0x0b
    2792:	7c 85       	ldd	r23, Y+12	; 0x0c
    2794:	8d 85       	ldd	r24, Y+13	; 0x0d
    2796:	9e 85       	ldd	r25, Y+14	; 0x0e
    2798:	20 e0       	ldi	r18, 0x00	; 0
    279a:	30 e0       	ldi	r19, 0x00	; 0
    279c:	40 e2       	ldi	r20, 0x20	; 32
    279e:	51 e4       	ldi	r21, 0x41	; 65
    27a0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    27a4:	dc 01       	movw	r26, r24
    27a6:	cb 01       	movw	r24, r22
    27a8:	bc 01       	movw	r22, r24
    27aa:	cd 01       	movw	r24, r26
    27ac:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27b0:	dc 01       	movw	r26, r24
    27b2:	cb 01       	movw	r24, r22
    27b4:	9e 83       	std	Y+6, r25	; 0x06
    27b6:	8d 83       	std	Y+5, r24	; 0x05
    27b8:	0f c0       	rjmp	.+30     	; 0x27d8 <main+0x224>
    27ba:	89 e1       	ldi	r24, 0x19	; 25
    27bc:	90 e0       	ldi	r25, 0x00	; 0
    27be:	9c 83       	std	Y+4, r25	; 0x04
    27c0:	8b 83       	std	Y+3, r24	; 0x03
    27c2:	8b 81       	ldd	r24, Y+3	; 0x03
    27c4:	9c 81       	ldd	r25, Y+4	; 0x04
    27c6:	01 97       	sbiw	r24, 0x01	; 1
    27c8:	f1 f7       	brne	.-4      	; 0x27c6 <main+0x212>
    27ca:	9c 83       	std	Y+4, r25	; 0x04
    27cc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27ce:	8d 81       	ldd	r24, Y+5	; 0x05
    27d0:	9e 81       	ldd	r25, Y+6	; 0x06
    27d2:	01 97       	sbiw	r24, 0x01	; 1
    27d4:	9e 83       	std	Y+6, r25	; 0x06
    27d6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27d8:	8d 81       	ldd	r24, Y+5	; 0x05
    27da:	9e 81       	ldd	r25, Y+6	; 0x06
    27dc:	00 97       	sbiw	r24, 0x00	; 0
    27de:	69 f7       	brne	.-38     	; 0x27ba <main+0x206>
    27e0:	14 c0       	rjmp	.+40     	; 0x280a <main+0x256>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27e2:	6f 81       	ldd	r22, Y+7	; 0x07
    27e4:	78 85       	ldd	r23, Y+8	; 0x08
    27e6:	89 85       	ldd	r24, Y+9	; 0x09
    27e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    27ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    27ee:	dc 01       	movw	r26, r24
    27f0:	cb 01       	movw	r24, r22
    27f2:	9e 83       	std	Y+6, r25	; 0x06
    27f4:	8d 83       	std	Y+5, r24	; 0x05
    27f6:	8d 81       	ldd	r24, Y+5	; 0x05
    27f8:	9e 81       	ldd	r25, Y+6	; 0x06
    27fa:	9a 83       	std	Y+2, r25	; 0x02
    27fc:	89 83       	std	Y+1, r24	; 0x01
    27fe:	89 81       	ldd	r24, Y+1	; 0x01
    2800:	9a 81       	ldd	r25, Y+2	; 0x02
    2802:	01 97       	sbiw	r24, 0x01	; 1
    2804:	f1 f7       	brne	.-4      	; 0x2802 <main+0x24e>
    2806:	9a 83       	std	Y+2, r25	; 0x02
    2808:	89 83       	std	Y+1, r24	; 0x01
        _delay_ms(20);  // Delay for multiplexing

if (counter2==8)
    280a:	80 91 7d 01 	lds	r24, 0x017D
    280e:	88 30       	cpi	r24, 0x08	; 8
    2810:	09 f0       	breq	.+2      	; 0x2814 <main+0x260>
    2812:	e7 ce       	rjmp	.-562    	; 0x25e2 <main+0x2e>
{
	counter=(counter+1)%100;
    2814:	80 91 7c 01 	lds	r24, 0x017C
    2818:	88 2f       	mov	r24, r24
    281a:	90 e0       	ldi	r25, 0x00	; 0
    281c:	01 96       	adiw	r24, 0x01	; 1
    281e:	24 e6       	ldi	r18, 0x64	; 100
    2820:	30 e0       	ldi	r19, 0x00	; 0
    2822:	b9 01       	movw	r22, r18
    2824:	0e 94 25 14 	call	0x284a	; 0x284a <__divmodhi4>
    2828:	80 93 7c 01 	sts	0x017C, r24
	counter2=0;
    282c:	10 92 7d 01 	sts	0x017D, r1
    2830:	d8 ce       	rjmp	.-592    	; 0x25e2 <main+0x2e>

00002832 <__udivmodqi4>:
    2832:	99 1b       	sub	r25, r25
    2834:	79 e0       	ldi	r23, 0x09	; 9
    2836:	04 c0       	rjmp	.+8      	; 0x2840 <__udivmodqi4_ep>

00002838 <__udivmodqi4_loop>:
    2838:	99 1f       	adc	r25, r25
    283a:	96 17       	cp	r25, r22
    283c:	08 f0       	brcs	.+2      	; 0x2840 <__udivmodqi4_ep>
    283e:	96 1b       	sub	r25, r22

00002840 <__udivmodqi4_ep>:
    2840:	88 1f       	adc	r24, r24
    2842:	7a 95       	dec	r23
    2844:	c9 f7       	brne	.-14     	; 0x2838 <__udivmodqi4_loop>
    2846:	80 95       	com	r24
    2848:	08 95       	ret

0000284a <__divmodhi4>:
    284a:	97 fb       	bst	r25, 7
    284c:	09 2e       	mov	r0, r25
    284e:	07 26       	eor	r0, r23
    2850:	0a d0       	rcall	.+20     	; 0x2866 <__divmodhi4_neg1>
    2852:	77 fd       	sbrc	r23, 7
    2854:	04 d0       	rcall	.+8      	; 0x285e <__divmodhi4_neg2>
    2856:	2e d0       	rcall	.+92     	; 0x28b4 <__udivmodhi4>
    2858:	06 d0       	rcall	.+12     	; 0x2866 <__divmodhi4_neg1>
    285a:	00 20       	and	r0, r0
    285c:	1a f4       	brpl	.+6      	; 0x2864 <__divmodhi4_exit>

0000285e <__divmodhi4_neg2>:
    285e:	70 95       	com	r23
    2860:	61 95       	neg	r22
    2862:	7f 4f       	sbci	r23, 0xFF	; 255

00002864 <__divmodhi4_exit>:
    2864:	08 95       	ret

00002866 <__divmodhi4_neg1>:
    2866:	f6 f7       	brtc	.-4      	; 0x2864 <__divmodhi4_exit>
    2868:	90 95       	com	r25
    286a:	81 95       	neg	r24
    286c:	9f 4f       	sbci	r25, 0xFF	; 255
    286e:	08 95       	ret

00002870 <__udivmodsi4>:
    2870:	a1 e2       	ldi	r26, 0x21	; 33
    2872:	1a 2e       	mov	r1, r26
    2874:	aa 1b       	sub	r26, r26
    2876:	bb 1b       	sub	r27, r27
    2878:	fd 01       	movw	r30, r26
    287a:	0d c0       	rjmp	.+26     	; 0x2896 <__udivmodsi4_ep>

0000287c <__udivmodsi4_loop>:
    287c:	aa 1f       	adc	r26, r26
    287e:	bb 1f       	adc	r27, r27
    2880:	ee 1f       	adc	r30, r30
    2882:	ff 1f       	adc	r31, r31
    2884:	a2 17       	cp	r26, r18
    2886:	b3 07       	cpc	r27, r19
    2888:	e4 07       	cpc	r30, r20
    288a:	f5 07       	cpc	r31, r21
    288c:	20 f0       	brcs	.+8      	; 0x2896 <__udivmodsi4_ep>
    288e:	a2 1b       	sub	r26, r18
    2890:	b3 0b       	sbc	r27, r19
    2892:	e4 0b       	sbc	r30, r20
    2894:	f5 0b       	sbc	r31, r21

00002896 <__udivmodsi4_ep>:
    2896:	66 1f       	adc	r22, r22
    2898:	77 1f       	adc	r23, r23
    289a:	88 1f       	adc	r24, r24
    289c:	99 1f       	adc	r25, r25
    289e:	1a 94       	dec	r1
    28a0:	69 f7       	brne	.-38     	; 0x287c <__udivmodsi4_loop>
    28a2:	60 95       	com	r22
    28a4:	70 95       	com	r23
    28a6:	80 95       	com	r24
    28a8:	90 95       	com	r25
    28aa:	9b 01       	movw	r18, r22
    28ac:	ac 01       	movw	r20, r24
    28ae:	bd 01       	movw	r22, r26
    28b0:	cf 01       	movw	r24, r30
    28b2:	08 95       	ret

000028b4 <__udivmodhi4>:
    28b4:	aa 1b       	sub	r26, r26
    28b6:	bb 1b       	sub	r27, r27
    28b8:	51 e1       	ldi	r21, 0x11	; 17
    28ba:	07 c0       	rjmp	.+14     	; 0x28ca <__udivmodhi4_ep>

000028bc <__udivmodhi4_loop>:
    28bc:	aa 1f       	adc	r26, r26
    28be:	bb 1f       	adc	r27, r27
    28c0:	a6 17       	cp	r26, r22
    28c2:	b7 07       	cpc	r27, r23
    28c4:	10 f0       	brcs	.+4      	; 0x28ca <__udivmodhi4_ep>
    28c6:	a6 1b       	sub	r26, r22
    28c8:	b7 0b       	sbc	r27, r23

000028ca <__udivmodhi4_ep>:
    28ca:	88 1f       	adc	r24, r24
    28cc:	99 1f       	adc	r25, r25
    28ce:	5a 95       	dec	r21
    28d0:	a9 f7       	brne	.-22     	; 0x28bc <__udivmodhi4_loop>
    28d2:	80 95       	com	r24
    28d4:	90 95       	com	r25
    28d6:	bc 01       	movw	r22, r24
    28d8:	cd 01       	movw	r24, r26
    28da:	08 95       	ret

000028dc <__prologue_saves__>:
    28dc:	2f 92       	push	r2
    28de:	3f 92       	push	r3
    28e0:	4f 92       	push	r4
    28e2:	5f 92       	push	r5
    28e4:	6f 92       	push	r6
    28e6:	7f 92       	push	r7
    28e8:	8f 92       	push	r8
    28ea:	9f 92       	push	r9
    28ec:	af 92       	push	r10
    28ee:	bf 92       	push	r11
    28f0:	cf 92       	push	r12
    28f2:	df 92       	push	r13
    28f4:	ef 92       	push	r14
    28f6:	ff 92       	push	r15
    28f8:	0f 93       	push	r16
    28fa:	1f 93       	push	r17
    28fc:	cf 93       	push	r28
    28fe:	df 93       	push	r29
    2900:	cd b7       	in	r28, 0x3d	; 61
    2902:	de b7       	in	r29, 0x3e	; 62
    2904:	ca 1b       	sub	r28, r26
    2906:	db 0b       	sbc	r29, r27
    2908:	0f b6       	in	r0, 0x3f	; 63
    290a:	f8 94       	cli
    290c:	de bf       	out	0x3e, r29	; 62
    290e:	0f be       	out	0x3f, r0	; 63
    2910:	cd bf       	out	0x3d, r28	; 61
    2912:	09 94       	ijmp

00002914 <__epilogue_restores__>:
    2914:	2a 88       	ldd	r2, Y+18	; 0x12
    2916:	39 88       	ldd	r3, Y+17	; 0x11
    2918:	48 88       	ldd	r4, Y+16	; 0x10
    291a:	5f 84       	ldd	r5, Y+15	; 0x0f
    291c:	6e 84       	ldd	r6, Y+14	; 0x0e
    291e:	7d 84       	ldd	r7, Y+13	; 0x0d
    2920:	8c 84       	ldd	r8, Y+12	; 0x0c
    2922:	9b 84       	ldd	r9, Y+11	; 0x0b
    2924:	aa 84       	ldd	r10, Y+10	; 0x0a
    2926:	b9 84       	ldd	r11, Y+9	; 0x09
    2928:	c8 84       	ldd	r12, Y+8	; 0x08
    292a:	df 80       	ldd	r13, Y+7	; 0x07
    292c:	ee 80       	ldd	r14, Y+6	; 0x06
    292e:	fd 80       	ldd	r15, Y+5	; 0x05
    2930:	0c 81       	ldd	r16, Y+4	; 0x04
    2932:	1b 81       	ldd	r17, Y+3	; 0x03
    2934:	aa 81       	ldd	r26, Y+2	; 0x02
    2936:	b9 81       	ldd	r27, Y+1	; 0x01
    2938:	ce 0f       	add	r28, r30
    293a:	d1 1d       	adc	r29, r1
    293c:	0f b6       	in	r0, 0x3f	; 63
    293e:	f8 94       	cli
    2940:	de bf       	out	0x3e, r29	; 62
    2942:	0f be       	out	0x3f, r0	; 63
    2944:	cd bf       	out	0x3d, r28	; 61
    2946:	ed 01       	movw	r28, r26
    2948:	08 95       	ret

0000294a <_exit>:
    294a:	f8 94       	cli

0000294c <__stop_program>:
    294c:	ff cf       	rjmp	.-2      	; 0x294c <__stop_program>
